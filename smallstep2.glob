DIGEST 92442aa5bae5c57cfbaec42e90c94679
Fsmallstep2
R62:76 Coq.Arith.Arith <> <> lib
R94:108 Coq.Arith.EqNat <> <> lib
R126:140 Coq.omega.Omega <> <> lib
R158:171 Coq.Lists.List <> <> lib
R212:215 maps <> <> lib
R234:236 imp <> <> lib
R254:256 rel <> <> lib
ind 270:271 <> tm
constr 287:287 <> C
constr 306:306 <> P
R294:297 Coq.Init.Logic <> :type_scope:x_'->'_x not
R298:299 smallstep2 <> tm ind
R291:293 Coq.Init.Datatypes <> nat ind
R312:315 Coq.Init.Logic <> :type_scope:x_'->'_x not
R318:321 Coq.Init.Logic <> :type_scope:x_'->'_x not
R322:323 smallstep2 <> tm ind
R316:317 smallstep2 <> tm ind
R310:311 smallstep2 <> tm ind
def 337:341 <> evalF
R346:347 smallstep2 <> tm ind
R352:354 Coq.Init.Datatypes <> nat ind
R365:365 smallstep2 <> t var
R374:374 smallstep2 <> C constr
R385:385 smallstep2 <> P constr
R404:406 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R396:400 smallstep2 <> evalF def
R407:411 smallstep2 <> evalF def
ind 501:504 <> eval
constr 530:536 <> E_Const
constr 564:569 <> E_Plus
R510:513 Coq.Init.Logic <> :type_scope:x_'->'_x not
R517:519 Coq.Init.Logic <> :type_scope:x_'->'_x not
R514:516 Coq.Init.Datatypes <> nat ind
R508:509 smallstep2 <> tm ind
R668:671 smallstep2 <> eval ind
R555:559 smallstep2 <> ::x_'==>'_x not
R552:552 smallstep2 <> C constr
R554:554 smallstep2 <> n var
R560:560 smallstep2 <> n var
R604:609 Coq.Init.Logic <> :type_scope:x_'->'_x not
R619:624 Coq.Init.Logic <> :type_scope:x_'->'_x not
R632:637 smallstep2 <> ::x_'==>'_x not
R643:643 smallstep2 <> ::x_'==>'_x not
R625:625 smallstep2 <> P constr
R630:631 smallstep2 <> t2 var
R627:628 smallstep2 <> t1 var
R640:640 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R638:639 smallstep2 <> n1 var
R641:642 smallstep2 <> n2 var
R612:616 smallstep2 <> ::x_'==>'_x not
R610:611 smallstep2 <> t2 var
R617:618 smallstep2 <> n2 var
R597:601 smallstep2 <> ::x_'==>'_x not
R595:596 smallstep2 <> t1 var
R602:603 smallstep2 <> n1 var
R668:671 smallstep2 <> eval ind
not 651:651 <> ::x_'==>'_x
mod 687:698 <> SimpleArith1
ind 761:764 SimpleArith1 step
constr 792:808 SimpleArith1 ST_PlusConstConst
constr 866:873 SimpleArith1 ST_Plus1
constr 948:955 SimpleArith1 ST_Plus2
R770:773 Coq.Init.Logic <> :type_scope:x_'->'_x not
R776:779 Coq.Init.Logic <> :type_scope:x_'->'_x not
R774:775 smallstep2 <> tm ind
R768:769 smallstep2 <> tm ind
R1059:1062 smallstep2 <> step ind
R848:852 smallstep2 SimpleArith1 ::x_'-->'_x not
R833:833 smallstep2 <> P constr
R843:843 smallstep2 <> C constr
R845:846 smallstep2 <> n2 var
R836:836 smallstep2 <> C constr
R838:839 smallstep2 <> n1 var
R853:853 smallstep2 <> C constr
R857:857 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R855:856 smallstep2 <> n1 var
R858:859 smallstep2 <> n2 var
R912:922 Coq.Init.Logic <> :type_scope:x_'->'_x not
R930:934 smallstep2 SimpleArith1 ::x_'-->'_x not
R923:923 smallstep2 <> P constr
R928:929 smallstep2 <> t2 var
R925:926 smallstep2 <> t1 var
R935:935 smallstep2 <> P constr
R941:942 smallstep2 <> t2 var
R937:939 smallstep2 <> t1' var
R904:908 smallstep2 SimpleArith1 ::x_'-->'_x not
R902:903 smallstep2 <> t1 var
R909:911 smallstep2 <> t1' var
R994:1004 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1016:1020 smallstep2 SimpleArith1 ::x_'-->'_x not
R1005:1005 smallstep2 <> P constr
R1014:1015 smallstep2 <> t2 var
R1008:1008 smallstep2 <> C constr
R1010:1011 smallstep2 <> n1 var
R1021:1021 smallstep2 <> P constr
R1030:1032 smallstep2 <> t2' var
R1024:1024 smallstep2 <> C constr
R1026:1027 smallstep2 <> n1 var
R986:990 smallstep2 SimpleArith1 ::x_'-->'_x not
R984:985 smallstep2 <> t2 var
R991:993 smallstep2 <> t2' var
R1059:1062 smallstep2 SimpleArith1 step ind
not 1040:1040 SimpleArith1 ::x_'-->'_x
def 1115:1125 SimpleArith1 test_step_2
R1204:1220 smallstep2 SimpleArith1 ::x_'-->'_x not
R1135:1135 smallstep2 <> P constr
R1160:1160 smallstep2 <> P constr
R1189:1189 smallstep2 <> P constr
R1198:1198 smallstep2 <> C constr
R1192:1192 smallstep2 <> C constr
R1173:1173 smallstep2 <> C constr
R1146:1146 smallstep2 <> C constr
R1221:1221 smallstep2 <> P constr
R1246:1246 smallstep2 <> P constr
R1275:1275 smallstep2 <> C constr
R1279:1281 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R1259:1259 smallstep2 <> C constr
R1232:1232 smallstep2 <> C constr
R1301:1308 smallstep2 SimpleArith1 ST_Plus2 constr
R1301:1308 smallstep2 SimpleArith1 ST_Plus2 constr
R1317:1324 smallstep2 SimpleArith1 ST_Plus2 constr
R1317:1324 smallstep2 SimpleArith1 ST_Plus2 constr
R1333:1349 smallstep2 SimpleArith1 ST_PlusConstConst constr
R1333:1349 smallstep2 SimpleArith1 ST_PlusConstConst constr
R1362:1373 smallstep2 SimpleArith1 <> mod
def 1388:1400 <> deterministic
R1418:1425 rel <> relation def
R1427:1427 smallstep2 <> X var
R1452:1452 smallstep2 <> X var
R1461:1464 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1471:1474 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1477:1479 Coq.Init.Logic <> :type_scope:x_'='_x not
R1475:1476 smallstep2 <> y1 var
R1480:1481 smallstep2 <> y2 var
R1465:1465 smallstep2 <> R var
R1469:1470 smallstep2 <> y2 var
R1467:1467 smallstep2 <> x var
R1455:1455 smallstep2 <> R var
R1459:1460 smallstep2 <> y1 var
R1457:1457 smallstep2 <> x var
mod 1491:1502 <> SimpleArith2
prf 1535:1552 SimpleArith2 step_deterministic
R1557:1569 smallstep2 <> deterministic def
R1571:1574 smallstep2 SimpleArith1 step ind
R1591:1603 smallstep2 <> deterministic def
R2050:2061 smallstep2 SimpleArith2 <> mod
ind 2558:2562 <> value
constr 2583:2589 <> v_const
R2568:2571 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2566:2567 smallstep2 <> tm ind
R2604:2608 smallstep2 <> value ind
R2611:2611 smallstep2 <> C constr
R2613:2613 smallstep2 <> n var
ind 2676:2679 <> step
constr 2707:2723 <> ST_PlusConstConst
constr 2793:2800 <> ST_Plus1
constr 2877:2884 <> ST_Plus2
R2685:2688 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2691:2694 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2689:2690 smallstep2 <> tm ind
R2683:2684 smallstep2 <> tm ind
R3021:3024 smallstep2 <> step ind
R2766:2776 smallstep2 <> ::x_'-->'_x not
R2751:2751 smallstep2 <> P constr
R2761:2761 smallstep2 <> C constr
R2763:2764 smallstep2 <> n2 var
R2754:2754 smallstep2 <> C constr
R2756:2757 smallstep2 <> n1 var
R2777:2777 smallstep2 <> C constr
R2782:2784 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R2780:2781 smallstep2 <> n1 var
R2785:2786 smallstep2 <> n2 var
R2840:2851 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2859:2863 smallstep2 <> ::x_'-->'_x not
R2852:2852 smallstep2 <> P constr
R2857:2858 smallstep2 <> t2 var
R2854:2855 smallstep2 <> t1 var
R2864:2864 smallstep2 <> P constr
R2870:2871 smallstep2 <> t2 var
R2866:2868 smallstep2 <> t1' var
R2832:2836 smallstep2 <> ::x_'-->'_x not
R2830:2831 smallstep2 <> t1 var
R2837:2839 smallstep2 <> t1' var
R2922:2949 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2960:2971 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2979:2983 smallstep2 <> ::x_'-->'_x not
R2972:2972 smallstep2 <> P constr
R2977:2978 smallstep2 <> t2 var
R2974:2975 smallstep2 <> v1 var
R2984:2984 smallstep2 <> P constr
R2989:2991 smallstep2 <> t2' var
R2986:2987 smallstep2 <> v1 var
R2952:2956 smallstep2 <> ::x_'-->'_x not
R2950:2951 smallstep2 <> t2 var
R2957:2959 smallstep2 <> t2' var
R2914:2918 smallstep2 <> value ind
R2920:2921 smallstep2 <> v1 var
R3021:3024 smallstep2 <> step ind
not 3002:3002 <> ::x_'-->'_x
prf 3042:3059 <> step_deterministic
R3065:3077 smallstep2 <> deterministic def
R3079:3082 smallstep2 <> step ind
R3099:3111 smallstep2 <> deterministic def
prf 3587:3601 <> strong_progress
R3624:3628 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R3648:3648 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R3617:3621 smallstep2 <> value ind
R3623:3623 smallstep2 <> t var
R3629:3635 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3638:3639 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3641:3645 smallstep2 <> ::x_'-->'_x not
R3640:3640 smallstep2 <> t var
R3646:3647 smallstep2 <> t' var
R3693:3699 smallstep2 <> v_const constr
R3693:3699 smallstep2 <> v_const constr
R3834:3834 smallstep2 <> C constr
R3837:3837 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3834:3834 smallstep2 <> C constr
R3837:3837 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R3852:3868 smallstep2 <> ST_PlusConstConst constr
R3852:3868 smallstep2 <> ST_PlusConstConst constr
R3900:3900 smallstep2 <> P constr
R3903:3903 smallstep2 <> C constr
R3900:3900 smallstep2 <> P constr
R3903:3903 smallstep2 <> C constr
R3922:3929 smallstep2 <> ST_Plus2 constr
R3922:3929 smallstep2 <> ST_Plus2 constr
R3941:3947 smallstep2 <> v_const constr
R3941:3947 smallstep2 <> v_const constr
R4015:4015 smallstep2 <> P constr
R4015:4015 smallstep2 <> P constr
R4034:4041 smallstep2 <> ST_Plus1 constr
R4034:4041 smallstep2 <> ST_Plus1 constr
R4068:4068 smallstep2 <> P constr
R4068:4068 smallstep2 <> P constr
R4089:4096 smallstep2 <> ST_Plus1 constr
R4089:4096 smallstep2 <> ST_Plus1 constr
def 4239:4249 <> normal_form
R4268:4275 rel <> relation def
R4277:4277 smallstep2 <> X var
R4285:4285 smallstep2 <> X var
R4300:4301 Coq.Init.Logic <> :type_scope:'~'_x not
R4302:4308 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4311:4312 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4313:4313 smallstep2 <> R var
R4317:4318 smallstep2 <> t' var
R4315:4315 smallstep2 <> t var
prf 4574:4584 <> value_is_nf
R4607:4610 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4611:4621 smallstep2 <> normal_form def
R4628:4628 smallstep2 <> v var
R4623:4626 smallstep2 <> step ind
R4600:4604 smallstep2 <> value ind
R4606:4606 smallstep2 <> v var
R4653:4663 smallstep2 <> normal_form def
R4673:4675 Coq.Init.Logic <> not def
prf 4760:4770 <> nf_is_value
R4804:4807 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4808:4812 smallstep2 <> value ind
R4814:4814 smallstep2 <> t var
R4786:4796 smallstep2 <> normal_form def
R4803:4803 smallstep2 <> t var
R4798:4801 smallstep2 <> step ind
R4831:4841 smallstep2 <> normal_form def
R4875:4879 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R4868:4872 smallstep2 <> value ind
R4880:4886 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4889:4890 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4892:4896 smallstep2 <> ::x_'-->'_x not
R4897:4898 smallstep2 <> t' var
R4875:4879 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R4868:4872 smallstep2 <> value ind
R4880:4886 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4889:4890 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R4892:4896 smallstep2 <> ::x_'-->'_x not
R4897:4898 smallstep2 <> t' var
R4910:4924 smallstep2 <> strong_progress thm
R4910:4924 smallstep2 <> strong_progress thm
R4967:4969 Coq.Init.Logic <> not def
prf 5012:5027 <> nf_same_as_value
R5061:5065 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R5043:5053 smallstep2 <> normal_form def
R5060:5060 smallstep2 <> t var
R5055:5058 smallstep2 <> step ind
R5066:5070 smallstep2 <> value ind
R5072:5072 smallstep2 <> t var
R5097:5107 smallstep2 <> nf_is_value thm
R5097:5107 smallstep2 <> nf_is_value thm
R5116:5126 smallstep2 <> value_is_nf thm
R5116:5126 smallstep2 <> value_is_nf thm
mod 5142:5146 <> Temp1
ind 5159:5163 Temp1 value
constr 5185:5191 Temp1 v_const
constr 5221:5227 Temp1 v_funny
R5169:5172 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5167:5168 smallstep2 <> tm ind
R5205:5209 smallstep2 <> value ind
R5212:5212 smallstep2 <> C constr
R5214:5214 smallstep2 <> n var
R5261:5265 smallstep2 <> value ind
R5268:5268 smallstep2 <> P constr
R5274:5274 smallstep2 <> C constr
R5276:5277 smallstep2 <> n2 var
R5270:5271 smallstep2 <> t1 var
ind 5341:5344 Temp1 step
constr 5372:5388 Temp1 ST_PlusConstConst
constr 5448:5455 Temp1 ST_Plus1
constr 5528:5535 Temp1 ST_Plus2
R5350:5353 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5356:5359 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5354:5355 smallstep2 <> tm ind
R5348:5349 smallstep2 <> tm ind
R5650:5653 smallstep2 <> step ind
R5427:5431 smallstep2 Temp1 ::x_'-->'_x not
R5412:5412 smallstep2 <> P constr
R5422:5422 smallstep2 <> C constr
R5424:5425 smallstep2 <> n2 var
R5415:5415 smallstep2 <> C constr
R5417:5418 smallstep2 <> n1 var
R5432:5432 smallstep2 <> C constr
R5437:5439 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5435:5436 smallstep2 <> n1 var
R5440:5441 smallstep2 <> n2 var
R5493:5502 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5510:5514 smallstep2 Temp1 ::x_'-->'_x not
R5503:5503 smallstep2 <> P constr
R5508:5509 smallstep2 <> t2 var
R5505:5506 smallstep2 <> t1 var
R5515:5515 smallstep2 <> P constr
R5521:5522 smallstep2 <> t2 var
R5517:5519 smallstep2 <> t1' var
R5485:5489 smallstep2 Temp1 ::x_'-->'_x not
R5483:5484 smallstep2 <> t1 var
R5490:5492 smallstep2 <> t1' var
R5571:5580 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5591:5600 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5608:5612 smallstep2 Temp1 ::x_'-->'_x not
R5601:5601 smallstep2 <> P constr
R5606:5607 smallstep2 <> t2 var
R5603:5604 smallstep2 <> v1 var
R5613:5613 smallstep2 <> P constr
R5618:5620 smallstep2 <> t2' var
R5615:5616 smallstep2 <> v1 var
R5583:5587 smallstep2 Temp1 ::x_'-->'_x not
R5581:5582 smallstep2 <> t2 var
R5588:5590 smallstep2 <> t2' var
R5563:5567 smallstep2 Temp1 value ind
R5569:5570 smallstep2 <> v1 var
R5650:5653 smallstep2 Temp1 step ind
not 5631:5631 Temp1 ::x_'-->'_x
prf 5669:5697 Temp1 value_not_same_as_normal_form
R5703:5709 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5711:5712 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R5720:5723 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5713:5717 smallstep2 Temp1 value ind
R5719:5719 smallstep2 <> v var
R5724:5725 Coq.Init.Logic <> :type_scope:'~'_x not
R5726:5736 smallstep2 <> normal_form def
R5743:5743 smallstep2 <> v var
R5738:5741 smallstep2 Temp1 step ind
R5760:5770 smallstep2 <> normal_form def
R5780:5782 Coq.Init.Logic <> not def
R5793:5793 smallstep2 <> P constr
R5802:5802 smallstep2 <> C constr
R5796:5796 smallstep2 <> C constr
R5793:5793 smallstep2 <> P constr
R5802:5802 smallstep2 <> C constr
R5796:5796 smallstep2 <> C constr
R5822:5828 smallstep2 Temp1 v_funny constr
R5822:5828 smallstep2 Temp1 v_funny constr
R5856:5856 smallstep2 <> C constr
R5860:5860 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5856:5856 smallstep2 <> C constr
R5860:5860 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5872:5888 smallstep2 Temp1 ST_PlusConstConst constr
R5872:5888 smallstep2 Temp1 ST_PlusConstConst constr
R5900:5904 smallstep2 Temp1 <> mod
mod 5914:5918 <> Temp2
ind 5931:5935 Temp2 value
constr 5957:5963 Temp2 v_const
R5941:5944 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5939:5940 smallstep2 <> tm ind
R5977:5981 smallstep2 <> value ind
R5984:5984 smallstep2 <> C constr
R5986:5986 smallstep2 <> n var
ind 6049:6052 Temp2 step
constr 6080:6087 Temp2 ST_Funny
constr 6148:6164 Temp2 ST_PlusConstConst
constr 6224:6231 Temp2 ST_Plus1
constr 6304:6311 Temp2 ST_Plus2
R6058:6061 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6064:6067 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6062:6063 smallstep2 <> tm ind
R6056:6057 smallstep2 <> tm ind
R6426:6429 smallstep2 <> step ind
R6110:6114 smallstep2 Temp2 ::x_'-->'_x not
R6107:6107 smallstep2 <> C constr
R6109:6109 smallstep2 <> n var
R6115:6115 smallstep2 <> P constr
R6124:6124 smallstep2 <> C constr
R6118:6118 smallstep2 <> C constr
R6120:6120 smallstep2 <> n var
R6203:6207 smallstep2 Temp2 ::x_'-->'_x not
R6188:6188 smallstep2 <> P constr
R6198:6198 smallstep2 <> C constr
R6200:6201 smallstep2 <> n2 var
R6191:6191 smallstep2 <> C constr
R6193:6194 smallstep2 <> n1 var
R6208:6208 smallstep2 <> C constr
R6213:6215 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6211:6212 smallstep2 <> n1 var
R6216:6217 smallstep2 <> n2 var
R6269:6278 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6286:6290 smallstep2 Temp2 ::x_'-->'_x not
R6279:6279 smallstep2 <> P constr
R6284:6285 smallstep2 <> t2 var
R6281:6282 smallstep2 <> t1 var
R6291:6291 smallstep2 <> P constr
R6297:6298 smallstep2 <> t2 var
R6293:6295 smallstep2 <> t1' var
R6261:6265 smallstep2 Temp2 ::x_'-->'_x not
R6259:6260 smallstep2 <> t1 var
R6266:6268 smallstep2 <> t1' var
R6347:6356 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6367:6376 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6384:6388 smallstep2 Temp2 ::x_'-->'_x not
R6377:6377 smallstep2 <> P constr
R6382:6383 smallstep2 <> t2 var
R6379:6380 smallstep2 <> v1 var
R6389:6389 smallstep2 <> P constr
R6394:6396 smallstep2 <> t2' var
R6391:6392 smallstep2 <> v1 var
R6359:6363 smallstep2 Temp2 ::x_'-->'_x not
R6357:6358 smallstep2 <> t2 var
R6364:6366 smallstep2 <> t2' var
R6339:6343 smallstep2 Temp2 value ind
R6345:6346 smallstep2 <> v1 var
R6426:6429 smallstep2 Temp2 step ind
not 6407:6407 Temp2 ::x_'-->'_x
prf 6445:6473 Temp2 value_not_same_as_normal_form
R6479:6485 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R6487:6488 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R6496:6500 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6489:6493 smallstep2 Temp2 value ind
R6495:6495 smallstep2 <> v var
R6501:6501 Coq.Init.Logic <> :type_scope:'~'_x not
R6502:6512 smallstep2 <> normal_form def
R6519:6519 smallstep2 <> v var
R6514:6517 smallstep2 Temp2 step ind
R6536:6546 smallstep2 <> normal_form def
R6556:6558 Coq.Init.Logic <> not def
R6570:6570 smallstep2 <> C constr
R6570:6570 smallstep2 <> C constr
R6589:6595 smallstep2 Temp2 v_const constr
R6589:6595 smallstep2 Temp2 v_const constr
R6623:6623 smallstep2 <> P constr
R6632:6632 smallstep2 <> C constr
R6626:6626 smallstep2 <> C constr
R6623:6623 smallstep2 <> P constr
R6632:6632 smallstep2 <> C constr
R6626:6626 smallstep2 <> C constr
R6645:6652 smallstep2 Temp2 ST_Funny constr
R6645:6652 smallstep2 Temp2 ST_Funny constr
R6665:6669 smallstep2 Temp2 <> mod
mod 6680:6684 <> Temp3
ind 6697:6701 Temp3 value
constr 6723:6729 Temp3 v_const
R6707:6710 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6705:6706 smallstep2 <> tm ind
R6743:6747 smallstep2 <> value ind
R6750:6750 smallstep2 <> C constr
R6752:6752 smallstep2 <> n var
ind 6814:6817 Temp3 step
constr 6845:6861 Temp3 ST_PlusConstConst
constr 6921:6928 Temp3 ST_Plus1
R6823:6826 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6829:6832 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6827:6828 smallstep2 <> tm ind
R6821:6822 smallstep2 <> tm ind
R7025:7028 smallstep2 <> step ind
R6900:6904 smallstep2 Temp3 ::x_'-->'_x not
R6885:6885 smallstep2 <> P constr
R6895:6895 smallstep2 <> C constr
R6897:6898 smallstep2 <> n2 var
R6888:6888 smallstep2 <> C constr
R6890:6891 smallstep2 <> n1 var
R6905:6905 smallstep2 <> C constr
R6910:6912 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6908:6909 smallstep2 <> n1 var
R6913:6914 smallstep2 <> n2 var
R6966:6975 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6983:6987 smallstep2 Temp3 ::x_'-->'_x not
R6976:6976 smallstep2 <> P constr
R6981:6982 smallstep2 <> t2 var
R6978:6979 smallstep2 <> t1 var
R6988:6988 smallstep2 <> P constr
R6994:6995 smallstep2 <> t2 var
R6990:6992 smallstep2 <> t1' var
R6958:6962 smallstep2 Temp3 ::x_'-->'_x not
R6956:6957 smallstep2 <> t1 var
R6963:6965 smallstep2 <> t1' var
R7025:7028 smallstep2 Temp3 step ind
not 7006:7006 Temp3 ::x_'-->'_x
prf 7044:7072 Temp3 value_not_same_as_normal_form
R7078:7084 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R7086:7087 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R7096:7099 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7088:7088 Coq.Init.Logic <> :type_scope:'~'_x not
R7089:7093 smallstep2 Temp3 value ind
R7095:7095 smallstep2 <> t var
R7100:7110 smallstep2 <> normal_form def
R7117:7117 smallstep2 <> t var
R7112:7115 smallstep2 Temp3 step ind
R7134:7144 smallstep2 <> normal_form def
R7154:7156 Coq.Init.Logic <> not def
R7167:7167 smallstep2 <> P constr
R7176:7176 smallstep2 <> P constr
R7185:7185 smallstep2 <> C constr
R7179:7179 smallstep2 <> C constr
R7170:7170 smallstep2 <> C constr
R7167:7167 smallstep2 <> P constr
R7176:7176 smallstep2 <> P constr
R7185:7185 smallstep2 <> C constr
R7179:7179 smallstep2 <> C constr
R7170:7170 smallstep2 <> C constr
R7280:7284 smallstep2 Temp3 <> mod
mod 7295:7299 <> Temp4
ind 7312:7313 Temp4 tm
constr 7329:7331 Temp4 tru
constr 7342:7344 Temp4 fls
constr 7355:7358 Temp4 test
R7335:7336 smallstep2 <> tm ind
R7348:7349 smallstep2 <> tm ind
R7364:7367 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7370:7373 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7376:7379 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7380:7381 smallstep2 <> tm ind
R7374:7375 smallstep2 <> tm ind
R7368:7369 smallstep2 <> tm ind
R7362:7363 smallstep2 <> tm ind
ind 7394:7398 Temp4 value
constr 7420:7424 Temp4 v_tru
constr 7442:7446 Temp4 v_fls
R7404:7407 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7402:7403 smallstep2 Temp4 tm ind
R7428:7432 smallstep2 <> value ind
R7434:7436 smallstep2 Temp4 tru constr
R7450:7454 smallstep2 <> value ind
R7456:7458 smallstep2 Temp4 fls constr
ind 7522:7525 Temp4 step
constr 7553:7561 Temp4 ST_IfTrue
constr 7611:7620 Temp4 ST_IfFalse
constr 7670:7674 Temp4 ST_If
R7531:7534 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7537:7540 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7535:7536 smallstep2 Temp4 tm ind
R7529:7530 smallstep2 Temp4 tm ind
R7784:7787 smallstep2 <> step ind
R7599:7603 smallstep2 Temp4 ::x_'-->'_x not
R7585:7588 smallstep2 Temp4 test constr
R7597:7598 smallstep2 <> t2 var
R7594:7595 smallstep2 <> t1 var
R7590:7592 smallstep2 Temp4 tru constr
R7604:7605 smallstep2 <> t1 var
R7658:7662 smallstep2 Temp4 ::x_'-->'_x not
R7644:7647 smallstep2 Temp4 test constr
R7656:7657 smallstep2 <> t2 var
R7653:7654 smallstep2 <> t1 var
R7649:7651 smallstep2 Temp4 fls constr
R7663:7664 smallstep2 <> t2 var
R7715:7724 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7738:7742 smallstep2 Temp4 ::x_'-->'_x not
R7725:7728 smallstep2 Temp4 test constr
R7736:7737 smallstep2 <> t3 var
R7733:7734 smallstep2 <> t2 var
R7730:7731 smallstep2 <> t1 var
R7743:7746 smallstep2 Temp4 test constr
R7755:7756 smallstep2 <> t3 var
R7752:7753 smallstep2 <> t2 var
R7748:7750 smallstep2 <> t1' var
R7707:7711 smallstep2 Temp4 ::x_'-->'_x not
R7705:7706 smallstep2 <> t1 var
R7712:7714 smallstep2 <> t1' var
R7784:7787 smallstep2 Temp4 step ind
not 7765:7765 Temp4 ::x_'-->'_x
prf 7805:7819 Temp4 strong_progress
R7842:7846 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R7866:7866 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R7835:7839 smallstep2 Temp4 value ind
R7841:7841 smallstep2 <> t var
R7847:7853 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R7856:7857 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R7859:7863 smallstep2 Temp4 ::x_'-->'_x not
R7858:7858 smallstep2 <> t var
R7864:7865 smallstep2 <> t' var
R7911:7915 smallstep2 Temp4 v_tru constr
R7911:7915 smallstep2 Temp4 v_tru constr
R7932:7936 smallstep2 Temp4 v_fls constr
R7932:7936 smallstep2 Temp4 v_fls constr
R8009:8017 smallstep2 Temp4 ST_IfTrue constr
R8009:8017 smallstep2 Temp4 ST_IfTrue constr
R8039:8048 smallstep2 Temp4 ST_IfFalse constr
R8039:8048 smallstep2 Temp4 ST_IfFalse constr
R8076:8079 smallstep2 Temp4 test constr
R8076:8079 smallstep2 Temp4 test constr
R8099:8103 smallstep2 Temp4 ST_If constr
R8099:8103 smallstep2 Temp4 ST_If constr
prf 8129:8146 Temp4 step_deterministic
R8152:8164 smallstep2 <> deterministic def
R8166:8169 smallstep2 Temp4 step ind
R8186:8198 smallstep2 <> deterministic def
mod 8507:8511 <> Temp4.Temp5
ind 8525:8528 Temp4.Temp5 step
constr 8556:8564 Temp4.Temp5 ST_IfTrue
constr 8614:8623 Temp4.Temp5 ST_IfFalse
constr 8673:8677 Temp4.Temp5 ST_If
constr 8765:8771 Temp4.Temp5 ST_Same
R8534:8537 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8540:8543 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8538:8539 smallstep2 Temp4 tm ind
R8532:8533 smallstep2 Temp4 tm ind
R8844:8847 smallstep2 <> step ind
R8602:8606 smallstep2 Temp4.Temp5 ::x_'-->'_x not
R8588:8591 smallstep2 Temp4 test constr
R8600:8601 smallstep2 <> t2 var
R8597:8598 smallstep2 <> t1 var
R8593:8595 smallstep2 Temp4 tru constr
R8607:8608 smallstep2 <> t1 var
R8661:8665 smallstep2 Temp4.Temp5 ::x_'-->'_x not
R8647:8650 smallstep2 Temp4 test constr
R8659:8660 smallstep2 <> t2 var
R8656:8657 smallstep2 <> t1 var
R8652:8654 smallstep2 Temp4 fls constr
R8666:8667 smallstep2 <> t2 var
R8718:8727 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8741:8745 smallstep2 Temp4.Temp5 ::x_'-->'_x not
R8728:8731 smallstep2 Temp4 test constr
R8739:8740 smallstep2 <> t3 var
R8736:8737 smallstep2 <> t2 var
R8733:8734 smallstep2 <> t1 var
R8746:8749 smallstep2 Temp4 test constr
R8758:8759 smallstep2 <> t3 var
R8755:8756 smallstep2 <> t2 var
R8751:8753 smallstep2 <> t1' var
R8710:8714 smallstep2 Temp4.Temp5 ::x_'-->'_x not
R8708:8709 smallstep2 <> t1 var
R8715:8717 smallstep2 <> t1' var
R8808:8812 smallstep2 Temp4.Temp5 ::x_'-->'_x not
R8795:8798 smallstep2 Temp4 test constr
R8806:8807 smallstep2 <> t2 var
R8803:8804 smallstep2 <> t2 var
R8800:8801 smallstep2 <> t1 var
R8813:8814 smallstep2 <> t2 var
R8844:8847 smallstep2 Temp4.Temp5 step ind
not 8825:8825 Temp4.Temp5 ::x_'-->'_x
R9791:9795 smallstep2 Temp4.Temp5 <> mod
R9802:9806 smallstep2 Temp4 <> mod
ind 9820:9824 <> multi
constr 9871:9880 <> multi_refl
constr 9916:9925 <> multi_step
R9839:9846 rel <> relation def
R9848:9848 smallstep2 <> X var
R9853:9860 rel <> relation def
R9896:9896 smallstep2 <> X var
R9900:9904 smallstep2 <> multi ind
R9910:9910 smallstep2 <> x var
R9908:9908 smallstep2 <> x var
R9906:9906 smallstep2 <> R var
R9900:9904 smallstep2 <> X var
R9945:9945 smallstep2 <> X var
R9974:9997 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10009:10032 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10033:10037 smallstep2 <> multi ind
R10043:10043 smallstep2 <> z var
R10041:10041 smallstep2 <> x var
R10039:10039 smallstep2 <> R var
R10033:10037 smallstep2 <> X var
R9998:10002 smallstep2 <> multi ind
R10008:10008 smallstep2 <> z var
R10006:10006 smallstep2 <> y var
R10004:10004 smallstep2 <> R var
R9998:10002 smallstep2 <> X var
R9969:9969 smallstep2 <> R var
R9973:9973 smallstep2 <> y var
R9971:9971 smallstep2 <> x var
R10077:10081 smallstep2 <> multi ind
R10083:10086 smallstep2 <> step ind
not 10056:10056 <> ::x_'==>*'_x
prf 10118:10124 <> multi_R
R10147:10154 rel <> relation def
R10156:10156 smallstep2 <> X var
R10166:10166 smallstep2 <> X var
R10182:10185 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10187:10191 smallstep2 <> multi ind
R10193:10193 smallstep2 <> R var
R10198:10198 smallstep2 <> y var
R10196:10196 smallstep2 <> x var
R10177:10177 smallstep2 <> R var
R10181:10181 smallstep2 <> y var
R10179:10179 smallstep2 <> x var
R10222:10231 smallstep2 <> multi_step constr
R10222:10231 smallstep2 <> multi_step constr
R10256:10265 smallstep2 <> multi_refl constr
R10256:10265 smallstep2 <> multi_refl constr
prf 10282:10292 <> multi_trans
R10321:10328 rel <> relation def
R10330:10330 smallstep2 <> X var
R10342:10342 smallstep2 <> X var
R10363:10372 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10384:10393 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10394:10398 smallstep2 <> multi ind
R10404:10404 smallstep2 <> z var
R10402:10402 smallstep2 <> x var
R10400:10400 smallstep2 <> R var
R10373:10377 smallstep2 <> multi ind
R10383:10383 smallstep2 <> z var
R10381:10381 smallstep2 <> y var
R10379:10379 smallstep2 <> R var
R10352:10356 smallstep2 <> multi ind
R10362:10362 smallstep2 <> y var
R10360:10360 smallstep2 <> x var
R10358:10358 smallstep2 <> R var
R10451:10460 smallstep2 <> multi_step constr
R10451:10460 smallstep2 <> multi_step constr
prf 10516:10531 <> test_multistep_1
R10589:10603 smallstep2 <> ::x_'==>*'_x not
R10540:10540 smallstep2 <> P constr
R10575:10575 smallstep2 <> P constr
R10584:10584 smallstep2 <> C constr
R10578:10578 smallstep2 <> C constr
R10551:10551 smallstep2 <> P constr
R10560:10560 smallstep2 <> C constr
R10554:10554 smallstep2 <> C constr
R10604:10604 smallstep2 <> C constr
R10607:10607 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R10613:10617 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R10623:10623 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R10609:10611 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R10619:10621 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R10671:10671 smallstep2 <> P constr
R10701:10701 smallstep2 <> P constr
R10710:10710 smallstep2 <> C constr
R10704:10704 smallstep2 <> C constr
R10674:10674 smallstep2 <> C constr
R10678:10680 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R10642:10651 smallstep2 <> multi_step constr
R10671:10671 smallstep2 <> P constr
R10701:10701 smallstep2 <> P constr
R10710:10710 smallstep2 <> C constr
R10704:10704 smallstep2 <> C constr
R10674:10674 smallstep2 <> C constr
R10678:10680 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R10642:10651 smallstep2 <> multi_step constr
R10724:10731 smallstep2 <> ST_Plus1 constr
R10724:10731 smallstep2 <> ST_Plus1 constr
R10741:10757 smallstep2 <> ST_PlusConstConst constr
R10741:10757 smallstep2 <> ST_PlusConstConst constr
R10784:10784 smallstep2 <> P constr
R10799:10799 smallstep2 <> C constr
R10803:10805 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R10787:10787 smallstep2 <> C constr
R10791:10793 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R10766:10775 smallstep2 <> multi_step constr
R10784:10784 smallstep2 <> P constr
R10799:10799 smallstep2 <> C constr
R10803:10805 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R10787:10787 smallstep2 <> C constr
R10791:10793 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R10766:10775 smallstep2 <> multi_step constr
R10818:10825 smallstep2 <> ST_Plus2 constr
R10818:10825 smallstep2 <> ST_Plus2 constr
R10834:10840 smallstep2 <> v_const constr
R10834:10840 smallstep2 <> v_const constr
R10849:10865 smallstep2 <> ST_PlusConstConst constr
R10849:10865 smallstep2 <> ST_PlusConstConst constr
R10874:10880 smallstep2 <> multi_R thm
R10874:10880 smallstep2 <> multi_R thm
R10889:10905 smallstep2 <> ST_PlusConstConst constr
R10889:10905 smallstep2 <> ST_PlusConstConst constr
def 10925:10940 <> step_normal_form
R10945:10955 smallstep2 <> normal_form def
R10957:10960 smallstep2 <> step ind
def 10974:10987 <> normal_form_of
R10997:10998 smallstep2 <> tm ind
R11016:11019 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11008:11013 smallstep2 <> ::x_'==>*'_x not
R11007:11007 smallstep2 <> t var
R11014:11015 smallstep2 <> t' var
R11020:11035 smallstep2 <> step_normal_form def
R11037:11038 smallstep2 <> t' var
prf 11051:11069 <> normal_forms_unique
R11074:11086 smallstep2 <> deterministic def
R11088:11101 smallstep2 <> normal_form_of def
R11118:11130 smallstep2 <> deterministic def
R11140:11153 smallstep2 <> normal_form_of def
def 11322:11332 <> normalizing
R11351:11358 rel <> relation def
R11360:11360 smallstep2 <> X var
R11378:11384 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11387:11392 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R11407:11410 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R11394:11398 smallstep2 <> multi ind
R11400:11400 smallstep2 <> R var
R11405:11406 smallstep2 <> t' var
R11403:11403 smallstep2 <> t var
R11411:11421 smallstep2 <> normal_form def
R11425:11426 smallstep2 <> t' var
R11423:11423 smallstep2 <> R var
prf 11436:11452 <> multistep_congr_1
R11490:11498 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11506:11511 smallstep2 <> ::x_'==>*'_x not
R11499:11499 smallstep2 <> P constr
R11504:11505 smallstep2 <> t2 var
R11501:11502 smallstep2 <> t1 var
R11512:11512 smallstep2 <> P constr
R11518:11519 smallstep2 <> t2 var
R11514:11516 smallstep2 <> t1' var
R11481:11486 smallstep2 <> ::x_'==>*'_x not
R11479:11480 smallstep2 <> t1 var
R11487:11489 smallstep2 <> t1' var
R11556:11565 smallstep2 <> multi_refl constr
R11556:11565 smallstep2 <> multi_refl constr
R11592:11592 smallstep2 <> P constr
R11574:11584 smallstep2 <> multi_trans thm
R11592:11592 smallstep2 <> P constr
R11574:11584 smallstep2 <> multi_trans thm
R11607:11613 smallstep2 <> multi_R thm
R11607:11613 smallstep2 <> multi_R thm
R11622:11629 smallstep2 <> ST_Plus1 constr
R11622:11629 smallstep2 <> ST_Plus1 constr
prf 11668:11684 <> multistep_congr_2
R11719:11727 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11739:11747 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11755:11760 smallstep2 <> ::x_'==>*'_x not
R11748:11748 smallstep2 <> P constr
R11753:11754 smallstep2 <> t2 var
R11750:11751 smallstep2 <> t1 var
R11761:11761 smallstep2 <> P constr
R11766:11768 smallstep2 <> t2' var
R11763:11764 smallstep2 <> t1 var
R11730:11735 smallstep2 <> ::x_'==>*'_x not
R11728:11729 smallstep2 <> t2 var
R11736:11738 smallstep2 <> t2' var
R11711:11715 smallstep2 <> value ind
R11717:11718 smallstep2 <> t1 var
R11806:11815 smallstep2 <> multi_refl constr
R11806:11815 smallstep2 <> multi_refl constr
R11842:11842 smallstep2 <> P constr
R11824:11834 smallstep2 <> multi_trans thm
R11842:11842 smallstep2 <> P constr
R11824:11834 smallstep2 <> multi_trans thm
R11857:11863 smallstep2 <> multi_R thm
R11857:11863 smallstep2 <> multi_R thm
R11872:11879 smallstep2 <> ST_Plus2 constr
R11872:11879 smallstep2 <> ST_Plus2 constr
prf 11930:11945 <> step_normalizing
R11951:11961 smallstep2 <> normalizing def
R11963:11966 smallstep2 <> step ind
R11983:11993 smallstep2 <> normalizing def
R12027:12027 smallstep2 <> C constr
R12027:12027 smallstep2 <> C constr
R12046:12055 smallstep2 <> multi_refl constr
R12046:12055 smallstep2 <> multi_refl constr
R12064:12079 smallstep2 <> nf_same_as_value thm
R12064:12079 smallstep2 <> nf_same_as_value thm
R12088:12094 smallstep2 <> v_const constr
R12088:12094 smallstep2 <> v_const constr
R12195:12210 smallstep2 <> nf_same_as_value thm
R12195:12210 smallstep2 <> nf_same_as_value thm
R12195:12210 smallstep2 <> nf_same_as_value thm
R12233:12248 smallstep2 <> nf_same_as_value thm
R12233:12248 smallstep2 <> nf_same_as_value thm
R12233:12248 smallstep2 <> nf_same_as_value thm
R12311:12311 smallstep2 <> C constr
R12314:12314 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12311:12311 smallstep2 <> C constr
R12314:12314 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R12352:12352 smallstep2 <> P constr
R12334:12344 smallstep2 <> multi_trans thm
R12352:12352 smallstep2 <> P constr
R12334:12344 smallstep2 <> multi_trans thm
R12369:12385 smallstep2 <> multistep_congr_1 thm
R12369:12385 smallstep2 <> multistep_congr_1 thm
R12427:12427 smallstep2 <> P constr
R12409:12419 smallstep2 <> multi_trans thm
R12427:12427 smallstep2 <> P constr
R12409:12419 smallstep2 <> multi_trans thm
R12445:12461 smallstep2 <> multistep_congr_2 thm
R12445:12461 smallstep2 <> multistep_congr_2 thm
R12530:12536 smallstep2 <> multi_R thm
R12530:12536 smallstep2 <> multi_R thm
R12545:12561 smallstep2 <> ST_PlusConstConst constr
R12545:12561 smallstep2 <> ST_PlusConstConst constr
R12570:12585 smallstep2 <> nf_same_as_value thm
R12570:12585 smallstep2 <> nf_same_as_value thm
R12594:12600 smallstep2 <> v_const constr
R12594:12600 smallstep2 <> v_const constr
prf 12617:12631 <> eval__multistep
R12656:12659 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12661:12666 smallstep2 <> ::x_'==>*'_x not
R12660:12660 smallstep2 <> t var
R12667:12667 smallstep2 <> C constr
R12669:12669 smallstep2 <> n var
R12650:12654 smallstep2 <> ::x_'==>'_x not
R12649:12649 smallstep2 <> t var
R12655:12655 smallstep2 <> n var
R12720:12729 smallstep2 <> multi_refl constr
R12720:12729 smallstep2 <> multi_refl constr
R12758:12758 smallstep2 <> P constr
R12761:12761 smallstep2 <> C constr
R12740:12750 smallstep2 <> multi_trans thm
R12758:12758 smallstep2 <> P constr
R12761:12761 smallstep2 <> C constr
R12740:12750 smallstep2 <> multi_trans thm
R12778:12794 smallstep2 <> multistep_congr_1 thm
R12778:12794 smallstep2 <> multistep_congr_1 thm
R12836:12836 smallstep2 <> P constr
R12846:12846 smallstep2 <> C constr
R12839:12839 smallstep2 <> C constr
R12818:12828 smallstep2 <> multi_trans thm
R12836:12836 smallstep2 <> P constr
R12846:12846 smallstep2 <> C constr
R12839:12839 smallstep2 <> C constr
R12818:12828 smallstep2 <> multi_trans thm
R12860:12876 smallstep2 <> multistep_congr_2 thm
R12860:12876 smallstep2 <> multistep_congr_2 thm
R12885:12891 smallstep2 <> v_const constr
R12885:12891 smallstep2 <> v_const constr
R12915:12921 smallstep2 <> multi_R thm
R12915:12921 smallstep2 <> multi_R thm
R12930:12946 smallstep2 <> ST_PlusConstConst constr
R12930:12946 smallstep2 <> ST_PlusConstConst constr
prf 12961:12970 <> step__eval
R13002:13010 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13019:13027 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13029:13033 smallstep2 <> ::x_'==>'_x not
R13028:13028 smallstep2 <> t var
R13034:13034 smallstep2 <> n var
R13013:13017 smallstep2 <> ::x_'==>'_x not
R13011:13012 smallstep2 <> t' var
R13018:13018 smallstep2 <> n var
R12995:12999 smallstep2 <> ::x_'-->'_x not
R12994:12994 smallstep2 <> t var
R13000:13001 smallstep2 <> t' var
R13159:13164 smallstep2 <> E_Plus constr
R13159:13164 smallstep2 <> E_Plus constr
R13175:13181 smallstep2 <> E_Const constr
R13175:13181 smallstep2 <> E_Const constr
R13192:13198 smallstep2 <> E_Const constr
R13192:13198 smallstep2 <> E_Const constr
R13232:13237 smallstep2 <> E_Plus constr
R13232:13237 smallstep2 <> E_Plus constr
R13308:13313 smallstep2 <> E_Plus constr
R13308:13313 smallstep2 <> E_Plus constr
prf 13368:13382 <> multistep__eval
R13420:13423 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13424:13430 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R13432:13434 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R13443:13446 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13437:13439 Coq.Init.Logic <> :type_scope:x_'='_x not
R13435:13436 smallstep2 <> t' var
R13440:13440 smallstep2 <> C constr
R13442:13442 smallstep2 <> n var
R13448:13452 smallstep2 <> ::x_'==>'_x not
R13447:13447 smallstep2 <> t var
R13453:13453 smallstep2 <> n var
R13401:13414 smallstep2 <> normal_form_of def
R13418:13419 smallstep2 <> t' var
R13416:13416 smallstep2 <> t var
R13479:13492 smallstep2 <> normal_form_of def
R13529:13544 smallstep2 <> step_normal_form def
R13561:13576 smallstep2 <> nf_same_as_value thm
R13561:13576 smallstep2 <> nf_same_as_value thm
R13561:13576 smallstep2 <> nf_same_as_value thm
R13664:13670 smallstep2 <> E_Const constr
R13664:13670 smallstep2 <> E_Const constr
R13681:13690 smallstep2 <> step__eval thm
R13681:13690 smallstep2 <> step__eval thm
prf 14015:14026 <> evalF_eval_1
R14051:14054 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14062:14064 Coq.Init.Logic <> :type_scope:x_'='_x not
R14055:14059 smallstep2 <> evalF def
R14061:14061 smallstep2 <> t var
R14065:14065 smallstep2 <> n var
R14045:14049 smallstep2 <> ::x_'==>'_x not
R14044:14044 smallstep2 <> t var
R14050:14050 smallstep2 <> n var
prf 14199:14210 <> evalF_eval_2
R14239:14242 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14244:14248 smallstep2 <> ::x_'==>'_x not
R14243:14243 smallstep2 <> t var
R14249:14249 smallstep2 <> n var
R14235:14237 Coq.Init.Logic <> :type_scope:x_'='_x not
R14228:14232 smallstep2 <> evalF def
R14234:14234 smallstep2 <> t var
R14238:14238 smallstep2 <> n var
R14309:14315 smallstep2 <> E_Const constr
R14309:14315 smallstep2 <> E_Const constr
R14333:14338 smallstep2 <> E_Plus constr
R14333:14338 smallstep2 <> E_Plus constr
prf 14382:14391 <> evalF_eval
R14420:14424 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R14416:14418 Coq.Init.Logic <> :type_scope:x_'='_x not
R14409:14413 smallstep2 <> evalF def
R14415:14415 smallstep2 <> t var
R14419:14419 smallstep2 <> n var
R14426:14430 smallstep2 <> ::x_'==>'_x not
R14425:14425 smallstep2 <> t var
R14431:14431 smallstep2 <> n var
R14462:14473 smallstep2 <> evalF_eval_2 thm
R14462:14473 smallstep2 <> evalF_eval_2 thm
R14482:14493 smallstep2 <> evalF_eval_1 thm
R14482:14493 smallstep2 <> evalF_eval_1 thm
mod 14509:14516 <> Combined
ind 14529:14530 Combined tm
constr 14546:14546 Combined C
constr 14564:14564 Combined P
constr 14587:14589 Combined tru
constr 14600:14602 Combined fls
constr 14613:14616 Combined test
R14553:14556 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14557:14558 smallstep2 <> tm ind
R14550:14552 Coq.Init.Datatypes <> nat ind
R14570:14573 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14576:14579 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14580:14581 smallstep2 <> tm ind
R14574:14575 smallstep2 <> tm ind
R14568:14569 smallstep2 <> tm ind
R14593:14594 smallstep2 <> tm ind
R14606:14607 smallstep2 <> tm ind
R14622:14625 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14628:14631 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14634:14637 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14638:14639 smallstep2 <> tm ind
R14632:14633 smallstep2 <> tm ind
R14626:14627 smallstep2 <> tm ind
R14620:14621 smallstep2 <> tm ind
ind 14652:14656 Combined value
constr 14678:14684 Combined v_const
constr 14714:14718 Combined v_tru
constr 14736:14740 Combined v_fls
R14662:14665 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14660:14661 smallstep2 Combined tm ind
R14698:14702 smallstep2 <> value ind
R14705:14705 smallstep2 Combined C constr
R14707:14707 smallstep2 <> n var
R14722:14726 smallstep2 <> value ind
R14728:14730 smallstep2 Combined tru constr
R14744:14748 smallstep2 <> value ind
R14750:14752 smallstep2 Combined fls constr
ind 14815:14818 Combined step
constr 14846:14862 Combined ST_PlusConstConst
constr 14922:14929 Combined ST_Plus1
constr 15002:15009 Combined ST_Plus2
constr 15100:15108 Combined ST_IfTrue
constr 15158:15167 Combined ST_IfFalse
constr 15217:15221 Combined ST_If
R14824:14827 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14830:14833 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14828:14829 smallstep2 Combined tm ind
R14822:14823 smallstep2 Combined tm ind
R15333:15336 smallstep2 <> step ind
R14901:14905 smallstep2 Combined ::x_'-->'_x not
R14886:14886 smallstep2 Combined P constr
R14896:14896 smallstep2 Combined C constr
R14898:14899 smallstep2 <> n2 var
R14889:14889 smallstep2 Combined C constr
R14891:14892 smallstep2 <> n1 var
R14906:14906 smallstep2 Combined C constr
R14911:14913 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14909:14910 smallstep2 <> n1 var
R14914:14915 smallstep2 <> n2 var
R14967:14976 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14984:14988 smallstep2 Combined ::x_'-->'_x not
R14977:14977 smallstep2 Combined P constr
R14982:14983 smallstep2 <> t2 var
R14979:14980 smallstep2 <> t1 var
R14989:14989 smallstep2 Combined P constr
R14995:14996 smallstep2 <> t2 var
R14991:14993 smallstep2 <> t1' var
R14959:14963 smallstep2 Combined ::x_'-->'_x not
R14957:14958 smallstep2 <> t1 var
R14964:14966 smallstep2 <> t1' var
R15045:15054 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15065:15074 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15082:15086 smallstep2 Combined ::x_'-->'_x not
R15075:15075 smallstep2 Combined P constr
R15080:15081 smallstep2 <> t2 var
R15077:15078 smallstep2 <> v1 var
R15087:15087 smallstep2 Combined P constr
R15092:15094 smallstep2 <> t2' var
R15089:15090 smallstep2 <> v1 var
R15057:15061 smallstep2 Combined ::x_'-->'_x not
R15055:15056 smallstep2 <> t2 var
R15062:15064 smallstep2 <> t2' var
R15037:15041 smallstep2 Combined value ind
R15043:15044 smallstep2 <> v1 var
R15146:15150 smallstep2 Combined ::x_'-->'_x not
R15132:15135 smallstep2 Combined test constr
R15144:15145 smallstep2 <> t2 var
R15141:15142 smallstep2 <> t1 var
R15137:15139 smallstep2 Combined tru constr
R15151:15152 smallstep2 <> t1 var
R15205:15209 smallstep2 Combined ::x_'-->'_x not
R15191:15194 smallstep2 Combined test constr
R15203:15204 smallstep2 <> t2 var
R15200:15201 smallstep2 <> t1 var
R15196:15198 smallstep2 Combined fls constr
R15210:15211 smallstep2 <> t2 var
R15262:15271 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15285:15289 smallstep2 Combined ::x_'-->'_x not
R15272:15275 smallstep2 Combined test constr
R15283:15284 smallstep2 <> t3 var
R15280:15281 smallstep2 <> t2 var
R15277:15278 smallstep2 <> t1 var
R15290:15293 smallstep2 Combined test constr
R15302:15303 smallstep2 <> t3 var
R15299:15300 smallstep2 <> t2 var
R15295:15297 smallstep2 <> t1' var
R15254:15258 smallstep2 Combined ::x_'-->'_x not
R15252:15253 smallstep2 <> t1 var
R15259:15261 smallstep2 <> t1' var
R15333:15336 smallstep2 Combined step ind
not 15314:15314 Combined ::x_'-->'_x
prf 15354:15371 Combined step_deterministic
R15377:15389 smallstep2 <> deterministic def
R15391:15394 smallstep2 Combined step ind
R15411:15423 smallstep2 <> deterministic def
prf 16280:16294 Combined strong_progress
R16317:16321 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R16341:16341 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R16310:16314 smallstep2 Combined value ind
R16316:16316 smallstep2 <> t var
R16322:16328 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16331:16332 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16334:16338 smallstep2 Combined ::x_'-->'_x not
R16333:16333 smallstep2 <> t var
R16339:16340 smallstep2 <> t' var
R16386:16392 smallstep2 Combined v_const constr
R16386:16392 smallstep2 Combined v_const constr
R16496:16496 smallstep2 Combined C constr
R16499:16499 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R16496:16496 smallstep2 Combined C constr
R16499:16499 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R16514:16530 smallstep2 Combined ST_PlusConstConst constr
R16514:16530 smallstep2 Combined ST_PlusConstConst constr
R16582:16589 smallstep2 Combined <> mod
ind 16603:16606 <> aval
constr 16630:16635 <> av_num
R16614:16617 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16610:16613 imp <> aexp ind
R16649:16652 smallstep2 <> aval ind
R16655:16658 imp <> ANum constr
R16660:16660 smallstep2 <> n var
ind 16764:16768 <> astep
constr 16809:16813 <> AS_Id
constr 16868:16875 <> AS_Plus1
constr 16975:16982 <> AS_Plus2
constr 17099:17105 <> AS_Plus
constr 17188:17196 <> AS_Minus1
constr 17298:17306 <> AS_Minus2
constr 17425:17432 <> AS_Minus
constr 17523:17530 <> AS_Mult1
constr 17630:17637 <> AS_Mult2
constr 17754:17760 <> AS_Mult
R16777:16780 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16785:16788 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16793:16796 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16789:16792 imp <> aexp ind
R16781:16784 imp <> aexp ind
R16772:16776 imp <> state def
R17883:17887 smallstep2 <> astep ind
R16841:16843 smallstep2 <> ::x_'/'_x_'-->a'_x not
R16846:16851 smallstep2 <> ::x_'/'_x_'-->a'_x not
R16844:16845 smallstep2 <> st var
R16836:16838 imp <> AId constr
R16840:16840 smallstep2 <> i var
R16852:16855 imp <> ANum constr
R16858:16859 smallstep2 <> st var
R16861:16861 smallstep2 <> i var
R16922:16931 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16932:16932 smallstep2 <> ::x_'/'_x_'-->a'_x not
R16944:16947 smallstep2 <> ::x_'/'_x_'-->a'_x not
R16950:16956 smallstep2 <> ::x_'/'_x_'-->a'_x not
R16969:16969 smallstep2 <> ::x_'/'_x_'-->a'_x not
R16948:16949 smallstep2 <> st var
R16933:16937 imp <> APlus constr
R16942:16943 smallstep2 <> a2 var
R16939:16940 smallstep2 <> a1 var
R16957:16961 imp <> APlus constr
R16967:16968 smallstep2 <> a2 var
R16963:16965 smallstep2 <> a1' var
R16908:16910 smallstep2 <> ::x_'/'_x_'-->a'_x not
R16913:16918 smallstep2 <> ::x_'/'_x_'-->a'_x not
R16911:16912 smallstep2 <> st var
R16906:16907 smallstep2 <> a1 var
R16919:16921 smallstep2 <> a1' var
R17020:17029 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17046:17055 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17056:17056 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17068:17071 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17074:17080 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17093:17093 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17072:17073 smallstep2 <> st var
R17057:17061 imp <> APlus constr
R17066:17067 smallstep2 <> a2 var
R17063:17064 smallstep2 <> v1 var
R17081:17085 imp <> APlus constr
R17090:17092 smallstep2 <> a2' var
R17087:17088 smallstep2 <> v1 var
R17032:17034 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17037:17042 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17035:17036 smallstep2 <> st var
R17030:17031 smallstep2 <> a2 var
R17043:17045 smallstep2 <> a2' var
R17013:17016 smallstep2 <> aval ind
R17018:17019 smallstep2 <> v1 var
R17157:17159 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17162:17168 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17160:17161 smallstep2 <> st var
R17132:17136 imp <> APlus constr
R17149:17152 imp <> ANum constr
R17154:17155 smallstep2 <> n2 var
R17139:17142 imp <> ANum constr
R17144:17145 smallstep2 <> n1 var
R17169:17172 imp <> ANum constr
R17177:17179 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R17175:17176 smallstep2 <> n1 var
R17180:17181 smallstep2 <> n2 var
R17243:17252 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17253:17253 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17266:17269 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17272:17278 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17292:17292 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17270:17271 smallstep2 <> st var
R17254:17259 imp <> AMinus constr
R17264:17265 smallstep2 <> a2 var
R17261:17262 smallstep2 <> a1 var
R17279:17284 imp <> AMinus constr
R17290:17291 smallstep2 <> a2 var
R17286:17288 smallstep2 <> a1' var
R17229:17231 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17234:17239 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17232:17233 smallstep2 <> st var
R17227:17228 smallstep2 <> a1 var
R17240:17242 smallstep2 <> a1' var
R17344:17353 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17370:17379 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17380:17380 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17393:17396 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17399:17405 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17419:17419 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17397:17398 smallstep2 <> st var
R17381:17386 imp <> AMinus constr
R17391:17392 smallstep2 <> a2 var
R17388:17389 smallstep2 <> v1 var
R17406:17411 imp <> AMinus constr
R17416:17418 smallstep2 <> a2' var
R17413:17414 smallstep2 <> v1 var
R17356:17358 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17361:17366 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17359:17360 smallstep2 <> st var
R17354:17355 smallstep2 <> a2 var
R17367:17369 smallstep2 <> a2' var
R17337:17340 smallstep2 <> aval ind
R17342:17343 smallstep2 <> v1 var
R17459:17459 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17486:17489 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17492:17498 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17517:17517 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17490:17491 smallstep2 <> st var
R17460:17465 imp <> AMinus constr
R17478:17481 imp <> ANum constr
R17483:17484 smallstep2 <> n2 var
R17468:17471 imp <> ANum constr
R17473:17474 smallstep2 <> n1 var
R17499:17502 imp <> ANum constr
R17505:17509 Coq.Init.Peano <> minus syndef
R17514:17515 smallstep2 <> n2 var
R17511:17512 smallstep2 <> n1 var
R17577:17586 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17587:17587 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17599:17602 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17605:17611 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17624:17624 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17603:17604 smallstep2 <> st var
R17588:17592 imp <> AMult constr
R17597:17598 smallstep2 <> a2 var
R17594:17595 smallstep2 <> a1 var
R17612:17616 imp <> AMult constr
R17622:17623 smallstep2 <> a2 var
R17618:17620 smallstep2 <> a1' var
R17563:17565 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17568:17573 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17566:17567 smallstep2 <> st var
R17561:17562 smallstep2 <> a1 var
R17574:17576 smallstep2 <> a1' var
R17675:17684 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17701:17710 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17711:17711 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17723:17726 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17729:17735 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17748:17748 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17727:17728 smallstep2 <> st var
R17712:17716 imp <> AMult constr
R17721:17722 smallstep2 <> a2 var
R17718:17719 smallstep2 <> v1 var
R17736:17740 imp <> AMult constr
R17745:17747 smallstep2 <> a2' var
R17742:17743 smallstep2 <> v1 var
R17687:17689 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17692:17697 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17690:17691 smallstep2 <> st var
R17685:17686 smallstep2 <> a2 var
R17698:17700 smallstep2 <> a2' var
R17668:17671 smallstep2 <> aval ind
R17673:17674 smallstep2 <> v1 var
R17787:17787 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17813:17816 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17819:17825 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17843:17843 smallstep2 <> ::x_'/'_x_'-->a'_x not
R17817:17818 smallstep2 <> st var
R17788:17792 imp <> AMult constr
R17805:17808 imp <> ANum constr
R17810:17811 smallstep2 <> n2 var
R17795:17798 imp <> ANum constr
R17800:17801 smallstep2 <> n1 var
R17826:17829 imp <> ANum constr
R17832:17835 Coq.Init.Peano <> mult syndef
R17840:17841 smallstep2 <> n2 var
R17837:17838 smallstep2 <> n1 var
R17883:17887 smallstep2 <> astep ind
not 17856:17856 <> ::x_'/'_x_'-->a'_x
ind 18000:18004 <> bstep
constr 18043:18048 <> BS_Eq1
constr 18138:18143 <> BS_Eq2
constr 18248:18252 <> BS_Eq
constr 18358:18365 <> BS_LtEq1
constr 18455:18462 <> BS_LtEq2
constr 18567:18573 <> BS_LtEq
constr 18689:18698 <> BS_NotStep
constr 18781:18790 <> BS_NotTrue
constr 18841:18851 <> BS_NotFalse
constr 18902:18915 <> BS_AndTrueStep
constr 19010:19019 <> BS_AndStep
constr 19111:19124 <> BS_AndTrueTrue
constr 19180:19194 <> BS_AndTrueFalse
constr 19252:19262 <> BS_AndFalse
R18013:18016 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18021:18024 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18029:18032 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18025:18028 imp <> bexp ind
R18017:18020 imp <> bexp ind
R18008:18012 imp <> state def
R19352:19356 smallstep2 <> bstep ind
R18093:18100 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18101:18101 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18111:18114 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18117:18123 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18134:18134 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18115:18116 smallstep2 <> st var
R18102:18104 imp <> BEq constr
R18109:18110 smallstep2 <> a2 var
R18106:18107 smallstep2 <> a1 var
R18124:18126 imp <> BEq constr
R18132:18133 smallstep2 <> a2 var
R18128:18130 smallstep2 <> a1' var
R18079:18081 smallstep2 <> ::x_'/'_x_'-->a'_x not
R18084:18089 smallstep2 <> ::x_'/'_x_'-->a'_x not
R18082:18083 smallstep2 <> st var
R18077:18078 smallstep2 <> a1 var
R18090:18092 smallstep2 <> a1' var
R18179:18186 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18203:18210 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18211:18211 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18221:18224 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18227:18233 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18244:18244 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18225:18226 smallstep2 <> st var
R18212:18214 imp <> BEq constr
R18219:18220 smallstep2 <> a2 var
R18216:18217 smallstep2 <> v1 var
R18234:18236 imp <> BEq constr
R18241:18243 smallstep2 <> a2' var
R18238:18239 smallstep2 <> v1 var
R18189:18191 smallstep2 <> ::x_'/'_x_'-->a'_x not
R18194:18199 smallstep2 <> ::x_'/'_x_'-->a'_x not
R18192:18193 smallstep2 <> st var
R18187:18188 smallstep2 <> a2 var
R18200:18202 smallstep2 <> a2' var
R18172:18175 smallstep2 <> aval ind
R18177:18178 smallstep2 <> v1 var
R18277:18277 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18301:18304 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18307:18317 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18354:18354 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18305:18306 smallstep2 <> st var
R18278:18280 imp <> BEq constr
R18293:18296 imp <> ANum constr
R18298:18299 smallstep2 <> n2 var
R18283:18286 imp <> ANum constr
R18288:18289 smallstep2 <> n1 var
R18324:18327 Coq.Arith.PeanoNat <> :nat_scope:x_'=?'_x not
R18322:18323 smallstep2 <> n1 var
R18328:18329 smallstep2 <> n2 var
R18348:18353 imp <> BFalse constr
R18337:18341 imp <> BTrue constr
R18410:18417 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18418:18418 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18428:18431 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18434:18440 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18451:18451 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18432:18433 smallstep2 <> st var
R18419:18421 imp <> BLe constr
R18426:18427 smallstep2 <> a2 var
R18423:18424 smallstep2 <> a1 var
R18441:18443 imp <> BLe constr
R18449:18450 smallstep2 <> a2 var
R18445:18447 smallstep2 <> a1' var
R18396:18398 smallstep2 <> ::x_'/'_x_'-->a'_x not
R18401:18406 smallstep2 <> ::x_'/'_x_'-->a'_x not
R18399:18400 smallstep2 <> st var
R18394:18395 smallstep2 <> a1 var
R18407:18409 smallstep2 <> a1' var
R18498:18505 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18522:18529 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18530:18530 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18540:18543 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18546:18552 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18563:18563 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18544:18545 smallstep2 <> st var
R18531:18533 imp <> BLe constr
R18538:18539 smallstep2 <> a2 var
R18535:18536 smallstep2 <> v1 var
R18553:18555 imp <> BLe constr
R18560:18562 smallstep2 <> a2' var
R18557:18558 smallstep2 <> v1 var
R18508:18510 smallstep2 <> ::x_'/'_x_'-->a'_x not
R18513:18518 smallstep2 <> ::x_'/'_x_'-->a'_x not
R18511:18512 smallstep2 <> st var
R18506:18507 smallstep2 <> a2 var
R18519:18521 smallstep2 <> a2' var
R18491:18494 smallstep2 <> aval ind
R18496:18497 smallstep2 <> v1 var
R18598:18598 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18622:18625 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18628:18647 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18685:18685 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18626:18627 smallstep2 <> st var
R18599:18601 imp <> BLe constr
R18614:18617 imp <> ANum constr
R18619:18620 smallstep2 <> n2 var
R18604:18607 imp <> ANum constr
R18609:18610 smallstep2 <> n1 var
R18654:18658 Coq.Arith.PeanoNat <> :nat_scope:x_'<=?'_x not
R18652:18653 smallstep2 <> n1 var
R18659:18660 smallstep2 <> n2 var
R18679:18684 imp <> BFalse constr
R18668:18672 imp <> BTrue constr
R18740:18747 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18748:18748 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18756:18759 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18762:18768 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18777:18777 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18760:18761 smallstep2 <> st var
R18749:18752 imp <> BNot constr
R18754:18755 smallstep2 <> b1 var
R18769:18772 imp <> BNot constr
R18774:18776 smallstep2 <> b1' var
R18726:18728 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18731:18736 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18729:18730 smallstep2 <> st var
R18724:18725 smallstep2 <> b1 var
R18737:18739 smallstep2 <> b1' var
R18809:18809 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18820:18823 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18826:18831 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18824:18825 smallstep2 <> st var
R18810:18813 imp <> BNot constr
R18815:18819 imp <> BTrue constr
R18832:18837 imp <> BFalse constr
R18870:18870 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18882:18885 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18888:18893 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18886:18887 smallstep2 <> st var
R18871:18874 imp <> BNot constr
R18876:18881 imp <> BFalse constr
R18894:18898 imp <> BTrue constr
R18957:18964 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18965:18965 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18979:18982 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18985:18991 smallstep2 <> ::x_'/'_x_'-->b'_x not
R19006:19006 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18983:18984 smallstep2 <> st var
R18966:18969 imp <> BAnd constr
R18977:18978 smallstep2 <> b2 var
R18971:18975 imp <> BTrue constr
R18992:18995 imp <> BAnd constr
R19003:19005 smallstep2 <> b2' var
R18997:19001 imp <> BTrue constr
R18943:18945 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18948:18953 smallstep2 <> ::x_'/'_x_'-->b'_x not
R18946:18947 smallstep2 <> st var
R18941:18942 smallstep2 <> b2 var
R18954:18956 smallstep2 <> b2' var
R19064:19071 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19072:19072 smallstep2 <> ::x_'/'_x_'-->b'_x not
R19083:19086 smallstep2 <> ::x_'/'_x_'-->b'_x not
R19089:19095 smallstep2 <> ::x_'/'_x_'-->b'_x not
R19107:19107 smallstep2 <> ::x_'/'_x_'-->b'_x not
R19087:19088 smallstep2 <> st var
R19073:19076 imp <> BAnd constr
R19081:19082 smallstep2 <> b2 var
R19078:19079 smallstep2 <> b1 var
R19096:19099 imp <> BAnd constr
R19105:19106 smallstep2 <> b2 var
R19101:19103 smallstep2 <> b1' var
R19050:19052 smallstep2 <> ::x_'/'_x_'-->b'_x not
R19055:19060 smallstep2 <> ::x_'/'_x_'-->b'_x not
R19053:19054 smallstep2 <> st var
R19048:19049 smallstep2 <> b1 var
R19061:19063 smallstep2 <> b1' var
R19143:19143 smallstep2 <> ::x_'/'_x_'-->b'_x not
R19160:19163 smallstep2 <> ::x_'/'_x_'-->b'_x not
R19166:19171 smallstep2 <> ::x_'/'_x_'-->b'_x not
R19164:19165 smallstep2 <> st var
R19144:19147 imp <> BAnd constr
R19155:19159 imp <> BTrue constr
R19149:19153 imp <> BTrue constr
R19172:19176 imp <> BTrue constr
R19213:19213 smallstep2 <> ::x_'/'_x_'-->b'_x not
R19231:19234 smallstep2 <> ::x_'/'_x_'-->b'_x not
R19237:19242 smallstep2 <> ::x_'/'_x_'-->b'_x not
R19235:19236 smallstep2 <> st var
R19214:19217 imp <> BAnd constr
R19225:19230 imp <> BFalse constr
R19219:19223 imp <> BTrue constr
R19243:19248 imp <> BFalse constr
R19284:19284 smallstep2 <> ::x_'/'_x_'-->b'_x not
R19299:19302 smallstep2 <> ::x_'/'_x_'-->b'_x not
R19305:19310 smallstep2 <> ::x_'/'_x_'-->b'_x not
R19303:19304 smallstep2 <> st var
R19285:19288 imp <> BAnd constr
R19297:19298 smallstep2 <> b2 var
R19290:19295 imp <> BFalse constr
R19311:19316 imp <> BFalse constr
R19352:19356 smallstep2 <> bstep ind
not 19325:19325 <> ::x_'/'_x_'-->b'_x
def 19380:19387 <> empty_st
R19401:19406 Coq.Strings.String <> string ind
def 19427:19435 <> extend_st
R19447:19451 imp <> state def
R19470:19475 Coq.Strings.String <> string ind
R19484:19493 maps <> beq_string def
R19497:19498 smallstep2 <> a' var
R19495:19495 smallstep2 <> a var
R19533:19534 smallstep2 <> st var
R19536:19536 smallstep2 <> a var
R19505:19505 smallstep2 <> x var
R19566:19574 smallstep2 <> extend_st def
R19580:19587 smallstep2 <> empty_st def
not 19550:19550 <> ::x_'!->'_x
R19638:19646 smallstep2 <> extend_st def
not 19616:19616 <> ::x_'!->'_x_';'_x
ind 19931:19935 <> cstep
constr 19985:19994 <> CS_AssStep
constr 20085:20090 <> CS_Ass
constr 20163:20172 <> CS_SeqStep
constr 20280:20291 <> CS_SeqFinish
constr 20349:20357 <> CS_IfStep
constr 20496:20504 <> CS_IfTrue
constr 20581:20590 <> CS_IfFalse
constr 20668:20675 <> CS_While
R19939:19939 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19951:19955 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19956:19956 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19968:19972 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19960:19962 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R19957:19959 imp <> com ind
R19963:19967 imp <> state def
R19943:19945 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R19940:19942 imp <> com ind
R19946:19950 imp <> state def
R20837:20841 smallstep2 <> cstep ind
R20850:20850 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20853:20853 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20857:20857 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20843:20843 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20845:20845 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20848:20848 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20036:20045 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20046:20046 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20054:20057 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20060:20065 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20074:20077 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20048:20052 imp <> :com_scope:x_'::='_x not
R20047:20047 smallstep2 <> i var
R20053:20053 smallstep2 <> a var
R20058:20059 smallstep2 <> st var
R20067:20071 imp <> :com_scope:x_'::='_x not
R20066:20066 smallstep2 <> i var
R20072:20073 smallstep2 <> a' var
R20078:20079 smallstep2 <> st var
R20023:20025 smallstep2 <> ::x_'/'_x_'-->a'_x not
R20028:20033 smallstep2 <> ::x_'/'_x_'-->a'_x not
R20026:20027 smallstep2 <> st var
R20022:20022 smallstep2 <> a var
R20034:20035 smallstep2 <> a' var
R20115:20115 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20130:20133 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20136:20140 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20145:20148 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20157:20157 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20117:20122 imp <> :com_scope:x_'::='_x not
R20129:20129 imp <> :com_scope:x_'::='_x not
R20116:20116 smallstep2 <> i var
R20123:20126 imp <> ANum constr
R20128:20128 smallstep2 <> n var
R20134:20135 smallstep2 <> st var
R20141:20144 imp <> :com_scope:'SKIP' not
R20150:20152 smallstep2 <> ::x_'!->'_x_';'_x not
R20154:20154 smallstep2 <> ::x_'!->'_x_';'_x not
R20149:20149 smallstep2 <> i var
R20153:20153 smallstep2 <> n var
R20155:20156 smallstep2 <> st var
R20228:20237 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20238:20238 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20247:20250 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20253:20258 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20268:20271 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20241:20244 imp <> :com_scope:x_';;'_x not
R20239:20240 smallstep2 <> c1 var
R20245:20246 smallstep2 <> c2 var
R20251:20252 smallstep2 <> st var
R20262:20265 imp <> :com_scope:x_';;'_x not
R20259:20261 smallstep2 <> c1' var
R20266:20267 smallstep2 <> c2 var
R20272:20274 smallstep2 <> st' var
R20209:20211 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20214:20218 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20222:20224 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20207:20208 smallstep2 <> c1 var
R20212:20213 smallstep2 <> st var
R20219:20221 smallstep2 <> c1' var
R20225:20227 smallstep2 <> st' var
R20315:20315 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20326:20329 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20332:20336 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20339:20341 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20320:20323 imp <> :com_scope:x_';;'_x not
R20316:20319 imp <> :com_scope:'SKIP' not
R20324:20325 smallstep2 <> c2 var
R20330:20331 smallstep2 <> st var
R20337:20338 smallstep2 <> c2 var
R20342:20343 smallstep2 <> st var
R20403:20412 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20437:20439 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20442:20459 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20485:20488 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20413:20416 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R20418:20423 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R20426:20431 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R20434:20436 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R20417:20417 smallstep2 <> b var
R20424:20425 smallstep2 <> c1 var
R20432:20433 smallstep2 <> c2 var
R20440:20441 smallstep2 <> st var
R20460:20463 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R20466:20471 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R20474:20479 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R20482:20484 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R20464:20465 smallstep2 <> b' var
R20472:20473 smallstep2 <> c1 var
R20480:20481 smallstep2 <> c2 var
R20489:20490 smallstep2 <> st var
R20390:20392 smallstep2 <> ::x_'/'_x_'-->b'_x not
R20395:20400 smallstep2 <> ::x_'/'_x_'-->b'_x not
R20393:20394 smallstep2 <> st var
R20389:20389 smallstep2 <> b var
R20401:20402 smallstep2 <> b' var
R20559:20561 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20564:20568 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20571:20573 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20531:20534 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R20540:20545 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R20548:20553 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R20556:20558 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R20535:20539 imp <> BTrue constr
R20546:20547 smallstep2 <> c1 var
R20554:20555 smallstep2 <> c2 var
R20562:20563 smallstep2 <> st var
R20569:20570 smallstep2 <> c1 var
R20574:20575 smallstep2 <> st var
R20646:20648 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20651:20655 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20658:20660 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20617:20620 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R20627:20632 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R20635:20640 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R20643:20645 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R20621:20626 imp <> BFalse constr
R20633:20634 smallstep2 <> c1 var
R20641:20642 smallstep2 <> c2 var
R20649:20650 smallstep2 <> st var
R20656:20657 smallstep2 <> c2 var
R20661:20662 smallstep2 <> st var
R20718:20720 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20723:20740 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20787:20790 smallstep2 <> ::x_'/'_x_'-->'_x_'/'_x not
R20701:20706 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20708:20711 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20714:20717 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20707:20707 smallstep2 <> b var
R20712:20713 smallstep2 <> c1 var
R20721:20722 smallstep2 <> st var
R20741:20744 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R20746:20751 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R20774:20779 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R20784:20786 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R20745:20745 smallstep2 <> b var
R20754:20756 imp <> :com_scope:x_';;'_x not
R20752:20753 smallstep2 <> c1 var
R20757:20762 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20764:20767 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20770:20773 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20763:20763 smallstep2 <> b var
R20768:20769 smallstep2 <> c1 var
R20780:20783 imp <> :com_scope:'SKIP' not
R20791:20792 smallstep2 <> st var
R20837:20841 smallstep2 <> cstep ind
R20850:20850 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20853:20853 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20857:20857 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20843:20843 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20845:20845 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R20848:20848 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
not 20802:20802 <> ::x_'/'_x_'-->'_x_'/'_x
mod 20941:20944 <> CImp
ind 20957:20959 CImp com
constr 20975:20979 CImp CSkip
constr 20991:20994 CImp CAss
constr 21024:21027 CImp CSeq
constr 21053:21055 CImp CIf
constr 21089:21094 CImp CWhile
constr 21121:21124 CImp CPar
R20983:20985 smallstep2 <> com ind
R21004:21007 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21012:21015 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21016:21018 smallstep2 <> com ind
R21008:21011 imp <> aexp ind
R20998:21003 Coq.Strings.String <> string ind
R21034:21037 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21041:21044 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21045:21047 smallstep2 <> com ind
R21038:21040 smallstep2 <> com ind
R21031:21033 smallstep2 <> com ind
R21063:21066 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21070:21073 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21077:21080 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21081:21083 smallstep2 <> com ind
R21074:21076 smallstep2 <> com ind
R21067:21069 smallstep2 <> com ind
R21059:21062 imp <> bexp ind
R21102:21105 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21109:21112 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21113:21115 smallstep2 <> com ind
R21106:21108 smallstep2 <> com ind
R21098:21101 imp <> bexp ind
R21131:21134 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21138:21141 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21142:21144 smallstep2 <> com ind
R21135:21137 smallstep2 <> com ind
R21128:21130 smallstep2 <> com ind
R21185:21189 smallstep2 CImp CSkip constr
not 21171:21171 CImp ::'SKIP'
R21219:21222 smallstep2 CImp CAss constr
not 21201:21201 CImp ::x_'::='_x
R21270:21273 smallstep2 CImp CSeq constr
not 21253:21253 CImp ::x_';;'_x
R21358:21363 smallstep2 CImp CWhile constr
not 21327:21327 CImp ::'WHILE'_x_'DO'_x_'END'
R21457:21459 smallstep2 CImp CIf constr
not 21415:21415 CImp ::'TEST'_x_'THEN'_x_'ELSE'_x_'FI'
R21548:21551 smallstep2 CImp CPar constr
not 21515:21515 CImp ::'PAR'_x_'WITH'_x_'END'
ind 21607:21611 CImp cstep
constr 21680:21689 CImp CS_AssStep
constr 21780:21785 CImp CS_Ass
constr 21858:21867 CImp CS_SeqStep
constr 21975:21986 CImp CS_SeqFinish
constr 22044:22052 CImp CS_IfStep
constr 22192:22200 CImp CS_IfTrue
constr 22280:22289 CImp CS_IfFalse
constr 22370:22377 CImp CS_While
constr 22525:22531 CImp CS_Par1
constr 22659:22665 CImp CS_Par2
constr 22793:22802 CImp CS_ParDone
R21615:21615 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21627:21631 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21632:21632 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21644:21648 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21636:21638 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R21633:21635 smallstep2 CImp com ind
R21639:21643 imp <> state def
R21619:21621 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R21616:21618 smallstep2 CImp com ind
R21622:21626 imp <> state def
R22909:22913 smallstep2 <> cstep ind
R22922:22922 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22925:22925 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22929:22929 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22915:22915 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22917:22917 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22920:22920 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21731:21740 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21741:21741 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R21749:21752 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R21755:21760 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R21769:21772 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R21743:21747 smallstep2 CImp ::x_'::='_x not
R21742:21742 smallstep2 <> i var
R21748:21748 smallstep2 <> a var
R21753:21754 smallstep2 <> st var
R21762:21766 smallstep2 CImp ::x_'::='_x not
R21761:21761 smallstep2 <> i var
R21767:21768 smallstep2 <> a' var
R21773:21774 smallstep2 <> st var
R21718:21720 smallstep2 <> ::x_'/'_x_'-->a'_x not
R21723:21728 smallstep2 <> ::x_'/'_x_'-->a'_x not
R21721:21722 smallstep2 <> st var
R21717:21717 smallstep2 <> a var
R21729:21730 smallstep2 <> a' var
R21810:21810 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R21825:21828 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R21831:21835 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R21840:21843 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R21852:21852 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R21812:21817 smallstep2 CImp ::x_'::='_x not
R21824:21824 smallstep2 CImp ::x_'::='_x not
R21811:21811 smallstep2 <> i var
R21818:21821 imp <> ANum constr
R21823:21823 smallstep2 <> n var
R21829:21830 smallstep2 <> st var
R21836:21839 smallstep2 CImp ::'SKIP' not
R21845:21847 smallstep2 <> ::x_'!->'_x_';'_x not
R21849:21849 smallstep2 <> ::x_'!->'_x_';'_x not
R21844:21844 smallstep2 <> i var
R21848:21848 smallstep2 <> n var
R21850:21851 smallstep2 <> st var
R21923:21932 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21933:21933 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R21942:21945 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R21948:21953 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R21963:21966 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R21936:21939 smallstep2 CImp ::x_';;'_x not
R21934:21935 smallstep2 <> c1 var
R21940:21941 smallstep2 <> c2 var
R21946:21947 smallstep2 <> st var
R21957:21960 smallstep2 CImp ::x_';;'_x not
R21954:21956 smallstep2 <> c1' var
R21961:21962 smallstep2 <> c2 var
R21967:21969 smallstep2 <> st' var
R21904:21906 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R21909:21913 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R21917:21919 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R21902:21903 smallstep2 <> c1 var
R21907:21908 smallstep2 <> st var
R21914:21916 smallstep2 <> c1' var
R21920:21922 smallstep2 <> st' var
R22010:22010 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22021:22024 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22027:22031 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22034:22036 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22015:22018 smallstep2 CImp ::x_';;'_x not
R22011:22014 smallstep2 CImp ::'SKIP' not
R22019:22020 smallstep2 <> c2 var
R22025:22026 smallstep2 <> st var
R22032:22033 smallstep2 <> c2 var
R22037:22038 smallstep2 <> st var
R22097:22110 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22111:22111 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22137:22140 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22143:22154 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22181:22184 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22112:22116 smallstep2 CImp ::'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22118:22123 smallstep2 CImp ::'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22126:22131 smallstep2 CImp ::'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22134:22136 smallstep2 CImp ::'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22117:22117 smallstep2 <> b var
R22124:22125 smallstep2 <> c1 var
R22132:22133 smallstep2 <> c2 var
R22141:22142 smallstep2 <> st var
R22155:22159 smallstep2 CImp ::'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22162:22167 smallstep2 CImp ::'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22170:22175 smallstep2 CImp ::'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22178:22180 smallstep2 CImp ::'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22160:22161 smallstep2 <> b' var
R22168:22169 smallstep2 <> c1 var
R22176:22177 smallstep2 <> c2 var
R22185:22186 smallstep2 <> st var
R22085:22086 smallstep2 <> ::x_'/'_x_'-->b'_x not
R22089:22094 smallstep2 <> ::x_'/'_x_'-->b'_x not
R22087:22088 smallstep2 <> st var
R22084:22084 smallstep2 <> b var
R22095:22096 smallstep2 <> b' var
R22227:22227 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22257:22260 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22263:22267 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22270:22272 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22228:22232 smallstep2 CImp ::'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22238:22243 smallstep2 CImp ::'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22246:22251 smallstep2 CImp ::'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22254:22256 smallstep2 CImp ::'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22233:22237 imp <> BTrue constr
R22244:22245 smallstep2 <> c1 var
R22252:22253 smallstep2 <> c2 var
R22261:22262 smallstep2 <> st var
R22268:22269 smallstep2 <> c1 var
R22273:22274 smallstep2 <> st var
R22316:22316 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22347:22350 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22353:22357 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22360:22362 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22317:22321 smallstep2 CImp ::'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22328:22333 smallstep2 CImp ::'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22336:22341 smallstep2 CImp ::'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22344:22346 smallstep2 CImp ::'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22322:22327 imp <> BFalse constr
R22334:22335 smallstep2 <> c1 var
R22342:22343 smallstep2 <> c2 var
R22351:22352 smallstep2 <> st var
R22358:22359 smallstep2 <> c2 var
R22363:22364 smallstep2 <> st var
R22407:22407 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22425:22428 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22431:22442 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22494:22497 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22408:22413 smallstep2 CImp ::'WHILE'_x_'DO'_x_'END' not
R22415:22418 smallstep2 CImp ::'WHILE'_x_'DO'_x_'END' not
R22421:22424 smallstep2 CImp ::'WHILE'_x_'DO'_x_'END' not
R22414:22414 smallstep2 <> b var
R22419:22420 smallstep2 <> c1 var
R22429:22430 smallstep2 <> st var
R22443:22447 smallstep2 CImp ::'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22449:22455 smallstep2 CImp ::'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22480:22486 smallstep2 CImp ::'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22491:22493 smallstep2 CImp ::'TEST'_x_'THEN'_x_'ELSE'_x_'FI' not
R22448:22448 smallstep2 <> b var
R22458:22461 smallstep2 CImp ::x_';;'_x not
R22479:22479 smallstep2 CImp ::x_';;'_x not
R22456:22457 smallstep2 <> c1 var
R22462:22467 smallstep2 CImp ::'WHILE'_x_'DO'_x_'END' not
R22469:22472 smallstep2 CImp ::'WHILE'_x_'DO'_x_'END' not
R22475:22478 smallstep2 CImp ::'WHILE'_x_'DO'_x_'END' not
R22468:22468 smallstep2 <> b var
R22473:22474 smallstep2 <> c1 var
R22487:22490 smallstep2 CImp ::'SKIP' not
R22498:22499 smallstep2 <> st var
R22587:22596 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22597:22597 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22616:22619 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22622:22627 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22647:22650 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22598:22601 smallstep2 CImp ::'PAR'_x_'WITH'_x_'END' not
R22604:22609 smallstep2 CImp ::'PAR'_x_'WITH'_x_'END' not
R22612:22615 smallstep2 CImp ::'PAR'_x_'WITH'_x_'END' not
R22602:22603 smallstep2 <> c1 var
R22610:22611 smallstep2 <> c2 var
R22620:22621 smallstep2 <> st var
R22628:22631 smallstep2 CImp ::'PAR'_x_'WITH'_x_'END' not
R22635:22640 smallstep2 CImp ::'PAR'_x_'WITH'_x_'END' not
R22643:22646 smallstep2 CImp ::'PAR'_x_'WITH'_x_'END' not
R22632:22634 smallstep2 <> c1' var
R22641:22642 smallstep2 <> c2 var
R22651:22653 smallstep2 <> st' var
R22568:22570 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22573:22577 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22581:22583 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22566:22567 smallstep2 <> c1 var
R22571:22572 smallstep2 <> st var
R22578:22580 smallstep2 <> c1' var
R22584:22586 smallstep2 <> st' var
R22721:22730 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22731:22731 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22750:22753 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22756:22761 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22781:22784 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22732:22735 smallstep2 CImp ::'PAR'_x_'WITH'_x_'END' not
R22738:22743 smallstep2 CImp ::'PAR'_x_'WITH'_x_'END' not
R22746:22749 smallstep2 CImp ::'PAR'_x_'WITH'_x_'END' not
R22736:22737 smallstep2 <> c1 var
R22744:22745 smallstep2 <> c2 var
R22754:22755 smallstep2 <> st var
R22762:22765 smallstep2 CImp ::'PAR'_x_'WITH'_x_'END' not
R22768:22773 smallstep2 CImp ::'PAR'_x_'WITH'_x_'END' not
R22777:22780 smallstep2 CImp ::'PAR'_x_'WITH'_x_'END' not
R22766:22767 smallstep2 <> c1 var
R22774:22776 smallstep2 <> c2' var
R22785:22787 smallstep2 <> st' var
R22702:22704 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22707:22711 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22715:22717 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22700:22701 smallstep2 <> c2 var
R22705:22706 smallstep2 <> st var
R22712:22714 smallstep2 <> c2' var
R22718:22720 smallstep2 <> st' var
R22823:22823 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22846:22849 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22852:22856 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22861:22863 smallstep2 CImp ::x_'/'_x_'-->'_x_'/'_x not
R22824:22827 smallstep2 CImp ::'PAR'_x_'WITH'_x_'END' not
R22832:22837 smallstep2 CImp ::'PAR'_x_'WITH'_x_'END' not
R22842:22845 smallstep2 CImp ::'PAR'_x_'WITH'_x_'END' not
R22828:22831 smallstep2 CImp ::'SKIP' not
R22838:22841 smallstep2 CImp ::'SKIP' not
R22850:22851 smallstep2 <> st var
R22857:22860 smallstep2 CImp ::'SKIP' not
R22864:22865 smallstep2 <> st var
R22909:22913 smallstep2 CImp cstep ind
R22922:22922 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22925:22925 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22929:22929 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22915:22915 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22917:22917 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22920:22920 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
not 22875:22875 CImp ::x_'/'_x_'-->'_x_'/'_x
def 22945:22954 CImp cmultistep
R22959:22963 smallstep2 <> multi ind
R22965:22969 smallstep2 CImp cstep ind
R23019:23023 smallstep2 <> multi ind
R23038:23038 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23041:23041 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23045:23045 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23031:23031 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23033:23033 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23036:23036 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23025:23029 smallstep2 CImp cstep ind
not 22981:22981 CImp ::x_'/'_x_'-->*'_x_'/'_x
def 23110:23117 CImp par_loop
R23121:23123 smallstep2 CImp com ind
R23130:23137 smallstep2 CImp ::'PAR'_x_'WITH'_x_'END' not
R23145:23156 smallstep2 CImp ::'PAR'_x_'WITH'_x_'END' not
R23197:23202 smallstep2 CImp ::'PAR'_x_'WITH'_x_'END' not
R23139:23143 smallstep2 CImp ::x_'::='_x not
R23138:23138 imp <> Y def
R23157:23162 smallstep2 CImp ::'WHILE'_x_'DO'_x_'END' not
R23168:23177 smallstep2 CImp ::'WHILE'_x_'DO'_x_'END' not
R23189:23196 smallstep2 CImp ::'WHILE'_x_'DO'_x_'END' not
R23164:23166 imp <> :bexp_scope:x_'='_x not
R23163:23163 imp <> Y def
R23179:23183 smallstep2 CImp ::x_'::='_x not
R23178:23178 imp <> X def
R23185:23187 imp <> :aexp_scope:x_'+'_x not
R23184:23184 imp <> X def
def 23216:23233 CImp par_loop_example_0
R23238:23244 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23248:23256 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23292:23299 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23265:23267 smallstep2 CImp ::x_'/'_x_'-->*'_x_'/'_x not
R23276:23281 smallstep2 CImp ::x_'/'_x_'-->*'_x_'/'_x not
R23286:23288 smallstep2 CImp ::x_'/'_x_'-->*'_x_'/'_x not
R23257:23264 smallstep2 CImp par_loop def
R23268:23275 smallstep2 <> empty_st def
R23282:23285 smallstep2 CImp ::'SKIP' not
R23289:23291 smallstep2 <> st' var
R23305:23307 Coq.Init.Logic <> :type_scope:x_'='_x not
R23300:23302 smallstep2 <> st' var
R23304:23304 imp <> X def
R23325:23332 Coq.Init.Logic <> ex_intro constr
R23325:23332 Coq.Init.Logic <> ex_intro constr
R23351:23358 smallstep2 CImp par_loop def
R23368:23377 smallstep2 <> multi_step constr
R23368:23377 smallstep2 <> multi_step constr
R23386:23392 smallstep2 CImp CS_Par1 constr
R23386:23392 smallstep2 CImp CS_Par1 constr
R23401:23406 smallstep2 CImp CS_Ass constr
R23401:23406 smallstep2 CImp CS_Ass constr
R23416:23425 smallstep2 <> multi_step constr
R23416:23425 smallstep2 <> multi_step constr
R23434:23440 smallstep2 CImp CS_Par2 constr
R23434:23440 smallstep2 CImp CS_Par2 constr
R23449:23456 smallstep2 CImp CS_While constr
R23449:23456 smallstep2 CImp CS_While constr
R23466:23475 smallstep2 <> multi_step constr
R23466:23475 smallstep2 <> multi_step constr
R23484:23490 smallstep2 CImp CS_Par2 constr
R23484:23490 smallstep2 CImp CS_Par2 constr
R23499:23507 smallstep2 CImp CS_IfStep constr
R23499:23507 smallstep2 CImp CS_IfStep constr
R23516:23521 smallstep2 <> BS_Eq1 constr
R23516:23521 smallstep2 <> BS_Eq1 constr
R23530:23534 smallstep2 <> AS_Id constr
R23530:23534 smallstep2 <> AS_Id constr
R23544:23553 smallstep2 <> multi_step constr
R23544:23553 smallstep2 <> multi_step constr
R23562:23568 smallstep2 CImp CS_Par2 constr
R23562:23568 smallstep2 CImp CS_Par2 constr
R23577:23585 smallstep2 CImp CS_IfStep constr
R23577:23585 smallstep2 CImp CS_IfStep constr
R23594:23598 smallstep2 <> BS_Eq constr
R23594:23598 smallstep2 <> BS_Eq constr
R23616:23625 smallstep2 <> multi_step constr
R23616:23625 smallstep2 <> multi_step constr
R23634:23640 smallstep2 CImp CS_Par2 constr
R23634:23640 smallstep2 CImp CS_Par2 constr
R23649:23658 smallstep2 CImp CS_IfFalse constr
R23649:23658 smallstep2 CImp CS_IfFalse constr
R23668:23677 smallstep2 <> multi_step constr
R23668:23677 smallstep2 <> multi_step constr
R23686:23695 smallstep2 CImp CS_ParDone constr
R23686:23695 smallstep2 CImp CS_ParDone constr
R23705:23714 smallstep2 <> multi_refl constr
R23705:23714 smallstep2 <> multi_refl constr
def 23748:23765 CImp par_loop_example_2
R23770:23776 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23780:23788 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R23824:23831 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R23797:23799 smallstep2 CImp ::x_'/'_x_'-->*'_x_'/'_x not
R23808:23813 smallstep2 CImp ::x_'/'_x_'-->*'_x_'/'_x not
R23818:23820 smallstep2 CImp ::x_'/'_x_'-->*'_x_'/'_x not
R23789:23796 smallstep2 CImp par_loop def
R23800:23807 smallstep2 <> empty_st def
R23814:23817 smallstep2 CImp ::'SKIP' not
R23821:23823 smallstep2 <> st' var
R23837:23839 Coq.Init.Logic <> :type_scope:x_'='_x not
R23832:23834 smallstep2 <> st' var
R23836:23836 imp <> X def
R25028:25035 Coq.Init.Logic <> ex_intro constr
R25028:25035 Coq.Init.Logic <> ex_intro constr
R25054:25061 smallstep2 CImp par_loop def
R25071:25080 smallstep2 <> multi_step constr
R25071:25080 smallstep2 <> multi_step constr
R25089:25095 smallstep2 CImp CS_Par2 constr
R25089:25095 smallstep2 CImp CS_Par2 constr
R25104:25111 smallstep2 CImp CS_While constr
R25104:25111 smallstep2 CImp CS_While constr
R25121:25130 smallstep2 <> multi_step constr
R25121:25130 smallstep2 <> multi_step constr
R25139:25145 smallstep2 CImp CS_Par2 constr
R25139:25145 smallstep2 CImp CS_Par2 constr
R25154:25162 smallstep2 CImp CS_IfStep constr
R25154:25162 smallstep2 CImp CS_IfStep constr
R25171:25176 smallstep2 <> BS_Eq1 constr
R25171:25176 smallstep2 <> BS_Eq1 constr
R25185:25189 smallstep2 <> AS_Id constr
R25185:25189 smallstep2 <> AS_Id constr
R25199:25208 smallstep2 <> multi_step constr
R25199:25208 smallstep2 <> multi_step constr
R25217:25223 smallstep2 CImp CS_Par2 constr
R25217:25223 smallstep2 CImp CS_Par2 constr
R25232:25240 smallstep2 CImp CS_IfStep constr
R25232:25240 smallstep2 CImp CS_IfStep constr
R25249:25253 smallstep2 <> BS_Eq constr
R25249:25253 smallstep2 <> BS_Eq constr
R25270:25279 smallstep2 <> multi_step constr
R25270:25279 smallstep2 <> multi_step constr
R25289:25295 smallstep2 CImp CS_Par2 constr
R25289:25295 smallstep2 CImp CS_Par2 constr
R25304:25312 smallstep2 CImp CS_IfTrue constr
R25304:25312 smallstep2 CImp CS_IfTrue constr
R25322:25331 smallstep2 <> multi_step constr
R25322:25331 smallstep2 <> multi_step constr
R25340:25346 smallstep2 CImp CS_Par2 constr
R25340:25346 smallstep2 CImp CS_Par2 constr
R25355:25364 smallstep2 CImp CS_SeqStep constr
R25355:25364 smallstep2 CImp CS_SeqStep constr
R25373:25382 smallstep2 CImp CS_AssStep constr
R25373:25382 smallstep2 CImp CS_AssStep constr
R25391:25398 smallstep2 <> AS_Plus1 constr
R25391:25398 smallstep2 <> AS_Plus1 constr
R25407:25411 smallstep2 <> AS_Id constr
R25407:25411 smallstep2 <> AS_Id constr
R25421:25430 smallstep2 <> multi_step constr
R25421:25430 smallstep2 <> multi_step constr
R25440:25446 smallstep2 CImp CS_Par2 constr
R25440:25446 smallstep2 CImp CS_Par2 constr
R25455:25464 smallstep2 CImp CS_SeqStep constr
R25455:25464 smallstep2 CImp CS_SeqStep constr
R25473:25482 smallstep2 CImp CS_AssStep constr
R25473:25482 smallstep2 CImp CS_AssStep constr
R25491:25497 smallstep2 <> AS_Plus constr
R25491:25497 smallstep2 <> AS_Plus constr
R25507:25516 smallstep2 <> multi_step constr
R25507:25516 smallstep2 <> multi_step constr
R25525:25531 smallstep2 CImp CS_Par2 constr
R25525:25531 smallstep2 CImp CS_Par2 constr
R25540:25549 smallstep2 CImp CS_SeqStep constr
R25540:25549 smallstep2 CImp CS_SeqStep constr
prf 25569:25582 CImp par_body_n__Sn
R25621:25626 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25635:25637 smallstep2 CImp ::x_'/'_x_'-->*'_x_'/'_x not
R25640:25646 smallstep2 CImp ::x_'/'_x_'-->*'_x_'/'_x not
R25655:25658 smallstep2 CImp ::x_'/'_x_'-->*'_x_'/'_x not
R25673:25673 smallstep2 CImp ::x_'/'_x_'-->*'_x_'/'_x not
R25627:25634 smallstep2 CImp par_loop def
R25638:25639 smallstep2 <> st var
R25647:25654 smallstep2 CImp par_loop def
R25660:25664 smallstep2 <> ::x_'!->'_x_';'_x not
R25668:25670 smallstep2 <> ::x_'!->'_x_';'_x not
R25659:25659 imp <> X def
R25665:25665 Coq.Init.Datatypes <> S constr
R25667:25667 smallstep2 <> n var
R25671:25672 smallstep2 <> st var
R25609:25612 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25605:25607 Coq.Init.Logic <> :type_scope:x_'='_x not
R25601:25602 smallstep2 <> st var
R25604:25604 imp <> X def
R25608:25608 smallstep2 <> n var
R25617:25619 Coq.Init.Logic <> :type_scope:x_'='_x not
R25613:25614 smallstep2 <> st var
R25616:25616 imp <> Y def
R25730:25739 smallstep2 <> multi_step constr
R25730:25739 smallstep2 <> multi_step constr
R25748:25754 smallstep2 CImp CS_Par2 constr
R25748:25754 smallstep2 CImp CS_Par2 constr
R25763:25770 smallstep2 CImp CS_While constr
R25763:25770 smallstep2 CImp CS_While constr
R25780:25789 smallstep2 <> multi_step constr
R25780:25789 smallstep2 <> multi_step constr
R25798:25804 smallstep2 CImp CS_Par2 constr
R25798:25804 smallstep2 CImp CS_Par2 constr
R25813:25821 smallstep2 CImp CS_IfStep constr
R25813:25821 smallstep2 CImp CS_IfStep constr
R25830:25835 smallstep2 <> BS_Eq1 constr
R25830:25835 smallstep2 <> BS_Eq1 constr
R25845:25849 smallstep2 <> AS_Id constr
R25845:25849 smallstep2 <> AS_Id constr
R25859:25868 smallstep2 <> multi_step constr
R25859:25868 smallstep2 <> multi_step constr
R25877:25883 smallstep2 CImp CS_Par2 constr
R25877:25883 smallstep2 CImp CS_Par2 constr
R25892:25900 smallstep2 CImp CS_IfStep constr
R25892:25900 smallstep2 CImp CS_IfStep constr
R25909:25913 smallstep2 <> BS_Eq constr
R25909:25913 smallstep2 <> BS_Eq constr
R25942:25951 smallstep2 <> multi_step constr
R25942:25951 smallstep2 <> multi_step constr
R25961:25967 smallstep2 CImp CS_Par2 constr
R25961:25967 smallstep2 CImp CS_Par2 constr
R25976:25984 smallstep2 CImp CS_IfTrue constr
R25976:25984 smallstep2 CImp CS_IfTrue constr
R25994:26003 smallstep2 <> multi_step constr
R25994:26003 smallstep2 <> multi_step constr
R26012:26018 smallstep2 CImp CS_Par2 constr
R26012:26018 smallstep2 CImp CS_Par2 constr
R26027:26036 smallstep2 CImp CS_SeqStep constr
R26027:26036 smallstep2 CImp CS_SeqStep constr
R26045:26054 smallstep2 CImp CS_AssStep constr
R26045:26054 smallstep2 CImp CS_AssStep constr
R26063:26070 smallstep2 <> AS_Plus1 constr
R26063:26070 smallstep2 <> AS_Plus1 constr
R26079:26083 smallstep2 <> AS_Id constr
R26079:26083 smallstep2 <> AS_Id constr
R26093:26102 smallstep2 <> multi_step constr
R26093:26102 smallstep2 <> multi_step constr
R26111:26117 smallstep2 CImp CS_Par2 constr
R26111:26117 smallstep2 CImp CS_Par2 constr
R26127:26136 smallstep2 CImp CS_SeqStep constr
R26127:26136 smallstep2 CImp CS_SeqStep constr
R26145:26154 smallstep2 CImp CS_AssStep constr
R26145:26154 smallstep2 CImp CS_AssStep constr
R26164:26170 smallstep2 <> AS_Plus constr
R26164:26170 smallstep2 <> AS_Plus constr
R26180:26189 smallstep2 <> multi_step constr
R26180:26189 smallstep2 <> multi_step constr
R26199:26205 smallstep2 CImp CS_Par2 constr
R26199:26205 smallstep2 CImp CS_Par2 constr
R26214:26223 smallstep2 CImp CS_SeqStep constr
R26214:26223 smallstep2 CImp CS_SeqStep constr
R26232:26237 smallstep2 CImp CS_Ass constr
R26232:26237 smallstep2 CImp CS_Ass constr
R26247:26256 smallstep2 <> multi_step constr
R26247:26256 smallstep2 <> multi_step constr
R26266:26272 smallstep2 CImp CS_Par2 constr
R26266:26272 smallstep2 CImp CS_Par2 constr
R26281:26292 smallstep2 CImp CS_SeqFinish constr
R26281:26292 smallstep2 CImp CS_SeqFinish constr
R26303:26311 induction <> plus_comm thm
R26303:26311 induction <> plus_comm thm
R26303:26311 induction <> plus_comm thm
R26326:26333 smallstep2 CImp par_loop def
R26326:26333 smallstep2 CImp par_loop def
R26342:26351 smallstep2 <> multi_refl constr
R26342:26351 smallstep2 <> multi_refl constr
prf 26366:26369 CImp st_0
R26413:26417 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26431:26433 Coq.Init.Logic <> :type_scope:x_'='_x not
R26420:26422 smallstep2 <> ::x_'!->'_x_';'_x not
R26424:26425 smallstep2 <> ::x_'!->'_x_';'_x not
R26419:26419 smallstep2 <> X var
R26423:26423 smallstep2 <> m var
R26426:26427 smallstep2 <> st var
R26430:26430 smallstep2 <> Y var
R26401:26404 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26397:26399 Coq.Init.Logic <> :type_scope:x_'='_x not
R26393:26394 smallstep2 <> st var
R26396:26396 smallstep2 <> Y var
R26409:26411 Coq.Init.Logic <> :type_scope:x_'='_x not
R26405:26406 smallstep2 <> st var
R26408:26408 smallstep2 <> X var
R26412:26412 smallstep2 <> n var
prf 26461:26470 CImp par_body_n
R26509:26514 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26515:26521 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R26525:26530 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R26564:26572 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26539:26541 smallstep2 CImp ::x_'/'_x_'-->*'_x_'/'_x not
R26544:26549 smallstep2 CImp ::x_'/'_x_'-->*'_x_'/'_x not
R26558:26560 smallstep2 CImp ::x_'/'_x_'-->*'_x_'/'_x not
R26531:26538 smallstep2 CImp par_loop def
R26542:26543 smallstep2 <> st var
R26550:26557 smallstep2 CImp par_loop def
R26561:26563 smallstep2 <> st' var
R26582:26585 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26578:26580 Coq.Init.Logic <> :type_scope:x_'='_x not
R26573:26575 smallstep2 <> st' var
R26577:26577 imp <> X def
R26581:26581 smallstep2 <> n var
R26591:26593 Coq.Init.Logic <> :type_scope:x_'='_x not
R26586:26588 smallstep2 <> st' var
R26590:26590 imp <> Y def
R26497:26500 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26493:26495 Coq.Init.Logic <> :type_scope:x_'='_x not
R26489:26490 smallstep2 <> st var
R26492:26492 imp <> X def
R26505:26507 Coq.Init.Logic <> :type_scope:x_'='_x not
R26501:26502 smallstep2 <> st var
R26504:26504 imp <> Y def
R26651:26660 smallstep2 <> multi_refl constr
R26651:26660 smallstep2 <> multi_refl constr
R26689:26695 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R26707:26716 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R26702:26706 imp <> state def
R26750:26754 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26725:26727 smallstep2 CImp ::x_'/'_x_'-->*'_x_'/'_x not
R26730:26735 smallstep2 CImp ::x_'/'_x_'-->*'_x_'/'_x not
R26744:26746 smallstep2 CImp ::x_'/'_x_'-->*'_x_'/'_x not
R26717:26724 smallstep2 CImp par_loop def
R26736:26743 smallstep2 CImp par_loop def
R26747:26749 smallstep2 <> st' var
R26764:26767 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26760:26762 Coq.Init.Logic <> :type_scope:x_'='_x not
R26755:26757 smallstep2 <> st' var
R26759:26759 imp <> X def
R26773:26775 Coq.Init.Logic <> :type_scope:x_'='_x not
R26768:26770 smallstep2 <> st' var
R26772:26772 imp <> Y def
R26689:26695 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R26707:26716 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R26702:26706 imp <> state def
R26750:26754 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26725:26727 smallstep2 CImp ::x_'/'_x_'-->*'_x_'/'_x not
R26730:26735 smallstep2 CImp ::x_'/'_x_'-->*'_x_'/'_x not
R26744:26746 smallstep2 CImp ::x_'/'_x_'-->*'_x_'/'_x not
R26717:26724 smallstep2 CImp par_loop def
R26736:26743 smallstep2 CImp par_loop def
R26747:26749 smallstep2 <> st' var
R26764:26767 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26760:26762 Coq.Init.Logic <> :type_scope:x_'='_x not
R26755:26757 smallstep2 <> st' var
R26759:26759 imp <> X def
R26773:26775 Coq.Init.Logic <> :type_scope:x_'='_x not
R26768:26770 smallstep2 <> st' var
R26772:26772 imp <> Y def
R26823:26827 smallstep2 <> ::x_'!->'_x_';'_x not
R26831:26833 smallstep2 <> ::x_'!->'_x_';'_x not
R26822:26822 imp <> X def
R26828:26828 Coq.Init.Datatypes <> S constr
R26823:26827 smallstep2 <> ::x_'!->'_x_';'_x not
R26831:26833 smallstep2 <> ::x_'!->'_x_';'_x not
R26822:26822 imp <> X def
R26828:26828 Coq.Init.Datatypes <> S constr
R26877:26887 smallstep2 <> multi_trans thm
R26877:26887 smallstep2 <> multi_trans thm
R26907:26920 smallstep2 CImp par_body_n__Sn thm
R26907:26920 smallstep2 CImp par_body_n__Sn thm
prf 27101:27114 CImp par_loop_any_X
R27129:27135 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27139:27144 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27180:27187 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27153:27155 smallstep2 CImp ::x_'/'_x_'-->*'_x_'/'_x not
R27164:27169 smallstep2 CImp ::x_'/'_x_'-->*'_x_'/'_x not
R27174:27176 smallstep2 CImp ::x_'/'_x_'-->*'_x_'/'_x not
R27145:27152 smallstep2 CImp par_loop def
R27156:27163 smallstep2 <> empty_st def
R27170:27173 smallstep2 CImp ::'SKIP' not
R27177:27179 smallstep2 <> st' var
R27193:27195 Coq.Init.Logic <> :type_scope:x_'='_x not
R27188:27190 smallstep2 <> st' var
R27192:27192 imp <> X def
R27196:27196 smallstep2 <> n var
R27228:27235 Coq.Init.Logic <> ex_intro constr
R27228:27235 Coq.Init.Logic <> ex_intro constr
R27247:27254 smallstep2 CImp par_loop def
R27273:27282 smallstep2 <> multi_step constr
R27273:27282 smallstep2 <> multi_step constr
R27291:27297 smallstep2 CImp CS_Par1 constr
R27291:27297 smallstep2 CImp CS_Par1 constr
R27306:27311 smallstep2 CImp CS_Ass constr
R27306:27311 smallstep2 CImp CS_Ass constr
R27321:27330 smallstep2 <> multi_step constr
R27321:27330 smallstep2 <> multi_step constr
R27339:27345 smallstep2 CImp CS_Par2 constr
R27339:27345 smallstep2 CImp CS_Par2 constr
R27354:27361 smallstep2 CImp CS_While constr
R27354:27361 smallstep2 CImp CS_While constr
R27372:27381 smallstep2 <> multi_step constr
R27372:27381 smallstep2 <> multi_step constr
R27390:27396 smallstep2 CImp CS_Par2 constr
R27390:27396 smallstep2 CImp CS_Par2 constr
R27405:27413 smallstep2 CImp CS_IfStep constr
R27405:27413 smallstep2 CImp CS_IfStep constr
R27422:27427 smallstep2 <> BS_Eq1 constr
R27422:27427 smallstep2 <> BS_Eq1 constr
R27436:27440 smallstep2 <> AS_Id constr
R27436:27440 smallstep2 <> AS_Id constr
R27450:27459 smallstep2 <> multi_step constr
R27450:27459 smallstep2 <> multi_step constr
R27468:27474 smallstep2 CImp CS_Par2 constr
R27468:27474 smallstep2 CImp CS_Par2 constr
R27483:27491 smallstep2 CImp CS_IfStep constr
R27483:27491 smallstep2 CImp CS_IfStep constr
R27500:27504 smallstep2 <> BS_Eq constr
R27500:27504 smallstep2 <> BS_Eq constr
R27514:27523 smallstep2 <> multi_step constr
R27514:27523 smallstep2 <> multi_step constr
R27539:27545 smallstep2 CImp CS_Par2 constr
R27539:27545 smallstep2 CImp CS_Par2 constr
R27554:27563 smallstep2 CImp CS_IfFalse constr
R27554:27563 smallstep2 CImp CS_IfFalse constr
R27573:27582 smallstep2 <> multi_step constr
R27573:27582 smallstep2 <> multi_step constr
R27591:27600 smallstep2 CImp CS_ParDone constr
R27591:27600 smallstep2 CImp CS_ParDone constr
R27609:27618 smallstep2 <> multi_refl constr
R27609:27618 smallstep2 <> multi_refl constr
R27643:27650 Coq.Init.Logic <> ex_intro constr
R27643:27650 Coq.Init.Logic <> ex_intro constr
R27660:27667 smallstep2 CImp par_loop def
R27693:27696 smallstep2 CImp <> mod
ind 27710:27715 <> sinstr
constr 27729:27733 <> SPush
constr 27747:27751 <> SLoad
constr 27768:27772 <> SPlus
constr 27776:27781 <> SMinus
constr 27785:27789 <> SMult
R27740:27742 Coq.Init.Datatypes <> nat ind
R27744:27744 smallstep2 <> sinstr ind
R27758:27763 Coq.Strings.String <> string ind
R27765:27765 smallstep2 <> sinstr ind
R27773:27773 smallstep2 <> sinstr ind
R27782:27782 smallstep2 <> sinstr ind
R27790:27790 smallstep2 <> sinstr ind
def 27804:27808 <> stack
R27813:27816 poly <> list ind
R27818:27820 Coq.Init.Datatypes <> nat ind
def 27834:27837 <> prog
R27842:27845 poly <> list ind
R27847:27852 smallstep2 <> sinstr ind
ind 27865:27874 <> stack_step
constr 27931:27937 <> SS_Push
constr 28019:28025 <> SS_Load
constr 28110:28116 <> SS_Plus
constr 28206:28213 <> SS_Minus
constr 28304:28310 <> SS_Mult
R27883:27886 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27899:27902 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27915:27918 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27907:27909 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R27903:27906 smallstep2 <> prog def
R27910:27914 smallstep2 <> stack def
R27891:27893 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R27887:27890 smallstep2 <> prog def
R27894:27898 smallstep2 <> stack def
R27878:27882 imp <> state def
R27965:27974 smallstep2 <> stack_step ind
R28000:28000 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28003:28004 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28013:28013 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28001:28002 smallstep2 <> p' var
R28006:28009 poly <> ::x_'::'_x not
R28005:28005 smallstep2 <> n var
R28010:28012 smallstep2 <> stk var
R27979:27979 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27993:27994 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27998:27998 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R27987:27990 poly <> ::x_'::'_x not
R27980:27984 smallstep2 <> SPush constr
R27986:27986 smallstep2 <> n var
R27991:27992 smallstep2 <> p' var
R27995:27997 smallstep2 <> stk var
R27976:27977 smallstep2 <> st var
R28053:28062 smallstep2 <> stack_step ind
R28088:28088 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28091:28092 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28104:28104 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28089:28090 smallstep2 <> p' var
R28097:28100 poly <> ::x_'::'_x not
R28093:28094 smallstep2 <> st var
R28096:28096 smallstep2 <> i var
R28101:28103 smallstep2 <> stk var
R28067:28067 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28081:28082 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28086:28086 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28075:28078 poly <> ::x_'::'_x not
R28068:28072 smallstep2 <> SLoad constr
R28074:28074 smallstep2 <> i var
R28079:28080 smallstep2 <> p' var
R28083:28085 smallstep2 <> stk var
R28064:28065 smallstep2 <> st var
R28146:28155 smallstep2 <> stack_step ind
R28185:28185 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28188:28189 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28200:28200 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28186:28187 smallstep2 <> p' var
R28190:28190 poly <> ::x_'::'_x not
R28194:28196 poly <> ::x_'::'_x not
R28192:28192 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28191:28191 smallstep2 <> m var
R28193:28193 smallstep2 <> n var
R28197:28199 smallstep2 <> stk var
R28160:28160 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28172:28173 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28183:28183 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28166:28169 poly <> ::x_'::'_x not
R28161:28165 smallstep2 <> SPlus constr
R28170:28171 smallstep2 <> p' var
R28175:28176 poly <> ::x_'::'_x not
R28174:28174 smallstep2 <> n var
R28178:28179 poly <> ::x_'::'_x not
R28177:28177 smallstep2 <> m var
R28180:28182 smallstep2 <> stk var
R28157:28158 smallstep2 <> st var
R28243:28252 smallstep2 <> stack_step ind
R28283:28283 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28286:28287 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28298:28298 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28284:28285 smallstep2 <> p' var
R28288:28288 poly <> ::x_'::'_x not
R28292:28294 poly <> ::x_'::'_x not
R28290:28290 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R28289:28289 smallstep2 <> m var
R28291:28291 smallstep2 <> n var
R28295:28297 smallstep2 <> stk var
R28257:28257 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28270:28271 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28281:28281 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28264:28267 poly <> ::x_'::'_x not
R28258:28263 smallstep2 <> SMinus constr
R28268:28269 smallstep2 <> p' var
R28273:28274 poly <> ::x_'::'_x not
R28272:28272 smallstep2 <> n var
R28276:28277 poly <> ::x_'::'_x not
R28275:28275 smallstep2 <> m var
R28278:28280 smallstep2 <> stk var
R28254:28255 smallstep2 <> st var
R28340:28349 smallstep2 <> stack_step ind
R28379:28379 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28382:28383 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28394:28394 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28380:28381 smallstep2 <> p' var
R28384:28384 poly <> ::x_'::'_x not
R28388:28390 poly <> ::x_'::'_x not
R28386:28386 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R28385:28385 smallstep2 <> m var
R28387:28387 smallstep2 <> n var
R28391:28393 smallstep2 <> stk var
R28354:28354 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28366:28367 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28377:28377 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28360:28363 poly <> ::x_'::'_x not
R28355:28359 smallstep2 <> SMult constr
R28364:28365 smallstep2 <> p' var
R28369:28370 poly <> ::x_'::'_x not
R28368:28368 smallstep2 <> n var
R28372:28373 poly <> ::x_'::'_x not
R28371:28371 smallstep2 <> m var
R28374:28376 smallstep2 <> stk var
R28351:28352 smallstep2 <> st var
prf 28406:28429 <> stack_step_deterministic
R28446:28458 smallstep2 <> deterministic def
R28461:28470 smallstep2 <> stack_step ind
R28472:28473 smallstep2 <> st var
R28499:28511 smallstep2 <> deterministic def
def 28728:28736 <> s_compile
R28743:28746 imp <> aexp ind
R28751:28754 poly <> list ind
R28756:28761 smallstep2 <> sinstr ind
R28774:28774 smallstep2 <> e var
R28785:28788 imp <> ANum constr
R28795:28796 poly <> ::'['_x_';'_'..'_';'_x_']' not
R28804:28805 poly <> ::'['_x_';'_'..'_';'_x_']' not
R28797:28801 smallstep2 <> SPush constr
R28811:28813 imp <> AId constr
R28820:28821 poly <> ::'['_x_';'_'..'_';'_x_']' not
R28829:28830 poly <> ::'['_x_';'_'..'_';'_x_']' not
R28822:28826 smallstep2 <> SLoad constr
R28836:28840 imp <> APlus constr
R28851:28851 poly <> ::x_'++'_x not
R28864:28866 poly <> ::x_'++'_x not
R28852:28860 smallstep2 <> s_compile def
R28867:28867 poly <> ::x_'++'_x not
R28880:28882 poly <> ::x_'++'_x not
R28868:28876 smallstep2 <> s_compile def
R28883:28883 poly <> ::'['_x_';'_'..'_';'_x_']' not
R28889:28889 poly <> ::'['_x_';'_'..'_';'_x_']' not
R28884:28888 smallstep2 <> SPlus constr
R28895:28900 imp <> AMinus constr
R28911:28911 poly <> ::x_'++'_x not
R28924:28926 poly <> ::x_'++'_x not
R28912:28920 smallstep2 <> s_compile def
R28927:28927 poly <> ::x_'++'_x not
R28940:28942 poly <> ::x_'++'_x not
R28928:28936 smallstep2 <> s_compile def
R28943:28943 poly <> ::'['_x_';'_'..'_';'_x_']' not
R28950:28950 poly <> ::'['_x_';'_'..'_';'_x_']' not
R28944:28949 smallstep2 <> SMinus constr
R28956:28960 imp <> AMult constr
R28971:28971 poly <> ::x_'++'_x not
R28984:28986 poly <> ::x_'++'_x not
R28972:28980 smallstep2 <> s_compile def
R28987:28987 poly <> ::x_'++'_x not
R29000:29002 poly <> ::x_'++'_x not
R28988:28996 smallstep2 <> s_compile def
R29003:29003 poly <> ::'['_x_';'_'..'_';'_x_']' not
R29009:29009 poly <> ::'['_x_';'_'..'_';'_x_']' not
R29004:29008 smallstep2 <> SMult constr
def 29031:29045 <> stack_multistep
R29054:29058 smallstep2 <> multi ind
R29061:29070 smallstep2 <> stack_step ind
R29072:29073 smallstep2 <> st var
