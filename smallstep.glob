DIGEST 1a273935377917fd0124deb0320fe75a
Fsmallstep
R61:75 Coq.Arith.Arith <> <> lib
R93:107 Coq.Arith.EqNat <> <> lib
R125:139 Coq.omega.Omega <> <> lib
R157:170 Coq.Lists.List <> <> lib
R210:213 maps <> <> lib
R231:233 imp <> <> lib
R251:253 rel <> <> lib
ind 267:268 <> tm
constr 284:284 <> C
constr 303:303 <> P
R291:294 Coq.Init.Logic <> :type_scope:x_'->'_x not
R295:296 smallstep <> tm ind
R288:290 Coq.Init.Datatypes <> nat ind
R309:312 Coq.Init.Logic <> :type_scope:x_'->'_x not
R315:318 Coq.Init.Logic <> :type_scope:x_'->'_x not
R319:320 smallstep <> tm ind
R313:314 smallstep <> tm ind
R307:308 smallstep <> tm ind
def 333:337 <> evalF
R344:345 smallstep <> tm ind
R350:352 Coq.Init.Datatypes <> nat ind
R365:365 smallstep <> t var
R376:376 smallstep <> C constr
R389:389 smallstep <> P constr
R408:410 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R400:404 smallstep <> evalF def
R411:415 smallstep <> evalF def
ind 506:509 <> eval
constr 538:544 <> E_Const
constr 577:582 <> E_Plus
R515:518 Coq.Init.Logic <> :type_scope:x_'->'_x not
R522:525 Coq.Init.Logic <> :type_scope:x_'->'_x not
R519:521 Coq.Init.Datatypes <> nat ind
R513:514 smallstep <> tm ind
R695:698 smallstep <> eval ind
R567:570 smallstep <> ::x_'\\'_x not
R564:564 smallstep <> C constr
R566:566 smallstep <> n var
R571:571 smallstep <> n var
R620:629 Coq.Init.Logic <> :type_scope:x_'->'_x not
R638:647 Coq.Init.Logic <> :type_scope:x_'->'_x not
R655:659 smallstep <> ::x_'\\'_x not
R667:667 smallstep <> ::x_'\\'_x not
R648:648 smallstep <> P constr
R653:654 smallstep <> t2 var
R650:651 smallstep <> t1 var
R662:664 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R660:661 smallstep <> n1 var
R665:666 smallstep <> n2 var
R632:635 smallstep <> ::x_'\\'_x not
R630:631 smallstep <> t2 var
R636:637 smallstep <> n2 var
R614:617 smallstep <> ::x_'\\'_x not
R612:613 smallstep <> t1 var
R618:619 smallstep <> n1 var
R695:698 smallstep <> eval ind
not 678:678 <> ::x_'\\'_x
mod 714:725 <> SimpleArith1
ind 788:791 SimpleArith1 step
constr 819:835 SimpleArith1 ST_PlusConstConst
constr 895:902 SimpleArith1 ST_Plus1
constr 975:982 SimpleArith1 ST_Plus2
R797:800 Coq.Init.Logic <> :type_scope:x_'->'_x not
R803:806 Coq.Init.Logic <> :type_scope:x_'->'_x not
R801:802 smallstep <> tm ind
R795:796 smallstep <> tm ind
R1087:1090 smallstep <> step ind
R874:878 smallstep SimpleArith1 ::x_'==>'_x not
R859:859 smallstep <> P constr
R869:869 smallstep <> C constr
R871:872 smallstep <> n2 var
R862:862 smallstep <> C constr
R864:865 smallstep <> n1 var
R879:879 smallstep <> C constr
R884:886 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R882:883 smallstep <> n1 var
R887:888 smallstep <> n2 var
R940:949 Coq.Init.Logic <> :type_scope:x_'->'_x not
R957:961 smallstep SimpleArith1 ::x_'==>'_x not
R950:950 smallstep <> P constr
R955:956 smallstep <> t2 var
R952:953 smallstep <> t1 var
R962:962 smallstep <> P constr
R968:969 smallstep <> t2 var
R964:966 smallstep <> t1' var
R932:936 smallstep SimpleArith1 ::x_'==>'_x not
R930:931 smallstep <> t1 var
R937:939 smallstep <> t1' var
R1020:1029 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1041:1045 smallstep SimpleArith1 ::x_'==>'_x not
R1030:1030 smallstep <> P constr
R1039:1040 smallstep <> t2 var
R1033:1033 smallstep <> C constr
R1035:1036 smallstep <> n1 var
R1046:1046 smallstep <> P constr
R1055:1057 smallstep <> t2' var
R1049:1049 smallstep <> C constr
R1051:1052 smallstep <> n1 var
R1012:1016 smallstep SimpleArith1 ::x_'==>'_x not
R1010:1011 smallstep <> t2 var
R1017:1019 smallstep <> t2' var
R1087:1090 smallstep SimpleArith1 step ind
not 1068:1068 SimpleArith1 ::x_'==>'_x
def 1108:1118 SimpleArith1 test_step_1
R1158:1167 smallstep SimpleArith1 ::x_'==>'_x not
R1128:1128 smallstep <> P constr
R1144:1144 smallstep <> P constr
R1153:1153 smallstep <> C constr
R1147:1147 smallstep <> C constr
R1130:1130 smallstep <> P constr
R1138:1138 smallstep <> C constr
R1133:1133 smallstep <> C constr
R1168:1168 smallstep <> P constr
R1181:1181 smallstep <> P constr
R1190:1190 smallstep <> C constr
R1184:1184 smallstep <> C constr
R1170:1170 smallstep <> C constr
R1174:1176 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R1210:1217 smallstep SimpleArith1 ST_Plus1 constr
R1210:1217 smallstep SimpleArith1 ST_Plus1 constr
R1226:1242 smallstep SimpleArith1 ST_PlusConstConst constr
R1226:1242 smallstep SimpleArith1 ST_PlusConstConst constr
def 1259:1269 SimpleArith1 test_step_2
R1306:1310 smallstep SimpleArith1 ::x_'==>'_x not
R1273:1273 smallstep <> P constr
R1282:1282 smallstep <> P constr
R1291:1291 smallstep <> P constr
R1300:1300 smallstep <> C constr
R1294:1294 smallstep <> C constr
R1285:1285 smallstep <> C constr
R1276:1276 smallstep <> C constr
R1311:1311 smallstep <> P constr
R1320:1320 smallstep <> P constr
R1329:1329 smallstep <> C constr
R1333:1335 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R1323:1323 smallstep <> C constr
R1314:1314 smallstep <> C constr
R1355:1362 smallstep SimpleArith1 ST_Plus2 constr
R1355:1362 smallstep SimpleArith1 ST_Plus2 constr
R1378:1385 smallstep SimpleArith1 ST_Plus2 constr
R1378:1385 smallstep SimpleArith1 ST_Plus2 constr
R1395:1411 smallstep SimpleArith1 ST_PlusConstConst constr
R1395:1411 smallstep SimpleArith1 ST_PlusConstConst constr
R1423:1434 smallstep SimpleArith1 <> mod
def 1449:1461 <> deterministic
R1478:1485 rel <> relation def
R1487:1487 smallstep <> X var
R1512:1512 smallstep <> X var
R1521:1525 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1532:1535 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1538:1540 Coq.Init.Logic <> :type_scope:x_'='_x not
R1536:1537 smallstep <> y1 var
R1541:1542 smallstep <> y2 var
R1526:1526 smallstep <> R var
R1530:1531 smallstep <> y2 var
R1528:1528 smallstep <> x var
R1515:1515 smallstep <> R var
R1519:1520 smallstep <> y1 var
R1517:1517 smallstep <> x var
mod 1553:1564 <> SimpleArith2
prf 1596:1613 SimpleArith2 step_deterministic
R1616:1628 smallstep <> deterministic def
R1630:1633 smallstep SimpleArith1 step ind
R1650:1662 smallstep <> deterministic def
R1759:1770 smallstep SimpleArith2 <> mod
R1920:1920 Coq.Init.Datatypes <> S constr
R1923:1923 Coq.Init.Datatypes <> S constr
R1920:1920 Coq.Init.Datatypes <> S constr
R1923:1923 Coq.Init.Datatypes <> S constr
R1961:1961 Coq.Init.Datatypes <> S constr
mod 2039:2050 <> SimpleArith3
prf 2082:2103 SimpleArith3 step_deterministic_alt
R2107:2119 smallstep <> deterministic def
R2121:2124 smallstep SimpleArith1 step ind
R2453:2464 smallstep SimpleArith3 <> mod
ind 2478:2482 <> value
constr 2504:2510 <> v_const
R2488:2491 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2486:2487 smallstep <> tm ind
R2524:2528 smallstep <> value ind
R2531:2531 smallstep <> C constr
R2533:2533 smallstep <> n var
ind 2597:2600 <> step
constr 2628:2644 <> ST_PlusConstConst
constr 2714:2721 <> ST_Plus1
constr 2798:2805 <> ST_Plus2
R2606:2609 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2612:2615 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2610:2611 smallstep <> tm ind
R2604:2605 smallstep <> tm ind
R2944:2947 smallstep <> step ind
R2687:2697 smallstep <> ::x_'==>'_x not
R2672:2672 smallstep <> P constr
R2682:2682 smallstep <> C constr
R2684:2685 smallstep <> n2 var
R2675:2675 smallstep <> C constr
R2677:2678 smallstep <> n1 var
R2698:2698 smallstep <> C constr
R2703:2705 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R2701:2702 smallstep <> n1 var
R2706:2707 smallstep <> n2 var
R2761:2772 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2780:2784 smallstep <> ::x_'==>'_x not
R2773:2773 smallstep <> P constr
R2778:2779 smallstep <> t2 var
R2775:2776 smallstep <> t1 var
R2785:2785 smallstep <> P constr
R2791:2792 smallstep <> t2 var
R2787:2789 smallstep <> t1' var
R2753:2757 smallstep <> ::x_'==>'_x not
R2751:2752 smallstep <> t1 var
R2758:2760 smallstep <> t1' var
R2843:2872 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2883:2894 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2902:2906 smallstep <> ::x_'==>'_x not
R2895:2895 smallstep <> P constr
R2900:2901 smallstep <> t2 var
R2897:2898 smallstep <> v1 var
R2907:2907 smallstep <> P constr
R2912:2914 smallstep <> t2' var
R2909:2910 smallstep <> v1 var
R2875:2879 smallstep <> ::x_'==>'_x not
R2873:2874 smallstep <> t2 var
R2880:2882 smallstep <> t2' var
R2835:2839 smallstep <> value ind
R2841:2842 smallstep <> v1 var
R2944:2947 smallstep <> step ind
not 2925:2925 <> ::x_'==>'_x
prf 2965:2982 <> step_deterministic
R2988:3000 smallstep <> deterministic def
R3002:3005 smallstep <> step ind
prf 3055:3069 <> strong_progress
R3092:3096 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R3116:3116 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R3085:3089 smallstep <> value ind
R3091:3091 smallstep <> t var
R3097:3103 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3106:3107 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3109:3113 smallstep <> ::x_'==>'_x not
R3108:3108 smallstep <> t var
R3114:3115 smallstep <> t' var
R3161:3167 smallstep <> v_const constr
R3161:3167 smallstep <> v_const constr
def 3251:3261 <> normal_form
R3276:3283 rel <> relation def
R3285:3285 smallstep <> X var
R3291:3291 smallstep <> X var
R3306:3307 Coq.Init.Logic <> :type_scope:'~'_x not
R3308:3314 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3317:3318 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3319:3319 smallstep <> R var
R3323:3324 smallstep <> t' var
R3321:3321 smallstep <> t var
prf 3334:3344 <> value_is_nf
R3367:3370 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3371:3381 smallstep <> normal_form def
R3388:3388 smallstep <> v var
R3383:3386 smallstep <> step ind
R3360:3364 smallstep <> value ind
R3366:3366 smallstep <> v var
R3405:3415 smallstep <> normal_form def
R3433:3435 Coq.Init.Logic <> not def
prf 3500:3510 <> nf_is_value
R3544:3547 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3548:3552 smallstep <> value ind
R3554:3554 smallstep <> t var
R3526:3536 smallstep <> normal_form def
R3543:3543 smallstep <> t var
R3538:3541 smallstep <> step ind
R3571:3581 smallstep <> normal_form def
R3615:3619 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R3608:3612 smallstep <> value ind
R3620:3626 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3629:3630 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3632:3634 smallstep <> ::x_'==>'_x not
R3635:3636 smallstep <> t' var
R3615:3619 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R3608:3612 smallstep <> value ind
R3620:3626 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3629:3630 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R3632:3634 smallstep <> ::x_'==>'_x not
R3635:3636 smallstep <> t' var
R3648:3662 smallstep <> strong_progress prfax
R3648:3662 smallstep <> strong_progress prfax
prf 3742:3757 <> nf_same_as_value
R3791:3795 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R3773:3783 smallstep <> normal_form def
R3790:3790 smallstep <> t var
R3785:3788 smallstep <> step ind
R3796:3800 smallstep <> value ind
R3802:3802 smallstep <> t var
R3825:3835 smallstep <> nf_is_value thm
R3825:3835 smallstep <> nf_is_value thm
R3844:3854 smallstep <> value_is_nf thm
R3844:3854 smallstep <> value_is_nf thm
ind 3911:3915 <> multi
constr 3962:3971 <> multi_refl
constr 4007:4016 <> multi_step
R3930:3937 rel <> relation def
R3939:3939 smallstep <> X var
R3944:3951 rel <> relation def
R3987:3987 smallstep <> X var
R3991:3995 smallstep <> multi ind
R4001:4001 smallstep <> x var
R3999:3999 smallstep <> x var
R3997:3997 smallstep <> R var
R3991:3995 smallstep <> X var
R4036:4036 smallstep <> X var
R4065:4088 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4100:4123 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4124:4128 smallstep <> multi ind
R4134:4134 smallstep <> z var
R4132:4132 smallstep <> x var
R4130:4130 smallstep <> R var
R4124:4128 smallstep <> X var
R4089:4093 smallstep <> multi ind
R4099:4099 smallstep <> z var
R4097:4097 smallstep <> y var
R4095:4095 smallstep <> R var
R4089:4093 smallstep <> X var
R4060:4060 smallstep <> R var
R4064:4064 smallstep <> y var
R4062:4062 smallstep <> x var
R4168:4172 smallstep <> multi ind
R4174:4177 smallstep <> step ind
not 4147:4147 <> ::x_'==>*'_x
prf 4209:4215 <> multi_R
R4238:4245 rel <> relation def
R4247:4247 smallstep <> X var
R4257:4257 smallstep <> X var
R4273:4276 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4278:4282 smallstep <> multi ind
R4284:4284 smallstep <> R var
R4289:4289 smallstep <> y var
R4287:4287 smallstep <> x var
R4268:4268 smallstep <> R var
R4272:4272 smallstep <> y var
R4270:4270 smallstep <> x var
R4313:4322 smallstep <> multi_step constr
R4313:4322 smallstep <> multi_step constr
R4350:4359 smallstep <> multi_refl constr
R4350:4359 smallstep <> multi_refl constr
prf 4376:4386 <> multi_trans
R4412:4419 rel <> relation def
R4421:4421 smallstep <> X var
R4433:4433 smallstep <> X var
R4454:4463 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4475:4484 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4485:4489 smallstep <> multi ind
R4495:4495 smallstep <> z var
R4493:4493 smallstep <> x var
R4491:4491 smallstep <> R var
R4464:4468 smallstep <> multi ind
R4474:4474 smallstep <> z var
R4472:4472 smallstep <> y var
R4470:4470 smallstep <> R var
R4443:4447 smallstep <> multi ind
R4453:4453 smallstep <> y var
R4451:4451 smallstep <> x var
R4449:4449 smallstep <> R var
R4562:4571 smallstep <> multi_step constr
R4562:4571 smallstep <> multi_step constr
prf 4630:4645 <> test_multistep_1
R4679:4682 smallstep <> ::x_'==>*'_x not
R4648:4648 smallstep <> P constr
R4665:4665 smallstep <> P constr
R4674:4674 smallstep <> C constr
R4668:4668 smallstep <> C constr
R4650:4650 smallstep <> P constr
R4659:4659 smallstep <> C constr
R4653:4653 smallstep <> C constr
R4683:4683 smallstep <> C constr
R4686:4686 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4692:4696 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4702:4702 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4688:4690 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4698:4700 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4736:4736 smallstep <> P constr
R4766:4766 smallstep <> P constr
R4775:4775 smallstep <> C constr
R4769:4769 smallstep <> C constr
R4739:4739 smallstep <> C constr
R4743:4745 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4719:4728 smallstep <> multi_step constr
R4736:4736 smallstep <> P constr
R4766:4766 smallstep <> P constr
R4775:4775 smallstep <> C constr
R4769:4769 smallstep <> C constr
R4739:4739 smallstep <> C constr
R4743:4745 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4719:4728 smallstep <> multi_step constr
R4789:4796 smallstep <> ST_Plus1 constr
R4789:4796 smallstep <> ST_Plus1 constr
R4805:4821 smallstep <> ST_PlusConstConst constr
R4805:4821 smallstep <> ST_PlusConstConst constr
R4847:4847 smallstep <> P constr
R4878:4878 smallstep <> C constr
R4882:4884 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4850:4850 smallstep <> C constr
R4854:4856 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4830:4839 smallstep <> multi_step constr
R4847:4847 smallstep <> P constr
R4878:4878 smallstep <> C constr
R4882:4884 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4850:4850 smallstep <> C constr
R4854:4856 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4830:4839 smallstep <> multi_step constr
R4897:4904 smallstep <> ST_Plus2 constr
R4897:4904 smallstep <> ST_Plus2 constr
R4913:4919 smallstep <> v_const constr
R4913:4919 smallstep <> v_const constr
R4928:4944 smallstep <> ST_PlusConstConst constr
R4928:4944 smallstep <> ST_PlusConstConst constr
R4970:4970 smallstep <> C constr
R4978:4981 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4987:4987 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4974:4976 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4983:4985 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4953:4962 smallstep <> multi_step constr
R4970:4970 smallstep <> C constr
R4978:4981 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4987:4987 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4974:4976 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4983:4985 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4953:4962 smallstep <> multi_step constr
R4998:5014 smallstep <> ST_PlusConstConst constr
R4998:5014 smallstep <> ST_PlusConstConst constr
R5023:5032 smallstep <> multi_refl constr
R5023:5032 smallstep <> multi_refl constr
prf 5047:5063 <> test_multistep_1'
R5097:5102 smallstep <> ::x_'==>*'_x not
R5066:5066 smallstep <> P constr
R5083:5083 smallstep <> P constr
R5092:5092 smallstep <> C constr
R5086:5086 smallstep <> C constr
R5068:5068 smallstep <> P constr
R5077:5077 smallstep <> C constr
R5071:5071 smallstep <> C constr
R5103:5103 smallstep <> C constr
R5106:5106 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5112:5116 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5122:5122 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5108:5110 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5118:5120 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5140:5149 smallstep <> multi_step constr
R5140:5149 smallstep <> multi_step constr
R5158:5165 smallstep <> ST_Plus1 constr
R5158:5165 smallstep <> ST_Plus1 constr
R5174:5190 smallstep <> ST_PlusConstConst constr
R5174:5190 smallstep <> ST_PlusConstConst constr
R5202:5211 smallstep <> multi_step constr
R5202:5211 smallstep <> multi_step constr
R5220:5227 smallstep <> ST_Plus2 constr
R5220:5227 smallstep <> ST_Plus2 constr
R5236:5242 smallstep <> v_const constr
R5236:5242 smallstep <> v_const constr
R5253:5269 smallstep <> ST_PlusConstConst constr
R5253:5269 smallstep <> ST_PlusConstConst constr
R5281:5290 smallstep <> multi_step constr
R5281:5290 smallstep <> multi_step constr
R5299:5315 smallstep <> ST_PlusConstConst constr
R5299:5315 smallstep <> ST_PlusConstConst constr
R5326:5335 smallstep <> multi_refl constr
R5326:5335 smallstep <> multi_refl constr
prf 5350:5365 <> test_multistep_2
R5373:5378 smallstep <> ::x_'==>*'_x not
R5370:5370 smallstep <> C constr
R5379:5379 smallstep <> C constr
R5397:5406 smallstep <> multi_refl constr
R5397:5406 smallstep <> multi_refl constr
prf 5421:5436 <> test_multistep_3
R5458:5472 smallstep <> ::x_'==>*'_x not
R5445:5445 smallstep <> P constr
R5454:5454 smallstep <> C constr
R5448:5448 smallstep <> C constr
R5473:5473 smallstep <> P constr
R5482:5482 smallstep <> C constr
R5476:5476 smallstep <> C constr
R5501:5510 smallstep <> multi_refl constr
R5501:5510 smallstep <> multi_refl constr
prf 5525:5540 <> test_multistep_4
R5573:5579 smallstep <> ::x_'==>*'_x not
R5543:5543 smallstep <> P constr
R5550:5550 smallstep <> P constr
R5558:5558 smallstep <> P constr
R5567:5567 smallstep <> C constr
R5561:5561 smallstep <> C constr
R5552:5552 smallstep <> C constr
R5545:5545 smallstep <> C constr
R5580:5580 smallstep <> P constr
R5587:5587 smallstep <> C constr
R5591:5594 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5600:5600 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5596:5598 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5582:5582 smallstep <> C constr
R5635:5635 smallstep <> P constr
R5642:5642 smallstep <> P constr
R5649:5649 smallstep <> C constr
R5653:5655 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5644:5644 smallstep <> C constr
R5637:5637 smallstep <> C constr
R5618:5627 smallstep <> multi_step constr
R5635:5635 smallstep <> P constr
R5642:5642 smallstep <> P constr
R5649:5649 smallstep <> C constr
R5653:5655 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5644:5644 smallstep <> C constr
R5637:5637 smallstep <> C constr
R5618:5627 smallstep <> multi_step constr
R5669:5676 smallstep <> ST_Plus2 constr
R5669:5676 smallstep <> ST_Plus2 constr
R5685:5691 smallstep <> v_const constr
R5685:5691 smallstep <> v_const constr
R5700:5707 smallstep <> ST_Plus2 constr
R5700:5707 smallstep <> ST_Plus2 constr
R5716:5722 smallstep <> v_const constr
R5716:5722 smallstep <> v_const constr
R5731:5747 smallstep <> ST_PlusConstConst constr
R5731:5747 smallstep <> ST_PlusConstConst constr
R5773:5773 smallstep <> P constr
R5780:5780 smallstep <> C constr
R5784:5787 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5793:5793 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5789:5791 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5775:5775 smallstep <> C constr
R5756:5765 smallstep <> multi_step constr
R5773:5773 smallstep <> P constr
R5780:5780 smallstep <> C constr
R5784:5787 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5793:5793 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5789:5791 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5775:5775 smallstep <> C constr
R5756:5765 smallstep <> multi_step constr
R5805:5812 smallstep <> ST_Plus2 constr
R5805:5812 smallstep <> ST_Plus2 constr
R5821:5827 smallstep <> v_const constr
R5821:5827 smallstep <> v_const constr
R5836:5852 smallstep <> ST_PlusConstConst constr
R5836:5852 smallstep <> ST_PlusConstConst constr
R5861:5870 smallstep <> multi_refl constr
R5861:5870 smallstep <> multi_refl constr
def 5890:5905 <> step_normal_form
R5910:5920 smallstep <> normal_form def
R5922:5925 smallstep <> step ind
def 5939:5952 <> normal_form_of
R5962:5963 smallstep <> tm ind
R5981:5984 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5973:5978 smallstep <> ::x_'==>*'_x not
R5972:5972 smallstep <> t var
R5979:5980 smallstep <> t' var
R5985:6000 smallstep <> step_normal_form def
R6002:6003 smallstep <> t' var
prf 6016:6034 <> normal_forms_unique
R6039:6051 smallstep <> deterministic def
R6053:6066 smallstep <> normal_form_of def
R6083:6095 smallstep <> deterministic def
R6105:6118 smallstep <> normal_form_of def
def 6246:6256 <> normalizing
R6270:6277 rel <> relation def
R6279:6279 smallstep <> X var
R6297:6303 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R6306:6311 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R6326:6329 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6313:6317 smallstep <> multi ind
R6319:6319 smallstep <> R var
R6324:6325 smallstep <> t' var
R6322:6322 smallstep <> t var
R6330:6340 smallstep <> normal_form def
R6344:6345 smallstep <> t' var
R6342:6342 smallstep <> R var
prf 6355:6371 <> multistep_congr_1
R6409:6417 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6425:6430 smallstep <> ::x_'==>*'_x not
R6418:6418 smallstep <> P constr
R6423:6424 smallstep <> t2 var
R6420:6421 smallstep <> t1 var
R6431:6431 smallstep <> P constr
R6437:6438 smallstep <> t2 var
R6433:6435 smallstep <> t1' var
R6400:6405 smallstep <> ::x_'==>*'_x not
R6398:6399 smallstep <> t1 var
R6406:6408 smallstep <> t1' var
R6476:6485 smallstep <> multi_refl constr
R6476:6485 smallstep <> multi_refl constr
R6511:6511 smallstep <> P constr
R6494:6503 smallstep <> multi_step constr
R6511:6511 smallstep <> P constr
R6494:6503 smallstep <> multi_step constr
R6526:6533 smallstep <> ST_Plus1 constr
R6526:6533 smallstep <> ST_Plus1 constr
prf 6569:6585 <> multistep_congr_2
R6620:6628 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6640:6648 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6656:6661 smallstep <> ::x_'==>*'_x not
R6649:6649 smallstep <> P constr
R6654:6655 smallstep <> t2 var
R6651:6652 smallstep <> t1 var
R6662:6662 smallstep <> P constr
R6667:6669 smallstep <> t2' var
R6664:6665 smallstep <> t1 var
R6631:6636 smallstep <> ::x_'==>*'_x not
R6629:6630 smallstep <> t2 var
R6637:6639 smallstep <> t2' var
R6612:6616 smallstep <> value ind
R6618:6619 smallstep <> t1 var
R6709:6718 smallstep <> multi_refl constr
R6709:6718 smallstep <> multi_refl constr
R6746:6746 smallstep <> P constr
R6729:6738 smallstep <> multi_step constr
R6746:6746 smallstep <> P constr
R6729:6738 smallstep <> multi_step constr
R6761:6768 smallstep <> ST_Plus2 constr
R6761:6768 smallstep <> ST_Plus2 constr
prf 6819:6834 <> step_normalizing
R6840:6850 smallstep <> normalizing def
R6852:6855 smallstep <> step ind
R6872:6882 smallstep <> normalizing def
R6908:6908 smallstep <> C constr
R6908:6908 smallstep <> C constr
R6927:6936 smallstep <> multi_refl constr
R6927:6936 smallstep <> multi_refl constr
R6947:6962 smallstep <> nf_same_as_value thm
R6947:6962 smallstep <> nf_same_as_value thm
R6971:6977 smallstep <> v_const constr
R6971:6977 smallstep <> v_const constr
R7060:7075 smallstep <> nf_same_as_value thm
R7060:7075 smallstep <> nf_same_as_value thm
R7060:7075 smallstep <> nf_same_as_value thm
R7093:7108 smallstep <> nf_same_as_value thm
R7093:7108 smallstep <> nf_same_as_value thm
R7093:7108 smallstep <> nf_same_as_value thm
prf 7189:7203 <> eval__multistep
R7227:7230 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7232:7237 smallstep <> ::x_'==>*'_x not
R7231:7231 smallstep <> t var
R7238:7238 smallstep <> C constr
R7240:7240 smallstep <> n var
R7222:7225 smallstep <> ::x_'\\'_x not
R7221:7221 smallstep <> t var
R7226:7226 smallstep <> n var
R7295:7305 smallstep <> multi_trans thm
R7295:7305 smallstep <> multi_trans thm
R7324:7329 smallstep <> ::x_'==>*'_x not
R7317:7317 smallstep <> P constr
R7330:7330 smallstep <> P constr
R7333:7333 smallstep <> C constr
R7324:7329 smallstep <> ::x_'==>*'_x not
R7317:7317 smallstep <> P constr
R7330:7330 smallstep <> P constr
R7333:7333 smallstep <> C constr
R7354:7370 smallstep <> multistep_congr_1 thm
R7354:7370 smallstep <> multistep_congr_1 thm
R7408:7418 smallstep <> multi_trans thm
R7408:7418 smallstep <> multi_trans thm
R7431:7447 smallstep <> multistep_congr_2 thm
R7431:7447 smallstep <> multistep_congr_2 thm
def 7530:7565 <> manual_grade_for_eval__multistep_inf
R7569:7574 poly <> option ind
R7577:7580 Coq.Init.Datatypes <> prod ind
R7586:7591 Coq.Strings.String <> string ind
R7582:7584 Coq.Init.Datatypes <> nat ind
R7597:7600 poly <> None constr
prf 7610:7619 <> step__eval
R7651:7659 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7667:7675 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7677:7680 smallstep <> ::x_'\\'_x not
R7676:7676 smallstep <> t var
R7681:7681 smallstep <> n var
R7662:7665 smallstep <> ::x_'\\'_x not
R7660:7661 smallstep <> t' var
R7666:7666 smallstep <> n var
R7644:7648 smallstep <> ::x_'==>'_x not
R7643:7643 smallstep <> t var
R7649:7650 smallstep <> t' var
prf 7991:8005 <> multistep__eval
R8043:8049 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8050:8056 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R8058:8059 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R8068:8071 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8062:8064 Coq.Init.Logic <> :type_scope:x_'='_x not
R8060:8061 smallstep <> t' var
R8065:8065 smallstep <> C constr
R8067:8067 smallstep <> n var
R8073:8076 smallstep <> ::x_'\\'_x not
R8072:8072 smallstep <> t var
R8077:8077 smallstep <> n var
R8024:8037 smallstep <> normal_form_of def
R8041:8042 smallstep <> t' var
R8039:8039 smallstep <> t var
R8102:8115 smallstep <> normal_form_of def
R8160:8164 smallstep <> value ind
R8160:8164 smallstep <> value ind
R8179:8189 smallstep <> nf_is_value thm
R8179:8189 smallstep <> nf_is_value thm
R8272:8278 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R8286:8287 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R8283:8285 Coq.Init.Datatypes <> nat ind
R8295:8298 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8289:8291 Coq.Init.Logic <> :type_scope:x_'='_x not
R8292:8292 smallstep <> C constr
R8294:8294 smallstep <> n var
R8300:8303 smallstep <> ::x_'\\'_x not
R8304:8304 smallstep <> n var
R8272:8278 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R8286:8287 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R8283:8285 Coq.Init.Datatypes <> nat ind
R8295:8298 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8289:8291 Coq.Init.Logic <> :type_scope:x_'='_x not
R8292:8292 smallstep <> C constr
R8294:8294 smallstep <> n var
R8300:8303 smallstep <> ::x_'\\'_x not
R8304:8304 smallstep <> n var
R8431:8440 smallstep <> step__eval thm
R8431:8440 smallstep <> step__eval thm
prf 8478:8487 <> evalF_eval
R8516:8520 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R8512:8514 Coq.Init.Logic <> :type_scope:x_'='_x not
R8505:8509 smallstep <> evalF def
R8511:8511 smallstep <> t var
R8515:8515 smallstep <> n var
R8522:8525 smallstep <> ::x_'\\'_x not
R8521:8521 smallstep <> t var
R8526:8526 smallstep <> n var
mod 8799:8806 <> Combined
ind 8819:8820 Combined tm
constr 8836:8836 Combined C
constr 8854:8854 Combined P
constr 8877:8881 Combined ttrue
constr 8892:8897 Combined tfalse
constr 8908:8910 Combined tif
R8843:8846 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8847:8848 smallstep <> tm ind
R8840:8842 Coq.Init.Datatypes <> nat ind
R8860:8863 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8866:8869 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8870:8871 smallstep <> tm ind
R8864:8865 smallstep <> tm ind
R8858:8859 smallstep <> tm ind
R8885:8886 smallstep <> tm ind
R8901:8902 smallstep <> tm ind
R8916:8919 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8922:8925 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8928:8931 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8932:8933 smallstep <> tm ind
R8926:8927 smallstep <> tm ind
R8920:8921 smallstep <> tm ind
R8914:8915 smallstep <> tm ind
ind 8946:8950 Combined value
constr 8972:8978 Combined v_const
constr 9008:9013 Combined v_true
constr 9033:9039 Combined v_false
R8956:8959 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8954:8955 smallstep Combined tm ind
R8992:8996 smallstep <> value ind
R8999:8999 smallstep Combined C constr
R9001:9001 smallstep <> n var
R9017:9021 smallstep <> value ind
R9023:9027 smallstep Combined ttrue constr
R9043:9047 smallstep <> value ind
R9049:9054 smallstep Combined tfalse constr
ind 9115:9118 Combined step
constr 9146:9162 Combined ST_PlusConstConst
constr 9222:9229 Combined ST_Plus1
constr 9302:9309 Combined ST_Plus2
constr 9400:9408 Combined ST_IfTrue
constr 9459:9468 Combined ST_IfFalse
constr 9520:9524 Combined ST_If
R9124:9127 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9130:9133 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9128:9129 smallstep Combined tm ind
R9122:9123 smallstep Combined tm ind
R9634:9637 smallstep <> step ind
R9201:9205 smallstep Combined ::x_'==>'_x not
R9186:9186 smallstep Combined P constr
R9196:9196 smallstep Combined C constr
R9198:9199 smallstep <> n2 var
R9189:9189 smallstep Combined C constr
R9191:9192 smallstep <> n1 var
R9206:9206 smallstep Combined C constr
R9211:9213 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R9209:9210 smallstep <> n1 var
R9214:9215 smallstep <> n2 var
R9267:9276 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9284:9288 smallstep Combined ::x_'==>'_x not
R9277:9277 smallstep Combined P constr
R9282:9283 smallstep <> t2 var
R9279:9280 smallstep <> t1 var
R9289:9289 smallstep Combined P constr
R9295:9296 smallstep <> t2 var
R9291:9293 smallstep <> t1' var
R9259:9263 smallstep Combined ::x_'==>'_x not
R9257:9258 smallstep <> t1 var
R9264:9266 smallstep <> t1' var
R9345:9354 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9365:9374 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9382:9386 smallstep Combined ::x_'==>'_x not
R9375:9375 smallstep Combined P constr
R9380:9381 smallstep <> t2 var
R9377:9378 smallstep <> v1 var
R9387:9387 smallstep Combined P constr
R9392:9394 smallstep <> t2' var
R9389:9390 smallstep <> v1 var
R9357:9361 smallstep Combined ::x_'==>'_x not
R9355:9356 smallstep <> t2 var
R9362:9364 smallstep <> t2' var
R9337:9341 smallstep Combined value ind
R9343:9344 smallstep <> v1 var
R9447:9451 smallstep Combined ::x_'==>'_x not
R9432:9434 smallstep Combined tif constr
R9445:9446 smallstep <> t2 var
R9442:9443 smallstep <> t1 var
R9436:9440 smallstep Combined ttrue constr
R9452:9453 smallstep <> t1 var
R9508:9512 smallstep Combined ::x_'==>'_x not
R9492:9494 smallstep Combined tif constr
R9506:9507 smallstep <> t2 var
R9503:9504 smallstep <> t1 var
R9496:9501 smallstep Combined tfalse constr
R9513:9514 smallstep <> t2 var
R9565:9574 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9587:9591 smallstep Combined ::x_'==>'_x not
R9575:9577 smallstep Combined tif constr
R9585:9586 smallstep <> t3 var
R9582:9583 smallstep <> t2 var
R9579:9580 smallstep <> t1 var
R9592:9594 smallstep Combined tif constr
R9603:9604 smallstep <> t3 var
R9600:9601 smallstep <> t2 var
R9596:9598 smallstep <> t1' var
R9557:9561 smallstep Combined ::x_'==>'_x not
R9555:9556 smallstep <> t1 var
R9562:9564 smallstep <> t1' var
R9634:9637 smallstep Combined step ind
not 9615:9615 Combined ::x_'==>'_x
R9652:9659 smallstep Combined <> mod
def 9673:9708 <> manual_grade_for_combined_properties
R9712:9717 poly <> option ind
R9720:9723 Coq.Init.Datatypes <> prod ind
R9729:9734 Coq.Strings.String <> string ind
R9725:9727 Coq.Init.Datatypes <> nat ind
R9740:9743 poly <> None constr
ind 9757:9760 <> aval
constr 9784:9789 <> av_num
R9768:9771 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9764:9767 imp <> aexp ind
R9803:9806 smallstep <> aval ind
R9809:9812 imp <> ANum constr
R9814:9814 smallstep <> n var
ind 9919:9923 <> astep
constr 9964:9968 <> AS_Id
constr 10023:10029 <> AS_Plus
constr 10111:10118 <> AS_Plus1
constr 10218:10225 <> AS_Plus2
constr 10342:10349 <> AS_Minus
constr 10440:10448 <> AS_Minus1
constr 10550:10558 <> AS_Minus2
constr 10677:10683 <> AS_Mult
constr 10772:10779 <> AS_Mult1
constr 10879:10886 <> AS_Mult2
R9932:9935 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9940:9943 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9948:9951 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9944:9947 imp <> aexp ind
R9936:9939 imp <> aexp ind
R9927:9931 imp <> state def
R11037:11041 smallstep <> astep ind
R9996:9998 smallstep <> ::x_'/'_x_'==>a'_x not
R10001:10006 smallstep <> ::x_'/'_x_'==>a'_x not
R9999:10000 smallstep <> st var
R9991:9993 imp <> AId constr
R9995:9995 smallstep <> i var
R10007:10010 imp <> ANum constr
R10013:10014 smallstep <> st var
R10016:10016 smallstep <> i var
R10081:10083 smallstep <> ::x_'/'_x_'==>a'_x not
R10086:10091 smallstep <> ::x_'/'_x_'==>a'_x not
R10084:10085 smallstep <> st var
R10056:10060 imp <> APlus constr
R10073:10076 imp <> ANum constr
R10078:10079 smallstep <> n2 var
R10063:10066 imp <> ANum constr
R10068:10069 smallstep <> n1 var
R10092:10095 imp <> ANum constr
R10100:10102 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R10098:10099 smallstep <> n1 var
R10103:10104 smallstep <> n2 var
R10165:10174 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10175:10175 smallstep <> ::x_'/'_x_'==>a'_x not
R10187:10190 smallstep <> ::x_'/'_x_'==>a'_x not
R10193:10199 smallstep <> ::x_'/'_x_'==>a'_x not
R10212:10212 smallstep <> ::x_'/'_x_'==>a'_x not
R10191:10192 smallstep <> st var
R10176:10180 imp <> APlus constr
R10185:10186 smallstep <> a2 var
R10182:10183 smallstep <> a1 var
R10200:10204 imp <> APlus constr
R10210:10211 smallstep <> a2 var
R10206:10208 smallstep <> a1' var
R10151:10153 smallstep <> ::x_'/'_x_'==>a'_x not
R10156:10161 smallstep <> ::x_'/'_x_'==>a'_x not
R10154:10155 smallstep <> st var
R10149:10150 smallstep <> a1 var
R10162:10164 smallstep <> a1' var
R10263:10272 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10289:10298 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10299:10299 smallstep <> ::x_'/'_x_'==>a'_x not
R10311:10314 smallstep <> ::x_'/'_x_'==>a'_x not
R10317:10323 smallstep <> ::x_'/'_x_'==>a'_x not
R10336:10336 smallstep <> ::x_'/'_x_'==>a'_x not
R10315:10316 smallstep <> st var
R10300:10304 imp <> APlus constr
R10309:10310 smallstep <> a2 var
R10306:10307 smallstep <> v1 var
R10324:10328 imp <> APlus constr
R10333:10335 smallstep <> a2' var
R10330:10331 smallstep <> v1 var
R10275:10277 smallstep <> ::x_'/'_x_'==>a'_x not
R10280:10285 smallstep <> ::x_'/'_x_'==>a'_x not
R10278:10279 smallstep <> st var
R10273:10274 smallstep <> a2 var
R10286:10288 smallstep <> a2' var
R10256:10259 smallstep <> aval ind
R10261:10262 smallstep <> v1 var
R10376:10376 smallstep <> ::x_'/'_x_'==>a'_x not
R10403:10406 smallstep <> ::x_'/'_x_'==>a'_x not
R10409:10415 smallstep <> ::x_'/'_x_'==>a'_x not
R10434:10434 smallstep <> ::x_'/'_x_'==>a'_x not
R10407:10408 smallstep <> st var
R10377:10382 imp <> AMinus constr
R10395:10398 imp <> ANum constr
R10400:10401 smallstep <> n2 var
R10385:10388 imp <> ANum constr
R10390:10391 smallstep <> n1 var
R10416:10419 imp <> ANum constr
R10422:10426 Coq.Init.Peano <> minus syndef
R10431:10432 smallstep <> n2 var
R10428:10429 smallstep <> n1 var
R10495:10504 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10505:10505 smallstep <> ::x_'/'_x_'==>a'_x not
R10518:10521 smallstep <> ::x_'/'_x_'==>a'_x not
R10524:10530 smallstep <> ::x_'/'_x_'==>a'_x not
R10544:10544 smallstep <> ::x_'/'_x_'==>a'_x not
R10522:10523 smallstep <> st var
R10506:10511 imp <> AMinus constr
R10516:10517 smallstep <> a2 var
R10513:10514 smallstep <> a1 var
R10531:10536 imp <> AMinus constr
R10542:10543 smallstep <> a2 var
R10538:10540 smallstep <> a1' var
R10481:10483 smallstep <> ::x_'/'_x_'==>a'_x not
R10486:10491 smallstep <> ::x_'/'_x_'==>a'_x not
R10484:10485 smallstep <> st var
R10479:10480 smallstep <> a1 var
R10492:10494 smallstep <> a1' var
R10596:10605 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10622:10631 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10632:10632 smallstep <> ::x_'/'_x_'==>a'_x not
R10645:10648 smallstep <> ::x_'/'_x_'==>a'_x not
R10651:10657 smallstep <> ::x_'/'_x_'==>a'_x not
R10671:10671 smallstep <> ::x_'/'_x_'==>a'_x not
R10649:10650 smallstep <> st var
R10633:10638 imp <> AMinus constr
R10643:10644 smallstep <> a2 var
R10640:10641 smallstep <> v1 var
R10658:10663 imp <> AMinus constr
R10668:10670 smallstep <> a2' var
R10665:10666 smallstep <> v1 var
R10608:10610 smallstep <> ::x_'/'_x_'==>a'_x not
R10613:10618 smallstep <> ::x_'/'_x_'==>a'_x not
R10611:10612 smallstep <> st var
R10606:10607 smallstep <> a2 var
R10619:10621 smallstep <> a2' var
R10589:10592 smallstep <> aval ind
R10594:10595 smallstep <> v1 var
R10710:10710 smallstep <> ::x_'/'_x_'==>a'_x not
R10736:10739 smallstep <> ::x_'/'_x_'==>a'_x not
R10742:10748 smallstep <> ::x_'/'_x_'==>a'_x not
R10766:10766 smallstep <> ::x_'/'_x_'==>a'_x not
R10740:10741 smallstep <> st var
R10711:10715 imp <> AMult constr
R10728:10731 imp <> ANum constr
R10733:10734 smallstep <> n2 var
R10718:10721 imp <> ANum constr
R10723:10724 smallstep <> n1 var
R10749:10752 imp <> ANum constr
R10755:10758 Coq.Init.Peano <> mult syndef
R10763:10764 smallstep <> n2 var
R10760:10761 smallstep <> n1 var
R10826:10835 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10836:10836 smallstep <> ::x_'/'_x_'==>a'_x not
R10848:10851 smallstep <> ::x_'/'_x_'==>a'_x not
R10854:10860 smallstep <> ::x_'/'_x_'==>a'_x not
R10873:10873 smallstep <> ::x_'/'_x_'==>a'_x not
R10852:10853 smallstep <> st var
R10837:10841 imp <> AMult constr
R10846:10847 smallstep <> a2 var
R10843:10844 smallstep <> a1 var
R10861:10865 imp <> AMult constr
R10871:10872 smallstep <> a2 var
R10867:10869 smallstep <> a1' var
R10812:10814 smallstep <> ::x_'/'_x_'==>a'_x not
R10817:10822 smallstep <> ::x_'/'_x_'==>a'_x not
R10815:10816 smallstep <> st var
R10810:10811 smallstep <> a1 var
R10823:10825 smallstep <> a1' var
R10924:10933 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10950:10959 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10960:10960 smallstep <> ::x_'/'_x_'==>a'_x not
R10972:10975 smallstep <> ::x_'/'_x_'==>a'_x not
R10978:10984 smallstep <> ::x_'/'_x_'==>a'_x not
R10997:10997 smallstep <> ::x_'/'_x_'==>a'_x not
R10976:10977 smallstep <> st var
R10961:10965 imp <> AMult constr
R10970:10971 smallstep <> a2 var
R10967:10968 smallstep <> v1 var
R10985:10989 imp <> AMult constr
R10994:10996 smallstep <> a2' var
R10991:10992 smallstep <> v1 var
R10936:10938 smallstep <> ::x_'/'_x_'==>a'_x not
R10941:10946 smallstep <> ::x_'/'_x_'==>a'_x not
R10939:10940 smallstep <> st var
R10934:10935 smallstep <> a2 var
R10947:10949 smallstep <> a2' var
R10917:10920 smallstep <> aval ind
R10922:10923 smallstep <> v1 var
R11037:11041 smallstep <> astep ind
not 11010:11010 <> ::x_'/'_x_'==>a'_x
ind 11153:11157 <> bstep
constr 11196:11200 <> BS_Eq
constr 11311:11316 <> BS_Eq1
constr 11406:11411 <> BS_Eq2
constr 11516:11522 <> BS_LtEq
constr 11638:11645 <> BS_LtEq1
constr 11735:11742 <> BS_LtEq2
constr 11847:11856 <> BS_NotTrue
constr 11907:11917 <> BS_NotFalse
constr 11968:11977 <> BS_NotStep
constr 12060:12073 <> BS_AndTrueTrue
constr 12129:12143 <> BS_AndTrueFalse
constr 12201:12211 <> BS_AndFalse
constr 12269:12282 <> BS_AndTrueStep
constr 12377:12386 <> BS_AndStep
R11166:11169 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11174:11177 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11182:11185 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11178:11181 imp <> bexp ind
R11170:11173 imp <> bexp ind
R11161:11165 imp <> state def
R12510:12514 smallstep <> bstep ind
R11225:11225 smallstep <> ::x_'/'_x_'==>b'_x not
R11249:11252 smallstep <> ::x_'/'_x_'==>b'_x not
R11255:11265 smallstep <> ::x_'/'_x_'==>b'_x not
R11307:11307 smallstep <> ::x_'/'_x_'==>b'_x not
R11253:11254 smallstep <> st var
R11226:11228 imp <> BEq constr
R11241:11244 imp <> ANum constr
R11246:11247 smallstep <> n2 var
R11231:11234 imp <> ANum constr
R11236:11237 smallstep <> n1 var
R11270:11276 basics <> beq_nat def
R11281:11282 smallstep <> n2 var
R11278:11279 smallstep <> n1 var
R11301:11306 imp <> BFalse constr
R11290:11294 imp <> BTrue constr
R11361:11368 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11369:11369 smallstep <> ::x_'/'_x_'==>b'_x not
R11379:11382 smallstep <> ::x_'/'_x_'==>b'_x not
R11385:11391 smallstep <> ::x_'/'_x_'==>b'_x not
R11402:11402 smallstep <> ::x_'/'_x_'==>b'_x not
R11383:11384 smallstep <> st var
R11370:11372 imp <> BEq constr
R11377:11378 smallstep <> a2 var
R11374:11375 smallstep <> a1 var
R11392:11394 imp <> BEq constr
R11400:11401 smallstep <> a2 var
R11396:11398 smallstep <> a1' var
R11347:11349 smallstep <> ::x_'/'_x_'==>a'_x not
R11352:11357 smallstep <> ::x_'/'_x_'==>a'_x not
R11350:11351 smallstep <> st var
R11345:11346 smallstep <> a1 var
R11358:11360 smallstep <> a1' var
R11447:11454 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11471:11478 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11479:11479 smallstep <> ::x_'/'_x_'==>b'_x not
R11489:11492 smallstep <> ::x_'/'_x_'==>b'_x not
R11495:11501 smallstep <> ::x_'/'_x_'==>b'_x not
R11512:11512 smallstep <> ::x_'/'_x_'==>b'_x not
R11493:11494 smallstep <> st var
R11480:11482 imp <> BEq constr
R11487:11488 smallstep <> a2 var
R11484:11485 smallstep <> v1 var
R11502:11504 imp <> BEq constr
R11509:11511 smallstep <> a2' var
R11506:11507 smallstep <> v1 var
R11457:11459 smallstep <> ::x_'/'_x_'==>a'_x not
R11462:11467 smallstep <> ::x_'/'_x_'==>a'_x not
R11460:11461 smallstep <> st var
R11455:11456 smallstep <> a2 var
R11468:11470 smallstep <> a2' var
R11440:11443 smallstep <> aval ind
R11445:11446 smallstep <> v1 var
R11547:11547 smallstep <> ::x_'/'_x_'==>b'_x not
R11571:11574 smallstep <> ::x_'/'_x_'==>b'_x not
R11577:11596 smallstep <> ::x_'/'_x_'==>b'_x not
R11634:11634 smallstep <> ::x_'/'_x_'==>b'_x not
R11575:11576 smallstep <> st var
R11548:11550 imp <> BLe constr
R11563:11566 imp <> ANum constr
R11568:11569 smallstep <> n2 var
R11553:11556 imp <> ANum constr
R11558:11559 smallstep <> n1 var
R11601:11603 Coq.Arith.Compare_dec <> leb syndef
R11608:11609 smallstep <> n2 var
R11605:11606 smallstep <> n1 var
R11628:11633 imp <> BFalse constr
R11617:11621 imp <> BTrue constr
R11690:11697 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11698:11698 smallstep <> ::x_'/'_x_'==>b'_x not
R11708:11711 smallstep <> ::x_'/'_x_'==>b'_x not
R11714:11720 smallstep <> ::x_'/'_x_'==>b'_x not
R11731:11731 smallstep <> ::x_'/'_x_'==>b'_x not
R11712:11713 smallstep <> st var
R11699:11701 imp <> BLe constr
R11706:11707 smallstep <> a2 var
R11703:11704 smallstep <> a1 var
R11721:11723 imp <> BLe constr
R11729:11730 smallstep <> a2 var
R11725:11727 smallstep <> a1' var
R11676:11678 smallstep <> ::x_'/'_x_'==>a'_x not
R11681:11686 smallstep <> ::x_'/'_x_'==>a'_x not
R11679:11680 smallstep <> st var
R11674:11675 smallstep <> a1 var
R11687:11689 smallstep <> a1' var
R11778:11785 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11802:11809 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11810:11810 smallstep <> ::x_'/'_x_'==>b'_x not
R11820:11823 smallstep <> ::x_'/'_x_'==>b'_x not
R11826:11832 smallstep <> ::x_'/'_x_'==>b'_x not
R11843:11843 smallstep <> ::x_'/'_x_'==>b'_x not
R11824:11825 smallstep <> st var
R11811:11813 imp <> BLe constr
R11818:11819 smallstep <> a2 var
R11815:11816 smallstep <> v1 var
R11833:11835 imp <> BLe constr
R11840:11842 smallstep <> a2' var
R11837:11838 smallstep <> v1 var
R11788:11790 smallstep <> ::x_'/'_x_'==>a'_x not
R11793:11798 smallstep <> ::x_'/'_x_'==>a'_x not
R11791:11792 smallstep <> st var
R11786:11787 smallstep <> a2 var
R11799:11801 smallstep <> a2' var
R11771:11774 smallstep <> aval ind
R11776:11777 smallstep <> v1 var
R11875:11875 smallstep <> ::x_'/'_x_'==>b'_x not
R11886:11889 smallstep <> ::x_'/'_x_'==>b'_x not
R11892:11897 smallstep <> ::x_'/'_x_'==>b'_x not
R11890:11891 smallstep <> st var
R11876:11879 imp <> BNot constr
R11881:11885 imp <> BTrue constr
R11898:11903 imp <> BFalse constr
R11936:11936 smallstep <> ::x_'/'_x_'==>b'_x not
R11948:11951 smallstep <> ::x_'/'_x_'==>b'_x not
R11954:11959 smallstep <> ::x_'/'_x_'==>b'_x not
R11952:11953 smallstep <> st var
R11937:11940 imp <> BNot constr
R11942:11947 imp <> BFalse constr
R11960:11964 imp <> BTrue constr
R12019:12026 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12027:12027 smallstep <> ::x_'/'_x_'==>b'_x not
R12035:12038 smallstep <> ::x_'/'_x_'==>b'_x not
R12041:12047 smallstep <> ::x_'/'_x_'==>b'_x not
R12056:12056 smallstep <> ::x_'/'_x_'==>b'_x not
R12039:12040 smallstep <> st var
R12028:12031 imp <> BNot constr
R12033:12034 smallstep <> b1 var
R12048:12051 imp <> BNot constr
R12053:12055 smallstep <> b1' var
R12005:12007 smallstep <> ::x_'/'_x_'==>b'_x not
R12010:12015 smallstep <> ::x_'/'_x_'==>b'_x not
R12008:12009 smallstep <> st var
R12003:12004 smallstep <> b1 var
R12016:12018 smallstep <> b1' var
R12092:12092 smallstep <> ::x_'/'_x_'==>b'_x not
R12109:12112 smallstep <> ::x_'/'_x_'==>b'_x not
R12115:12120 smallstep <> ::x_'/'_x_'==>b'_x not
R12113:12114 smallstep <> st var
R12093:12096 imp <> BAnd constr
R12104:12108 imp <> BTrue constr
R12098:12102 imp <> BTrue constr
R12121:12125 imp <> BTrue constr
R12162:12162 smallstep <> ::x_'/'_x_'==>b'_x not
R12180:12183 smallstep <> ::x_'/'_x_'==>b'_x not
R12186:12191 smallstep <> ::x_'/'_x_'==>b'_x not
R12184:12185 smallstep <> st var
R12163:12166 imp <> BAnd constr
R12174:12179 imp <> BFalse constr
R12168:12172 imp <> BTrue constr
R12192:12197 imp <> BFalse constr
R12233:12233 smallstep <> ::x_'/'_x_'==>b'_x not
R12248:12251 smallstep <> ::x_'/'_x_'==>b'_x not
R12254:12259 smallstep <> ::x_'/'_x_'==>b'_x not
R12252:12253 smallstep <> st var
R12234:12237 imp <> BAnd constr
R12246:12247 smallstep <> b2 var
R12239:12244 imp <> BFalse constr
R12260:12265 imp <> BFalse constr
R12324:12331 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12332:12332 smallstep <> ::x_'/'_x_'==>b'_x not
R12346:12349 smallstep <> ::x_'/'_x_'==>b'_x not
R12352:12358 smallstep <> ::x_'/'_x_'==>b'_x not
R12373:12373 smallstep <> ::x_'/'_x_'==>b'_x not
R12350:12351 smallstep <> st var
R12333:12336 imp <> BAnd constr
R12344:12345 smallstep <> b2 var
R12338:12342 imp <> BTrue constr
R12359:12362 imp <> BAnd constr
R12370:12372 smallstep <> b2' var
R12364:12368 imp <> BTrue constr
R12310:12312 smallstep <> ::x_'/'_x_'==>b'_x not
R12315:12320 smallstep <> ::x_'/'_x_'==>b'_x not
R12313:12314 smallstep <> st var
R12308:12309 smallstep <> b2 var
R12321:12323 smallstep <> b2' var
R12431:12438 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12439:12439 smallstep <> ::x_'/'_x_'==>b'_x not
R12450:12453 smallstep <> ::x_'/'_x_'==>b'_x not
R12456:12462 smallstep <> ::x_'/'_x_'==>b'_x not
R12474:12474 smallstep <> ::x_'/'_x_'==>b'_x not
R12454:12455 smallstep <> st var
R12440:12443 imp <> BAnd constr
R12448:12449 smallstep <> b2 var
R12445:12446 smallstep <> b1 var
R12463:12466 imp <> BAnd constr
R12472:12473 smallstep <> b2 var
R12468:12470 smallstep <> b1' var
R12417:12419 smallstep <> ::x_'/'_x_'==>b'_x not
R12422:12427 smallstep <> ::x_'/'_x_'==>b'_x not
R12420:12421 smallstep <> st var
R12415:12416 smallstep <> b1 var
R12428:12430 smallstep <> b1' var
R12510:12514 smallstep <> bstep ind
not 12483:12483 <> ::x_'/'_x_'==>b'_x
ind 12650:12654 <> cstep
constr 12704:12713 <> CS_AssStep
constr 12804:12809 <> CS_Ass
constr 12890:12899 <> CS_SeqStep
constr 13007:13018 <> CS_SeqFinish
constr 13076:13084 <> CS_IfTrue
constr 13161:13170 <> CS_IfFalse
constr 13248:13256 <> CS_IfStep
constr 13394:13401 <> CS_While
R12658:12658 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12670:12674 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12675:12675 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12687:12691 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12679:12681 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R12676:12678 imp <> com ind
R12682:12686 imp <> state def
R12662:12664 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R12659:12661 imp <> com ind
R12665:12669 imp <> state def
R13567:13571 smallstep <> cstep ind
R13580:13580 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13583:13583 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13587:13587 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13573:13573 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13575:13575 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13578:13578 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12755:12764 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12765:12765 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R12773:12776 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R12779:12784 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R12793:12796 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R12767:12771 imp <> :com_scope:x_'::='_x not
R12766:12766 smallstep <> i var
R12772:12772 smallstep <> a var
R12777:12778 smallstep <> st var
R12786:12790 imp <> :com_scope:x_'::='_x not
R12785:12785 smallstep <> i var
R12791:12792 smallstep <> a' var
R12797:12798 smallstep <> st var
R12742:12744 smallstep <> ::x_'/'_x_'==>a'_x not
R12747:12752 smallstep <> ::x_'/'_x_'==>a'_x not
R12745:12746 smallstep <> st var
R12741:12741 smallstep <> a var
R12753:12754 smallstep <> a' var
R12834:12834 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R12849:12852 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R12855:12859 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R12864:12867 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R12884:12884 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R12836:12841 imp <> :com_scope:x_'::='_x not
R12848:12848 imp <> :com_scope:x_'::='_x not
R12835:12835 smallstep <> i var
R12842:12845 imp <> ANum constr
R12847:12847 smallstep <> n var
R12853:12854 smallstep <> st var
R12860:12863 imp <> :com_scope:'SKIP' not
R12870:12874 maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R12876:12880 maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R12882:12883 maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R12868:12869 smallstep <> st var
R12875:12875 smallstep <> i var
R12881:12881 smallstep <> n var
R12955:12964 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12965:12965 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R12974:12977 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R12980:12985 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R12995:12998 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R12968:12971 imp <> :com_scope:x_';;'_x not
R12966:12967 smallstep <> c1 var
R12972:12973 smallstep <> c2 var
R12978:12979 smallstep <> st var
R12989:12992 imp <> :com_scope:x_';;'_x not
R12986:12988 smallstep <> c1' var
R12993:12994 smallstep <> c2 var
R12999:13001 smallstep <> st' var
R12936:12938 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R12941:12945 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R12949:12951 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R12934:12935 smallstep <> c1 var
R12939:12940 smallstep <> st var
R12946:12948 smallstep <> c1' var
R12952:12954 smallstep <> st' var
R13042:13042 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R13053:13056 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R13059:13063 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R13066:13068 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R13047:13050 imp <> :com_scope:x_';;'_x not
R13043:13046 imp <> :com_scope:'SKIP' not
R13051:13052 smallstep <> c2 var
R13057:13058 smallstep <> st var
R13064:13065 smallstep <> c2 var
R13069:13070 smallstep <> st var
R13139:13141 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R13144:13148 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R13151:13153 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R13111:13114 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13120:13125 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13128:13133 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13136:13138 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13115:13119 imp <> BTrue constr
R13126:13127 smallstep <> c1 var
R13134:13135 smallstep <> c2 var
R13142:13143 smallstep <> st var
R13149:13150 smallstep <> c1 var
R13154:13155 smallstep <> st var
R13226:13228 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R13231:13235 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R13238:13240 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R13197:13200 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13207:13212 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13215:13220 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13223:13225 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13201:13206 imp <> BFalse constr
R13213:13214 smallstep <> c1 var
R13221:13222 smallstep <> c2 var
R13229:13230 smallstep <> st var
R13236:13237 smallstep <> c2 var
R13241:13242 smallstep <> st var
R13302:13315 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13340:13342 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R13345:13357 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R13383:13386 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R13316:13319 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13321:13326 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13329:13334 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13337:13339 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13320:13320 smallstep <> b var
R13327:13328 smallstep <> c1 var
R13335:13336 smallstep <> c2 var
R13343:13344 smallstep <> st var
R13358:13361 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13364:13369 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13372:13377 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13380:13382 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13362:13363 smallstep <> b' var
R13370:13371 smallstep <> c1 var
R13378:13379 smallstep <> c2 var
R13387:13388 smallstep <> st var
R13289:13291 smallstep <> ::x_'/'_x_'==>b'_x not
R13294:13299 smallstep <> ::x_'/'_x_'==>b'_x not
R13292:13293 smallstep <> st var
R13288:13288 smallstep <> b var
R13300:13301 smallstep <> b' var
R13431:13431 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R13449:13452 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R13455:13466 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R13517:13520 smallstep <> ::x_'/'_x_'==>'_x_'/'_x not
R13432:13437 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R13439:13442 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R13445:13448 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R13438:13438 smallstep <> b var
R13443:13444 smallstep <> c1 var
R13453:13454 smallstep <> st var
R13467:13470 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13472:13478 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13503:13509 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13514:13516 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13471:13471 smallstep <> b var
R13481:13484 imp <> :com_scope:x_';;'_x not
R13502:13502 imp <> :com_scope:x_';;'_x not
R13479:13480 smallstep <> c1 var
R13485:13490 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R13492:13495 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R13498:13501 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R13491:13491 smallstep <> b var
R13496:13497 smallstep <> c1 var
R13510:13513 imp <> :com_scope:'SKIP' not
R13521:13522 smallstep <> st var
R13567:13571 smallstep <> cstep ind
R13580:13580 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13583:13583 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13587:13587 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13573:13573 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13575:13575 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13578:13578 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
not 13533:13533 <> ::x_'/'_x_'==>'_x_'/'_x
mod 13599:13602 <> CImp
ind 13615:13617 CImp com
constr 13633:13637 CImp CSkip
constr 13649:13652 CImp CAss
constr 13682:13685 CImp CSeq
constr 13711:13713 CImp CIf
constr 13747:13752 CImp CWhile
constr 13792:13795 CImp CPar
R13641:13643 smallstep <> com ind
R13662:13665 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13670:13673 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13674:13676 smallstep <> com ind
R13666:13669 imp <> aexp ind
R13656:13661 Coq.Strings.String <> string ind
R13692:13695 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13699:13702 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13703:13705 smallstep <> com ind
R13696:13698 smallstep <> com ind
R13689:13691 smallstep <> com ind
R13721:13724 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13728:13731 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13735:13738 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13739:13741 smallstep <> com ind
R13732:13734 smallstep <> com ind
R13725:13727 smallstep <> com ind
R13717:13720 imp <> bexp ind
R13760:13763 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13767:13770 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13771:13773 smallstep <> com ind
R13764:13766 smallstep <> com ind
R13756:13759 imp <> bexp ind
R13802:13805 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13809:13812 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13813:13815 smallstep <> com ind
R13806:13808 smallstep <> com ind
R13799:13801 smallstep <> com ind
R13841:13845 smallstep CImp CSkip constr
not 13827:13827 CImp ::'SKIP'
R13875:13878 smallstep CImp CAss constr
not 13857:13857 CImp ::x_'::='_x
R13926:13929 smallstep CImp CSeq constr
not 13909:13909 CImp ::x_';;'_x
R14014:14019 smallstep CImp CWhile constr
not 13983:13983 CImp ::'WHILE'_x_'DO'_x_'END'
R14112:14114 smallstep CImp CIf constr
not 14071:14071 CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
R14203:14206 smallstep CImp CPar constr
not 14170:14170 CImp ::'PAR'_x_'WITH'_x_'END'
ind 14261:14265 CImp cstep
constr 14334:14343 CImp CS_AssStep
constr 14434:14439 CImp CS_Ass
constr 14518:14527 CImp CS_SeqStep
constr 14635:14646 CImp CS_SeqFinish
constr 14704:14712 CImp CS_IfTrue
constr 14791:14800 CImp CS_IfFalse
constr 14880:14888 CImp CS_IfStep
constr 15027:15034 CImp CS_While
constr 15182:15188 CImp CS_Par1
constr 15316:15322 CImp CS_Par2
constr 15450:15459 CImp CS_ParDone
R14269:14269 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14281:14285 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14286:14286 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14298:14302 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14290:14292 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R14287:14289 smallstep CImp com ind
R14293:14297 imp <> state def
R14273:14275 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R14270:14272 smallstep CImp com ind
R14276:14280 imp <> state def
R15566:15570 smallstep <> cstep ind
R15579:15579 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15582:15582 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15586:15586 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15572:15572 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15574:15574 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15577:15577 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R14385:14394 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14395:14395 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14403:14406 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14409:14414 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14423:14426 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14397:14401 smallstep CImp ::x_'::='_x not
R14396:14396 smallstep <> i var
R14402:14402 smallstep <> a var
R14407:14408 smallstep <> st var
R14416:14420 smallstep CImp ::x_'::='_x not
R14415:14415 smallstep <> i var
R14421:14422 smallstep <> a' var
R14427:14428 smallstep <> st var
R14372:14374 smallstep <> ::x_'/'_x_'==>a'_x not
R14377:14382 smallstep <> ::x_'/'_x_'==>a'_x not
R14375:14376 smallstep <> st var
R14371:14371 smallstep <> a var
R14383:14384 smallstep <> a' var
R14464:14464 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14479:14482 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14485:14489 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14494:14496 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14466:14471 smallstep CImp ::x_'::='_x not
R14478:14478 smallstep CImp ::x_'::='_x not
R14465:14465 smallstep <> i var
R14472:14475 imp <> ANum constr
R14477:14477 smallstep <> n var
R14483:14484 smallstep <> st var
R14490:14493 smallstep CImp ::'SKIP' not
R14499:14503 maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R14505:14509 maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R14511:14512 maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R14497:14498 smallstep <> st var
R14504:14504 smallstep <> i var
R14510:14510 smallstep <> n var
R14583:14592 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14593:14593 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14602:14605 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14608:14613 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14623:14626 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14596:14599 smallstep CImp ::x_';;'_x not
R14594:14595 smallstep <> c1 var
R14600:14601 smallstep <> c2 var
R14606:14607 smallstep <> st var
R14617:14620 smallstep CImp ::x_';;'_x not
R14614:14616 smallstep <> c1' var
R14621:14622 smallstep <> c2 var
R14627:14629 smallstep <> st' var
R14564:14566 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14569:14573 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14577:14579 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14562:14563 smallstep <> c1 var
R14567:14568 smallstep <> st var
R14574:14576 smallstep <> c1' var
R14580:14582 smallstep <> st' var
R14670:14670 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14681:14684 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14687:14691 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14694:14696 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14675:14678 smallstep CImp ::x_';;'_x not
R14671:14674 smallstep CImp ::'SKIP' not
R14679:14680 smallstep <> c2 var
R14685:14686 smallstep <> st var
R14692:14693 smallstep <> c2 var
R14697:14698 smallstep <> st var
R14739:14739 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14768:14771 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14774:14778 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14781:14783 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14740:14743 smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R14749:14754 smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R14757:14762 smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R14765:14767 smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R14744:14748 imp <> BTrue constr
R14755:14756 smallstep <> c1 var
R14763:14764 smallstep <> c2 var
R14772:14773 smallstep <> st var
R14779:14780 smallstep <> c1 var
R14784:14785 smallstep <> st var
R14827:14827 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14857:14860 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14863:14867 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14870:14872 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14828:14831 smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R14838:14843 smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R14846:14851 smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R14854:14856 smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R14832:14837 imp <> BFalse constr
R14844:14845 smallstep <> c1 var
R14852:14853 smallstep <> c2 var
R14861:14862 smallstep <> st var
R14868:14869 smallstep <> c2 var
R14873:14874 smallstep <> st var
R14933:14946 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14947:14947 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14972:14975 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14978:14990 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R15016:15019 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R14948:14951 smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R14953:14958 smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R14961:14966 smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R14969:14971 smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R14952:14952 smallstep <> b var
R14959:14960 smallstep <> c1 var
R14967:14968 smallstep <> c2 var
R14976:14977 smallstep <> st var
R14991:14994 smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R14997:15002 smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R15005:15010 smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R15013:15015 smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R14995:14996 smallstep <> b' var
R15003:15004 smallstep <> c1 var
R15011:15012 smallstep <> c2 var
R15020:15021 smallstep <> st var
R14921:14922 smallstep <> ::x_'/'_x_'==>b'_x not
R14925:14930 smallstep <> ::x_'/'_x_'==>b'_x not
R14923:14924 smallstep <> st var
R14920:14920 smallstep <> b var
R14931:14932 smallstep <> b' var
R15064:15064 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R15082:15085 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R15088:15100 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R15151:15154 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R15065:15070 smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R15072:15075 smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R15078:15081 smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R15071:15071 smallstep <> b var
R15076:15077 smallstep <> c1 var
R15086:15087 smallstep <> st var
R15101:15104 smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R15106:15112 smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R15137:15143 smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R15148:15150 smallstep CImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R15105:15105 smallstep <> b var
R15115:15118 smallstep CImp ::x_';;'_x not
R15136:15136 smallstep CImp ::x_';;'_x not
R15113:15114 smallstep <> c1 var
R15119:15124 smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R15126:15129 smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R15132:15135 smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R15125:15125 smallstep <> b var
R15130:15131 smallstep <> c1 var
R15144:15147 smallstep CImp ::'SKIP' not
R15155:15156 smallstep <> st var
R15244:15253 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15254:15254 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R15273:15276 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R15279:15284 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R15304:15307 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R15255:15258 smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R15261:15266 smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R15269:15272 smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R15259:15260 smallstep <> c1 var
R15267:15268 smallstep <> c2 var
R15277:15278 smallstep <> st var
R15285:15288 smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R15292:15297 smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R15300:15303 smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R15289:15291 smallstep <> c1' var
R15298:15299 smallstep <> c2 var
R15308:15310 smallstep <> st' var
R15225:15227 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R15230:15234 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R15238:15240 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R15223:15224 smallstep <> c1 var
R15228:15229 smallstep <> st var
R15235:15237 smallstep <> c1' var
R15241:15243 smallstep <> st' var
R15378:15387 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15388:15388 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R15407:15410 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R15413:15418 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R15438:15441 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R15389:15392 smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R15395:15400 smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R15403:15406 smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R15393:15394 smallstep <> c1 var
R15401:15402 smallstep <> c2 var
R15411:15412 smallstep <> st var
R15419:15422 smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R15425:15430 smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R15434:15437 smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R15423:15424 smallstep <> c1 var
R15431:15433 smallstep <> c2' var
R15442:15444 smallstep <> st' var
R15359:15361 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R15364:15368 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R15372:15374 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R15357:15358 smallstep <> c2 var
R15362:15363 smallstep <> st var
R15369:15371 smallstep <> c2' var
R15375:15377 smallstep <> st' var
R15480:15480 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R15503:15506 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R15509:15513 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R15518:15520 smallstep CImp ::x_'/'_x_'==>'_x_'/'_x not
R15481:15484 smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R15489:15494 smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R15499:15502 smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R15485:15488 smallstep CImp ::'SKIP' not
R15495:15498 smallstep CImp ::'SKIP' not
R15507:15508 smallstep <> st var
R15514:15517 smallstep CImp ::'SKIP' not
R15521:15522 smallstep <> st var
R15566:15570 smallstep CImp cstep ind
R15579:15579 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15582:15582 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15586:15586 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15572:15572 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15574:15574 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15577:15577 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
not 15532:15532 CImp ::x_'/'_x_'==>'_x_'/'_x
def 15601:15610 CImp cmultistep
R15615:15619 smallstep <> multi ind
R15621:15625 smallstep CImp cstep ind
R15675:15679 smallstep <> multi ind
R15694:15694 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15697:15697 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15701:15701 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15687:15687 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15689:15689 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15692:15692 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R15681:15685 smallstep CImp cstep ind
not 15637:15637 CImp ::x_'/'_x_'==>*'_x_'/'_x
def 15766:15773 CImp par_loop
R15777:15779 smallstep CImp com ind
R15786:15793 smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R15801:15812 smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R15853:15858 smallstep CImp ::'PAR'_x_'WITH'_x_'END' not
R15795:15799 smallstep CImp ::x_'::='_x not
R15794:15794 imp <> Y def
R15813:15818 smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R15824:15833 smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R15845:15852 smallstep CImp ::'WHILE'_x_'DO'_x_'END' not
R15820:15822 imp <> :bexp_scope:x_'='_x not
R15819:15819 imp <> Y def
R15835:15839 smallstep CImp ::x_'::='_x not
R15834:15834 imp <> X def
R15841:15843 imp <> :aexp_scope:x_'+'_x not
R15840:15840 imp <> X def
def 15870:15887 CImp par_loop_example_0
R15892:15898 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15902:15910 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15947:15954 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R15919:15921 smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R15931:15936 smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R15941:15943 smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R15911:15918 smallstep CImp par_loop def
R15922:15927 maps <> ::'{'_'-->'_x_'}' not
R15929:15930 maps <> ::'{'_'-->'_x_'}' not
R15937:15940 smallstep CImp ::'SKIP' not
R15944:15946 smallstep <> st' var
R15960:15962 Coq.Init.Logic <> :type_scope:x_'='_x not
R15955:15957 smallstep <> st' var
R15959:15959 imp <> X def
R15980:15987 Coq.Init.Logic <> ex_intro constr
R15980:15987 Coq.Init.Logic <> ex_intro constr
R16004:16013 smallstep <> multi_step constr
R16004:16013 smallstep <> multi_step constr
R16022:16028 smallstep CImp CS_Par1 constr
R16022:16028 smallstep CImp CS_Par1 constr
R16037:16042 smallstep CImp CS_Ass constr
R16037:16042 smallstep CImp CS_Ass constr
R16052:16061 smallstep <> multi_step constr
R16052:16061 smallstep <> multi_step constr
R16070:16076 smallstep CImp CS_Par2 constr
R16070:16076 smallstep CImp CS_Par2 constr
R16085:16092 smallstep CImp CS_While constr
R16085:16092 smallstep CImp CS_While constr
R16102:16111 smallstep <> multi_step constr
R16102:16111 smallstep <> multi_step constr
R16121:16127 smallstep CImp CS_Par2 constr
R16121:16127 smallstep CImp CS_Par2 constr
R16136:16144 smallstep CImp CS_IfStep constr
R16136:16144 smallstep CImp CS_IfStep constr
R16153:16158 smallstep <> BS_Eq1 constr
R16153:16158 smallstep <> BS_Eq1 constr
R16167:16171 smallstep <> AS_Id constr
R16167:16171 smallstep <> AS_Id constr
R16181:16190 smallstep <> multi_step constr
R16181:16190 smallstep <> multi_step constr
R16199:16205 smallstep CImp CS_Par2 constr
R16199:16205 smallstep CImp CS_Par2 constr
R16214:16222 smallstep CImp CS_IfStep constr
R16214:16222 smallstep CImp CS_IfStep constr
R16231:16235 smallstep <> BS_Eq constr
R16231:16235 smallstep <> BS_Eq constr
R16254:16263 smallstep <> multi_step constr
R16254:16263 smallstep <> multi_step constr
R16272:16278 smallstep CImp CS_Par2 constr
R16272:16278 smallstep CImp CS_Par2 constr
R16287:16296 smallstep CImp CS_IfFalse constr
R16287:16296 smallstep CImp CS_IfFalse constr
R16308:16317 smallstep <> multi_step constr
R16308:16317 smallstep <> multi_step constr
R16326:16335 smallstep CImp CS_ParDone constr
R16326:16335 smallstep CImp CS_ParDone constr
R16347:16356 smallstep <> multi_refl constr
R16347:16356 smallstep <> multi_refl constr
def 16388:16405 CImp par_loop_example_2
R16410:16416 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16420:16428 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16465:16472 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16437:16439 smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R16449:16454 smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R16459:16461 smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R16429:16436 smallstep CImp par_loop def
R16440:16445 maps <> ::'{'_'-->'_x_'}' not
R16447:16448 maps <> ::'{'_'-->'_x_'}' not
R16455:16458 smallstep CImp ::'SKIP' not
R16462:16464 smallstep <> st' var
R16478:16480 Coq.Init.Logic <> :type_scope:x_'='_x not
R16473:16475 smallstep <> st' var
R16477:16477 imp <> X def
prf 16510:16523 CImp par_loop_any_X
R16538:16544 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16548:16553 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R16590:16597 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16562:16564 smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R16574:16579 smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R16584:16586 smallstep CImp ::x_'/'_x_'==>*'_x_'/'_x not
R16554:16561 smallstep CImp par_loop def
R16565:16570 maps <> ::'{'_'-->'_x_'}' not
R16572:16573 maps <> ::'{'_'-->'_x_'}' not
R16580:16583 smallstep CImp ::'SKIP' not
R16587:16589 smallstep <> st' var
R16603:16605 Coq.Init.Logic <> :type_scope:x_'='_x not
R16598:16600 smallstep <> st' var
R16602:16602 imp <> X def
R16606:16606 smallstep <> n var
R16631:16634 smallstep CImp <> mod
