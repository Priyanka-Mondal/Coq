DIGEST 0a3efe713c6180f67203cd8923d1980f
Fequiv
R61:73 Coq.Bool.Bool <> <> lib
R91:105 Coq.Arith.Arith <> <> lib
R123:137 Coq.Arith.EqNat <> <> lib
R155:169 Coq.omega.Omega <> <> lib
R187:200 Coq.Lists.List <> <> lib
R218:251 Coq.Logic.FunctionalExtensionality <> <> lib
R291:294 maps <> <> lib
R312:314 imp <> <> lib
def 329:334 <> aequiv
R345:348 imp <> aexp ind
R374:378 imp <> state def
R397:399 Coq.Init.Logic <> :type_scope:x_'='_x not
R386:390 imp <> aeval def
R395:396 equiv <> a1 var
R392:393 equiv <> st var
R400:404 imp <> aeval def
R409:410 equiv <> a2 var
R406:407 equiv <> st var
def 424:429 <> bequiv
R440:443 imp <> bexp ind
R469:473 imp <> state def
R492:494 Coq.Init.Logic <> :type_scope:x_'='_x not
R481:485 imp <> beval def
R490:491 equiv <> b1 var
R487:488 equiv <> st var
R495:499 imp <> beval def
R504:505 equiv <> b2 var
R501:502 equiv <> st var
prf 517:530 <> aequiv_example
R535:540 equiv <> aequiv def
R544:546 imp <> :aexp_scope:x_'-'_x not
R543:543 imp <> X def
R547:547 imp <> X def
prf 601:614 <> bequiv_example
R619:624 equiv <> bequiv def
R638:641 Coq.Init.Datatypes <> true constr
R632:634 imp <> :bexp_scope:x_'='_x not
R628:630 imp <> :aexp_scope:x_'-'_x not
R627:627 imp <> X def
R631:631 imp <> X def
R669:673 imp <> beval def
R684:697 equiv <> aequiv_example thm
R684:697 equiv <> aequiv_example thm
R684:697 equiv <> aequiv_example thm
def 730:735 <> cequiv
R746:748 imp <> com ind
R780:784 imp <> state def
R792:792 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R807:813 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R828:828 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R795:797 imp <> ::x_'/'_x_'\\'_x not
R800:803 imp <> ::x_'/'_x_'\\'_x not
R793:794 equiv <> c1 var
R798:799 equiv <> st var
R804:806 equiv <> st' var
R816:818 imp <> ::x_'/'_x_'\\'_x not
R821:824 imp <> ::x_'/'_x_'\\'_x not
R814:815 equiv <> c2 var
R819:820 equiv <> st var
R825:827 equiv <> st' var
prf 840:848 <> skip_left
R863:868 equiv <> cequiv def
R891:891 equiv <> c var
R880:882 imp <> :com_scope:x_';;'_x not
R876:879 imp <> :com_scope:'SKIP' not
R883:883 equiv <> c var
R996:1000 imp <> E_Seq constr
R996:1000 imp <> E_Seq constr
R1017:1022 imp <> E_Skip constr
R1017:1022 imp <> E_Skip constr
prf 1048:1057 <> skip_right
R1072:1077 equiv <> cequiv def
R1099:1099 equiv <> c var
R1085:1088 imp <> :com_scope:x_';;'_x not
R1084:1084 equiv <> c var
R1089:1092 imp <> :com_scope:'SKIP' not
R1133:1135 Coq.Init.Logic <> iff def
R1223:1227 imp <> E_Seq constr
R1223:1227 imp <> E_Seq constr
R1254:1259 imp <> E_Skip constr
R1254:1259 imp <> E_Skip constr
prf 1276:1290 <> IFB_true_simple
R1309:1314 equiv <> cequiv def
R1355:1356 equiv <> c1 var
R1321:1324 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R1330:1335 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R1338:1343 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R1346:1348 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R1325:1329 imp <> BTrue constr
R1336:1337 equiv <> c1 var
R1344:1345 equiv <> c2 var
R1387:1392 equiv <> cequiv def
R1482:1489 imp <> E_IfTrue constr
R1482:1489 imp <> E_IfTrue constr
prf 1538:1545 <> IFB_true
R1583:1591 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1592:1597 equiv <> cequiv def
R1640:1641 equiv <> c1 var
R1607:1610 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R1612:1617 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R1620:1625 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R1628:1630 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R1611:1611 equiv <> b var
R1618:1619 equiv <> c1 var
R1626:1627 equiv <> c2 var
R1569:1574 equiv <> bequiv def
R1578:1582 imp <> BTrue constr
R1576:1576 equiv <> b var
R1685:1690 equiv <> cequiv def
R1774:1779 equiv <> bequiv def
R1843:1850 imp <> E_IfTrue constr
R1843:1850 imp <> E_IfTrue constr
R1860:1865 equiv <> bequiv def
prf 1908:1916 <> IFB_false
R1952:1957 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1958:1963 equiv <> cequiv def
R2000:2001 equiv <> c2 var
R1970:1973 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R1975:1980 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R1983:1988 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R1991:1993 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R1974:1974 equiv <> b var
R1981:1982 equiv <> c1 var
R1989:1990 equiv <> c2 var
R1937:1942 equiv <> bequiv def
R1946:1951 imp <> BFalse constr
R1944:1944 equiv <> b var
R2026:2031 equiv <> cequiv def
R2087:2092 equiv <> bequiv def
R2171:2179 imp <> E_IfFalse constr
R2171:2179 imp <> E_IfFalse constr
R2189:2194 equiv <> bequiv def
prf 2248:2251 <> negm
R2279:2282 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2284:2286 Coq.Init.Logic <> :type_scope:x_'='_x not
R2283:2283 equiv <> b var
R2287:2291 Coq.Init.Datatypes <> false constr
R2272:2274 Coq.Init.Logic <> :type_scope:x_'='_x not
R2266:2269 Coq.Init.Datatypes <> negb def
R2271:2271 equiv <> b var
R2275:2278 Coq.Init.Datatypes <> true constr
prf 2318:2321 <> nego
R2350:2353 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2355:2357 Coq.Init.Logic <> :type_scope:x_'='_x not
R2354:2354 equiv <> b var
R2358:2361 Coq.Init.Datatypes <> true constr
R2342:2344 Coq.Init.Logic <> :type_scope:x_'='_x not
R2336:2339 Coq.Init.Datatypes <> negb def
R2341:2341 equiv <> b var
R2345:2349 Coq.Init.Datatypes <> false constr
prf 2390:2405 <> swap_if_branches
R2426:2431 equiv <> cequiv def
R2469:2472 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R2479:2484 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R2487:2492 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R2495:2497 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R2473:2476 imp <> BNot constr
R2478:2478 equiv <> b var
R2485:2486 equiv <> e2 var
R2493:2494 equiv <> e1 var
R2438:2441 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R2443:2448 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R2451:2456 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R2459:2461 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R2442:2442 equiv <> b var
R2449:2450 equiv <> e1 var
R2457:2458 equiv <> e2 var
R2523:2528 equiv <> cequiv def
R2594:2602 imp <> E_IfFalse constr
R2594:2602 imp <> E_IfFalse constr
R2659:2666 imp <> E_IfTrue constr
R2659:2666 imp <> E_IfTrue constr
R2754:2762 imp <> E_IfFalse constr
R2754:2762 imp <> E_IfFalse constr
R2784:2787 equiv <> negm prfax
R2784:2787 equiv <> negm prfax
R2843:2850 imp <> E_IfTrue constr
R2843:2850 imp <> E_IfTrue constr
R2872:2875 equiv <> nego prfax
R2872:2875 equiv <> nego prfax
prf 2936:2946 <> WHILE_false
R2979:2984 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2985:2990 equiv <> cequiv def
R3019:3022 imp <> :com_scope:'SKIP' not
R2997:3002 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R3004:3007 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R3009:3012 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R3003:3003 equiv <> b var
R3008:3008 equiv <> c var
R2964:2969 equiv <> bequiv def
R2973:2978 imp <> BFalse constr
R2971:2971 equiv <> b var
R3047:3052 equiv <> cequiv def
R3107:3112 imp <> E_Skip constr
R3107:3112 imp <> E_Skip constr
R3122:3127 equiv <> bequiv def
R3216:3227 imp <> E_WhileFalse constr
R3216:3227 imp <> E_WhileFalse constr
R3237:3242 equiv <> bequiv def
prf 3283:3300 <> WHILE_true_nonterm
R3339:3344 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3345:3347 Coq.Init.Logic <> :type_scope:'~'_x not
R3378:3379 Coq.Init.Logic <> :type_scope:'~'_x not
R3348:3348 imp <> ::x_'/'_x_'\\'_x not
R3365:3368 imp <> ::x_'/'_x_'\\'_x not
R3371:3374 imp <> ::x_'/'_x_'\\'_x not
R3349:3354 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R3356:3359 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R3361:3364 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R3355:3355 equiv <> b var
R3360:3360 equiv <> c var
R3369:3370 equiv <> st var
R3375:3377 equiv <> st' var
R3325:3330 equiv <> bequiv def
R3334:3338 imp <> BTrue constr
R3332:3332 equiv <> b var
R3461:3466 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R3468:3471 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R3473:3476 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R3461:3466 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R3468:3471 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R3473:3476 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R3752:3757 equiv <> bequiv def
prf 3959:3968 <> WHILE_true
R4002:4011 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4012:4017 equiv <> cequiv def
R4053:4058 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R4064:4067 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R4072:4075 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R4059:4063 imp <> BTrue constr
R4068:4071 imp <> :com_scope:'SKIP' not
R4027:4032 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R4034:4037 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R4039:4042 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R4033:4033 equiv <> b var
R4038:4038 equiv <> c var
R3988:3993 equiv <> bequiv def
R3997:4001 imp <> BTrue constr
R3995:3995 equiv <> b var
R4122:4139 equiv <> WHILE_true_nonterm thm
R4122:4139 equiv <> WHILE_true_nonterm thm
R4194:4211 equiv <> WHILE_true_nonterm thm
R4194:4211 equiv <> WHILE_true_nonterm thm
prf 4283:4296 <> loop_unrolling
R4313:4318 equiv <> cequiv def
R4348:4351 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4353:4359 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4381:4387 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4392:4394 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4352:4352 equiv <> b var
R4361:4364 imp <> :com_scope:x_';;'_x not
R4360:4360 equiv <> c var
R4365:4370 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R4372:4375 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R4377:4380 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R4371:4371 equiv <> b var
R4376:4376 equiv <> c var
R4388:4391 imp <> :com_scope:'SKIP' not
R4325:4330 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R4332:4335 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R4337:4340 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R4331:4331 equiv <> b var
R4336:4336 equiv <> c var
R4457:4465 imp <> E_IfFalse constr
R4457:4465 imp <> E_IfFalse constr
R4487:4492 imp <> E_Skip constr
R4487:4492 imp <> E_Skip constr
R4501:4508 imp <> E_IfTrue constr
R4501:4508 imp <> E_IfTrue constr
R4527:4531 imp <> E_Seq constr
R4527:4531 imp <> E_Seq constr
R4634:4644 imp <> E_WhileTrue constr
R4634:4644 imp <> E_WhileTrue constr
R4730:4741 imp <> E_WhileFalse constr
R4730:4741 imp <> E_WhileFalse constr
prf 4770:4778 <> seq_assoc
R4801:4806 equiv <> cequiv def
R4826:4828 imp <> :com_scope:x_';;'_x not
R4835:4835 imp <> :com_scope:x_';;'_x not
R4824:4825 equiv <> c1 var
R4831:4832 imp <> :com_scope:x_';;'_x not
R4829:4830 equiv <> c2 var
R4833:4834 equiv <> c3 var
R4809:4809 imp <> :com_scope:x_';;'_x not
R4816:4818 imp <> :com_scope:x_';;'_x not
R4812:4813 imp <> :com_scope:x_';;'_x not
R4810:4811 equiv <> c1 var
R4814:4815 equiv <> c2 var
R4819:4820 equiv <> c3 var
R4939:4941 imp <> :com_scope:x_';;'_x not
R4920:4924 imp <> E_Seq constr
R4939:4941 imp <> :com_scope:x_';;'_x not
R4920:4924 imp <> E_Seq constr
R4977:4981 imp <> E_Seq constr
R4977:4981 imp <> E_Seq constr
R5103:5105 imp <> :com_scope:x_';;'_x not
R5084:5088 imp <> E_Seq constr
R5103:5105 imp <> :com_scope:x_';;'_x not
R5084:5088 imp <> E_Seq constr
R5131:5135 imp <> E_Seq constr
R5131:5135 imp <> E_Seq constr
prf 5208:5226 <> identity_assignment
R5240:5245 Coq.Strings.String <> string ind
R5251:5256 equiv <> cequiv def
R5276:5279 imp <> :com_scope:'SKIP' not
R5264:5268 imp <> :com_scope:x_'::='_x not
R5263:5263 equiv <> X var
R5269:5269 equiv <> X var
R5364:5367 maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R5369:5373 maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R5378:5378 maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R5364:5367 maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R5369:5373 maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R5378:5378 maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R5396:5401 imp <> E_Skip constr
R5396:5401 imp <> E_Skip constr
R5410:5434 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R5410:5434 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R5453:5465 maps <> t_update_same thm
R5453:5465 maps <> t_update_same thm
R5453:5465 maps <> t_update_same thm
R5511:5515 maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R5517:5521 maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R5533:5534 maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R5522:5526 imp <> aeval def
R5511:5515 maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R5517:5521 maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R5533:5534 maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R5522:5526 imp <> aeval def
R5567:5571 imp <> E_Ass constr
R5567:5571 imp <> E_Ass constr
R5596:5620 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R5596:5620 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R5639:5651 maps <> t_update_same thm
R5639:5651 maps <> t_update_same thm
R5639:5651 maps <> t_update_same thm
prf 5681:5693 <> assign_aequiv
R5707:5712 Coq.Strings.String <> string ind
R5730:5735 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5736:5741 equiv <> cequiv def
R5750:5754 imp <> :com_scope:x_'::='_x not
R5749:5749 equiv <> X var
R5755:5755 equiv <> e var
R5743:5746 imp <> :com_scope:'SKIP' not
R5720:5725 equiv <> aequiv def
R5729:5729 equiv <> e var
R5727:5727 equiv <> X var
prf 5809:5819 <> refl_aequiv
R5835:5838 imp <> aexp ind
R5842:5847 equiv <> aequiv def
R5851:5851 equiv <> a var
R5849:5849 equiv <> a var
prf 5899:5908 <> sym_aequiv
R5928:5931 imp <> aexp ind
R5947:5950 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5951:5956 equiv <> aequiv def
R5961:5962 equiv <> a1 var
R5958:5959 equiv <> a2 var
R5935:5940 equiv <> aequiv def
R5945:5946 equiv <> a2 var
R5942:5943 equiv <> a1 var
prf 6022:6033 <> trans_aequiv
R6056:6059 imp <> aexp ind
R6077:6080 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6093:6096 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6097:6102 equiv <> aequiv def
R6107:6108 equiv <> a3 var
R6104:6105 equiv <> a1 var
R6081:6086 equiv <> aequiv def
R6091:6092 equiv <> a3 var
R6088:6089 equiv <> a2 var
R6065:6070 equiv <> aequiv def
R6075:6076 equiv <> a2 var
R6072:6073 equiv <> a1 var
R6127:6132 equiv <> aequiv def
prf 6226:6236 <> refl_bequiv
R6252:6255 imp <> bexp ind
R6259:6264 equiv <> bequiv def
R6268:6268 equiv <> b var
R6266:6266 equiv <> b var
prf 6310:6319 <> sym_bequiv
R6339:6342 imp <> bexp ind
R6360:6363 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6364:6369 equiv <> bequiv def
R6374:6375 equiv <> b1 var
R6371:6372 equiv <> b2 var
R6348:6353 equiv <> bequiv def
R6358:6359 equiv <> b2 var
R6355:6356 equiv <> b1 var
R6392:6397 equiv <> bequiv def
prf 6459:6470 <> trans_bequiv
R6493:6496 imp <> bexp ind
R6514:6517 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6530:6533 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6534:6539 equiv <> bequiv def
R6544:6545 equiv <> b3 var
R6541:6542 equiv <> b1 var
R6518:6523 equiv <> bequiv def
R6528:6529 equiv <> b3 var
R6525:6526 equiv <> b2 var
R6502:6507 equiv <> bequiv def
R6512:6513 equiv <> b2 var
R6509:6510 equiv <> b1 var
R6563:6568 equiv <> bequiv def
prf 6644:6654 <> refl_cequiv
R6670:6672 imp <> com ind
R6676:6681 equiv <> cequiv def
R6685:6685 equiv <> c var
R6683:6683 equiv <> c var
prf 6767:6776 <> sym_cequiv
R6796:6798 imp <> com ind
R6816:6819 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6820:6825 equiv <> cequiv def
R6830:6831 equiv <> c1 var
R6827:6828 equiv <> c2 var
R6804:6809 equiv <> cequiv def
R6814:6815 equiv <> c2 var
R6811:6812 equiv <> c1 var
R6870:6875 equiv <> cequiv def
R6905:6910 equiv <> cequiv def
prf 6937:6945 <> iff_trans
R6977:6977 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6987:6991 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6992:6992 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7002:7007 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7017:7017 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7010:7014 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R7008:7009 equiv <> P1 var
R7015:7016 equiv <> P3 var
R6995:6999 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R6993:6994 equiv <> P2 var
R7000:7001 equiv <> P3 var
R6980:6984 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R6978:6979 equiv <> P1 var
R6985:6986 equiv <> P2 var
prf 7099:7110 <> trans_cequiv
R7133:7135 imp <> com ind
R7153:7156 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7169:7172 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7173:7178 equiv <> cequiv def
R7183:7184 equiv <> c3 var
R7180:7181 equiv <> c1 var
R7157:7162 equiv <> cequiv def
R7167:7168 equiv <> c3 var
R7164:7165 equiv <> c2 var
R7141:7146 equiv <> cequiv def
R7151:7152 equiv <> c2 var
R7148:7149 equiv <> c1 var
R7218:7223 equiv <> cequiv def
R7259:7261 imp <> ::x_'/'_x_'\\'_x not
R7264:7267 imp <> ::x_'/'_x_'\\'_x not
R7241:7249 equiv <> iff_trans thm
R7259:7261 imp <> ::x_'/'_x_'\\'_x not
R7264:7267 imp <> ::x_'/'_x_'\\'_x not
R7241:7249 equiv <> iff_trans thm
prf 7307:7321 <> CAss_congruence
R7357:7362 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7363:7368 equiv <> cequiv def
R7383:7386 imp <> CAss constr
R7390:7392 equiv <> a1' var
R7388:7388 equiv <> i var
R7371:7374 imp <> CAss constr
R7378:7379 equiv <> a1 var
R7376:7376 equiv <> i var
R7344:7349 equiv <> aequiv def
R7354:7356 equiv <> a1' var
R7351:7352 equiv <> a1 var
R7456:7460 imp <> E_Ass constr
R7456:7460 imp <> E_Ass constr
R7470:7475 equiv <> aequiv def
R7535:7539 imp <> E_Ass constr
R7535:7539 imp <> E_Ass constr
R7549:7554 equiv <> aequiv def
prf 7597:7601 <> PimpP
R7616:7618 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7619:7619 equiv <> P var
R7615:7615 equiv <> P var
prf 7648:7664 <> CWhile_congruence
R7705:7708 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7722:7727 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7728:7733 equiv <> cequiv def
R7757:7762 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R7766:7769 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R7773:7776 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R7763:7765 equiv <> b1' var
R7770:7772 equiv <> c1' var
R7736:7741 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R7744:7747 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R7750:7753 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R7742:7743 equiv <> b1 var
R7748:7749 equiv <> c1 var
R7709:7714 equiv <> cequiv def
R7719:7721 equiv <> c1' var
R7716:7717 equiv <> c1 var
R7692:7697 equiv <> bequiv def
R7702:7704 equiv <> b1' var
R7699:7700 equiv <> b1 var
prf 8646:8660 <> CSeq_congruence
R8701:8704 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8718:8723 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8724:8729 equiv <> cequiv def
R8744:8745 imp <> :com_scope:x_';;'_x not
R8741:8743 equiv <> c1' var
R8746:8748 equiv <> c2' var
R8734:8735 imp <> :com_scope:x_';;'_x not
R8732:8733 equiv <> c1 var
R8736:8737 equiv <> c2 var
R8705:8710 equiv <> cequiv def
R8715:8717 equiv <> c2' var
R8712:8713 equiv <> c2 var
R8688:8693 equiv <> cequiv def
R8698:8700 equiv <> c1' var
R8695:8696 equiv <> c1 var
R8774:8779 equiv <> cequiv def
R8794:8799 equiv <> cequiv def
R8815:8820 equiv <> cequiv def
R8867:8871 imp <> E_Seq constr
R8867:8871 imp <> E_Seq constr
R8962:8966 imp <> E_Seq constr
R8962:8966 imp <> E_Seq constr
prf 9032:9045 <> CIf_congruence
R9089:9092 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9106:9109 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9123:9128 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9129:9134 equiv <> cequiv def
R9173:9176 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R9179:9184 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R9188:9193 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R9197:9199 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R9177:9178 equiv <> b' var
R9185:9187 equiv <> c1' var
R9194:9196 equiv <> c2' var
R9137:9140 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R9142:9147 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R9150:9155 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R9158:9160 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R9141:9141 equiv <> b var
R9148:9149 equiv <> c1 var
R9156:9157 equiv <> c2 var
R9110:9115 equiv <> cequiv def
R9120:9122 equiv <> c2' var
R9117:9118 equiv <> c2 var
R9093:9098 equiv <> cequiv def
R9103:9105 equiv <> c1' var
R9100:9101 equiv <> c1 var
R9078:9083 equiv <> bequiv def
R9087:9088 equiv <> b' var
R9085:9085 equiv <> b var
R9218:9223 equiv <> cequiv def
R9233:9238 equiv <> bequiv def
R9294:9301 imp <> E_IfTrue constr
R9294:9301 imp <> E_IfTrue constr
R9357:9365 imp <> E_IfFalse constr
R9357:9365 imp <> E_IfFalse constr
R9447:9454 imp <> E_IfTrue constr
R9447:9454 imp <> E_IfTrue constr
R9508:9516 imp <> E_IfFalse constr
R9508:9516 imp <> E_IfFalse constr
def 9574:9591 <> congruence_example
R9596:9601 equiv <> cequiv def
R9747:9754 imp <> :com_scope:x_';;'_x not
R9741:9745 imp <> :com_scope:x_'::='_x not
R9740:9740 imp <> X def
R9755:9758 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R9764:9781 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R9793:9834 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R9843:9850 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R9760:9762 imp <> :bexp_scope:x_'='_x not
R9759:9759 imp <> X def
R9783:9787 imp <> :com_scope:x_'::='_x not
R9782:9782 imp <> Y def
R9789:9791 imp <> :aexp_scope:x_'-'_x not
R9788:9788 imp <> X def
R9792:9792 imp <> X def
R9836:9840 imp <> :com_scope:x_'::='_x not
R9835:9835 imp <> Y def
R9636:9643 imp <> :com_scope:x_';;'_x not
R9630:9634 imp <> :com_scope:x_'::='_x not
R9629:9629 imp <> X def
R9644:9647 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R9653:9670 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R9678:9695 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R9704:9711 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R9649:9651 imp <> :bexp_scope:x_'='_x not
R9648:9648 imp <> X def
R9672:9676 imp <> :com_scope:x_'::='_x not
R9671:9671 imp <> Y def
R9697:9701 imp <> :com_scope:x_'::='_x not
R9696:9696 imp <> Y def
R9867:9881 equiv <> CSeq_congruence thm
R9867:9881 equiv <> CSeq_congruence thm
R9892:9902 equiv <> refl_cequiv thm
R9892:9902 equiv <> refl_cequiv thm
R9913:9926 equiv <> CIf_congruence thm
R9913:9926 equiv <> CIf_congruence thm
R9939:9949 equiv <> refl_bequiv thm
R9939:9949 equiv <> refl_bequiv thm
R9962:9976 equiv <> CAss_congruence thm
R9962:9976 equiv <> CAss_congruence thm
R9986:9991 equiv <> aequiv def
R10017:10026 Coq.Arith.Minus <> minus_diag syndef
R10017:10026 Coq.Arith.Minus <> minus_diag syndef
R10039:10049 equiv <> refl_cequiv thm
R10039:10049 equiv <> refl_cequiv thm
def 10069:10080 <> atrans_sound
R10096:10099 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10100:10103 imp <> aexp ind
R10092:10095 imp <> aexp ind
R10129:10132 imp <> aexp ind
R10140:10145 equiv <> aequiv def
R10150:10155 equiv <> atrans var
R10157:10157 equiv <> a var
R10147:10147 equiv <> a var
def 10172:10183 <> btrans_sound
R10199:10202 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10203:10206 imp <> bexp ind
R10195:10198 imp <> bexp ind
R10232:10235 imp <> bexp ind
R10243:10248 equiv <> bequiv def
R10253:10258 equiv <> btrans var
R10260:10260 equiv <> b var
R10250:10250 equiv <> b var
def 10275:10286 <> ctrans_sound
R10301:10304 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10305:10307 imp <> com ind
R10298:10300 imp <> com ind
R10333:10335 imp <> com ind
R10343:10348 equiv <> cequiv def
R10353:10358 equiv <> ctrans var
R10360:10360 equiv <> c var
R10350:10350 equiv <> c var
def 10374:10392 <> fold_constants_aexp
R10399:10402 imp <> aexp ind
R10407:10410 imp <> aexp ind
R10423:10423 equiv <> a var
R10434:10437 imp <> ANum constr
R10444:10447 imp <> ANum constr
R10455:10457 imp <> AId constr
R10464:10466 imp <> AId constr
R10474:10478 imp <> APlus constr
R10499:10499 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10522:10523 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10546:10546 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10500:10518 equiv <> fold_constants_aexp def
R10524:10542 equiv <> fold_constants_aexp def
R10563:10563 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10571:10572 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10580:10580 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10564:10567 imp <> ANum constr
R10573:10576 imp <> ANum constr
R10585:10588 imp <> ANum constr
R10593:10595 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R10606:10606 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10610:10611 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10615:10615 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10620:10624 imp <> APlus constr
R10646:10651 imp <> AMinus constr
R10672:10672 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10695:10696 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10719:10719 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10673:10691 equiv <> fold_constants_aexp def
R10697:10715 equiv <> fold_constants_aexp def
R10736:10736 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10744:10745 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10753:10753 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10737:10740 imp <> ANum constr
R10746:10749 imp <> ANum constr
R10758:10761 imp <> ANum constr
R10766:10768 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R10779:10779 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10783:10784 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10788:10788 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10793:10798 imp <> AMinus constr
R10820:10824 imp <> AMult constr
R10845:10845 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10868:10869 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10892:10892 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10846:10864 equiv <> fold_constants_aexp def
R10870:10888 equiv <> fold_constants_aexp def
R10909:10909 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10917:10918 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10926:10926 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10910:10913 imp <> ANum constr
R10919:10922 imp <> ANum constr
R10931:10934 imp <> ANum constr
R10939:10941 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R10952:10952 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10956:10957 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10961:10961 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10966:10970 imp <> AMult constr
def 11107:11125 <> fold_constants_bexp
R11132:11135 imp <> bexp ind
R11140:11143 imp <> bexp ind
R11156:11156 equiv <> b var
R11167:11171 imp <> BTrue constr
R11176:11180 imp <> BTrue constr
R11186:11191 imp <> BFalse constr
R11196:11201 imp <> BFalse constr
R11207:11209 imp <> BEq constr
R11232:11232 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11255:11256 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11279:11279 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11233:11251 equiv <> fold_constants_aexp def
R11257:11275 equiv <> fold_constants_aexp def
R11294:11294 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11302:11303 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11311:11311 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11295:11298 imp <> ANum constr
R11304:11307 imp <> ANum constr
R11329:11335 Coq.Arith.EqNat <> beq_nat syndef
R11359:11364 imp <> BFalse constr
R11348:11352 imp <> BTrue constr
R11374:11374 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11378:11379 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11383:11383 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11398:11400 imp <> BEq constr
R11424:11426 imp <> BLe constr
R11449:11449 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11472:11473 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11496:11496 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11450:11468 equiv <> fold_constants_aexp def
R11474:11492 equiv <> fold_constants_aexp def
R11511:11511 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11519:11520 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11528:11528 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11512:11515 imp <> ANum constr
R11521:11524 imp <> ANum constr
R11546:11548 Coq.Arith.Compare_dec <> leb syndef
R11572:11577 imp <> BFalse constr
R11561:11565 imp <> BTrue constr
R11587:11587 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11591:11592 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11596:11596 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11611:11613 imp <> BLe constr
R11637:11640 imp <> BNot constr
R11661:11679 equiv <> fold_constants_bexp def
R11698:11702 imp <> BTrue constr
R11707:11712 imp <> BFalse constr
R11722:11727 imp <> BFalse constr
R11732:11736 imp <> BTrue constr
R11753:11756 imp <> BNot constr
R11776:11779 imp <> BAnd constr
R11802:11802 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11825:11826 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11849:11849 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11803:11821 equiv <> fold_constants_bexp def
R11827:11845 equiv <> fold_constants_bexp def
R11864:11864 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11870:11871 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11877:11877 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11865:11869 imp <> BTrue constr
R11872:11876 imp <> BTrue constr
R11882:11886 imp <> BTrue constr
R11896:11896 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11902:11903 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11910:11910 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11897:11901 imp <> BTrue constr
R11904:11909 imp <> BFalse constr
R11915:11920 imp <> BFalse constr
R11930:11930 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11937:11938 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11944:11944 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11931:11936 imp <> BFalse constr
R11939:11943 imp <> BTrue constr
R11949:11954 imp <> BFalse constr
R11964:11964 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11971:11972 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11979:11979 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R11965:11970 imp <> BFalse constr
R11973:11978 imp <> BFalse constr
R11984:11989 imp <> BFalse constr
R11999:11999 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12003:12004 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12008:12008 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R12013:12016 imp <> BAnd constr
def 12053:12070 <> fold_constants_com
R12077:12079 imp <> com ind
R12084:12086 imp <> com ind
R12099:12099 equiv <> c var
R12110:12113 imp <> :com_scope:'SKIP' not
R12124:12127 imp <> :com_scope:'SKIP' not
R12134:12138 imp <> :com_scope:x_'::='_x not
R12150:12153 imp <> CAss constr
R12158:12176 equiv <> fold_constants_aexp def
R12187:12190 imp <> :com_scope:x_';;'_x not
R12203:12203 imp <> :com_scope:x_';;'_x not
R12225:12230 imp <> :com_scope:x_';;'_x not
R12252:12252 imp <> :com_scope:x_';;'_x not
R12204:12221 equiv <> fold_constants_com def
R12231:12248 equiv <> fold_constants_com def
R12258:12261 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R12263:12268 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R12271:12276 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R12279:12281 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R12298:12316 equiv <> fold_constants_bexp def
R12333:12337 imp <> BTrue constr
R12342:12359 equiv <> fold_constants_com def
R12372:12377 imp <> BFalse constr
R12382:12399 equiv <> fold_constants_com def
R12418:12421 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R12424:12429 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R12451:12477 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R12499:12501 imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R12430:12447 equiv <> fold_constants_com def
R12478:12495 equiv <> fold_constants_com def
R12517:12522 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R12524:12527 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R12529:12532 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R12549:12567 equiv <> fold_constants_bexp def
R12584:12588 imp <> BTrue constr
R12593:12598 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R12604:12607 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R12612:12615 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R12599:12603 imp <> BTrue constr
R12608:12611 imp <> :com_scope:'SKIP' not
R12625:12630 imp <> BFalse constr
R12635:12638 imp <> :com_scope:'SKIP' not
R12654:12659 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R12662:12666 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R12687:12691 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R12667:12684 equiv <> fold_constants_com def
R12686:12686 equiv <> c var
prf 12719:12743 <> fold_constants_aexp_sound
R12749:12760 equiv <> atrans_sound def
R12762:12780 equiv <> fold_constants_aexp def
prf 13037:13061 <> fold_constants_bexp_sound
R13066:13077 equiv <> btrans_sound def
R13079:13097 equiv <> fold_constants_bexp def
R13116:13127 equiv <> btrans_sound def
R13147:13152 equiv <> bequiv def
prf 13260:13283 <> fold_constants_com_sound
R13289:13300 equiv <> ctrans_sound def
R13302:13319 equiv <> fold_constants_com def
R13338:13349 equiv <> ctrans_sound def
R13392:13402 equiv <> refl_cequiv thm
R13392:13402 equiv <> refl_cequiv thm
R13413:13427 equiv <> CAss_congruence thm
R13413:13427 equiv <> CAss_congruence thm
R13436:13460 equiv <> fold_constants_aexp_sound prfax
R13436:13460 equiv <> fold_constants_aexp_sound prfax
R13471:13485 equiv <> CSeq_congruence thm
R13471:13485 equiv <> CSeq_congruence thm
def 13534:13547 <> optimize_0plus
R13552:13555 imp <> aexp ind
R13560:13563 imp <> aexp ind
R13580:13580 equiv <> e var
R13595:13598 imp <> ANum constr
R13615:13618 imp <> ANum constr
R13630:13632 imp <> AId constr
R13639:13641 imp <> AId constr
R13653:13657 imp <> APlus constr
R13660:13663 imp <> ANum constr
R13684:13697 equiv <> optimize_0plus def
R13710:13714 imp <> APlus constr
R13735:13739 imp <> APlus constr
R13762:13775 equiv <> optimize_0plus def
R13742:13755 equiv <> optimize_0plus def
R13789:13794 imp <> AMinus constr
R13815:13820 imp <> AMinus constr
R13843:13856 equiv <> optimize_0plus def
R13823:13836 equiv <> optimize_0plus def
R13870:13874 imp <> AMult constr
R13895:13899 imp <> AMult constr
R13922:13935 equiv <> optimize_0plus def
R13902:13915 equiv <> optimize_0plus def
def 13962:13971 <> subst_aexp
R13978:13983 Coq.Strings.String <> string ind
R13991:13994 imp <> aexp ind
R14002:14005 imp <> aexp ind
R14010:14013 imp <> aexp ind
R14026:14026 equiv <> a var
R14037:14040 imp <> ANum constr
R14053:14056 imp <> ANum constr
R14064:14066 imp <> AId constr
R14083:14092 maps <> beq_string def
R14094:14094 equiv <> i var
R14111:14113 imp <> AId constr
R14104:14104 equiv <> u var
R14122:14126 imp <> APlus constr
R14143:14147 imp <> APlus constr
R14170:14179 equiv <> subst_aexp def
R14183:14183 equiv <> u var
R14181:14181 equiv <> i var
R14150:14159 equiv <> subst_aexp def
R14163:14163 equiv <> u var
R14161:14161 equiv <> i var
R14193:14198 imp <> AMinus constr
R14215:14220 imp <> AMinus constr
R14243:14252 equiv <> subst_aexp def
R14256:14256 equiv <> u var
R14254:14254 equiv <> i var
R14223:14232 equiv <> subst_aexp def
R14236:14236 equiv <> u var
R14234:14234 equiv <> i var
R14266:14270 imp <> AMult constr
R14287:14291 imp <> AMult constr
R14314:14323 equiv <> subst_aexp def
R14327:14327 equiv <> u var
R14325:14325 equiv <> i var
R14294:14303 equiv <> subst_aexp def
R14307:14307 equiv <> u var
R14305:14305 equiv <> i var
def 14352:14371 <> subst_equiv_property
R14398:14403 equiv <> cequiv def
R14448:14450 imp <> :com_scope:x_';;'_x not
R14441:14445 imp <> :com_scope:x_'::='_x not
R14439:14440 equiv <> i1 var
R14446:14447 equiv <> a1 var
R14453:14457 imp <> :com_scope:x_'::='_x not
R14451:14452 equiv <> i2 var
R14458:14467 equiv <> subst_aexp def
R14475:14476 equiv <> a2 var
R14472:14473 equiv <> a1 var
R14469:14470 equiv <> i1 var
R14415:14417 imp <> :com_scope:x_';;'_x not
R14408:14412 imp <> :com_scope:x_'::='_x not
R14406:14407 equiv <> i1 var
R14413:14414 equiv <> a1 var
R14420:14424 imp <> :com_scope:x_'::='_x not
R14418:14419 equiv <> i2 var
R14425:14426 equiv <> a2 var
prf 14489:14501 <> subst_inequiv
R14507:14508 Coq.Init.Logic <> :type_scope:'~'_x not
R14509:14528 equiv <> subst_equiv_property def
prf 15193:15208 <> inequiv_exercise
R15213:15214 Coq.Init.Logic <> :type_scope:'~'_x not
R15215:15220 equiv <> cequiv def
R15248:15251 imp <> :com_scope:'SKIP' not
R15223:15228 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R15234:15237 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R15242:15245 imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R15229:15233 imp <> BTrue constr
R15238:15241 imp <> :com_scope:'SKIP' not
R15268:15270 Coq.Init.Logic <> not def
R15296:15301 equiv <> cequiv def
R15341:15343 imp <> ::x_'/'_x_'\\'_x not
R15346:15349 imp <> ::x_'/'_x_'\\'_x not
R15337:15340 imp <> :com_scope:'SKIP' not
R15344:15345 equiv <> st var
R15350:15351 equiv <> st var
R15341:15343 imp <> ::x_'/'_x_'\\'_x not
R15346:15349 imp <> ::x_'/'_x_'\\'_x not
R15337:15340 imp <> :com_scope:'SKIP' not
R15344:15345 equiv <> st var
R15350:15351 equiv <> st var
R15361:15366 imp <> E_Skip constr
R15361:15366 imp <> E_Skip constr
